{
  "id": "C115F497F7F548E9B8173C87B770ED71",
  "title": "All Grades (K-12) & w/ Standard Clarifications",
  "subject": "Computer Science (2017)",
  "normalizedSubject": null,
  "educationLevels": [
    "K",
    "Pre-K",
    "01",
    "02",
    "03",
    "04",
    "05",
    "06",
    "07",
    "08",
    "09",
    "10",
    "11",
    "12"
  ],
  "cspStatus": {
    "value": "visible",
    "notes": null
  },
  "license": {
    "title": "CC BY 4.0 US",
    "URL": "http://creativecommons.org/licenses/by/4.0/us/",
    "rightsHolder": "Common Curriculum, Inc."
  },
  "document": {
    "sourceURL": "https://csteachers.org/k12standards/",
    "title": "Computer Science Teachers Association (CSTA)"
  },
  "jurisdiction": {
    "id": "C2D26B5D03E74C7B9AFFE6F592601728",
    "title": "Computer Science Teachers Association"
  },
  "standards": {
    "6384306418064CEDB85598944DF66B2A": {
      "id": "6384306418064CEDB85598944DF66B2A",
      "asnIdentifier": null,
      "position": 150000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "3B-IC-28",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Debate laws and regulations that impact the development and use of software.",
      "comments": [],
      "ancestorIds": [
        "3ABA3D7554374185B0F3E13ADB5C20E3",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "3ABA3D7554374185B0F3E13ADB5C20E3"
    },
    "0E3D71C2490A4E29B0AB2508FF3213C3": {
      "id": "0E3D71C2490A4E29B0AB2508FF3213C3",
      "asnIdentifier": null,
      "position": 149000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3B-IC-27",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Predict how computational innovations that have revolutionized aspects of our culture might evolve.\n\nClarification: Areas to consider might include education, healthcare, art/entertainment, and energy.",
      "comments": [],
      "ancestorIds": [
        "3ABA3D7554374185B0F3E13ADB5C20E3",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "3ABA3D7554374185B0F3E13ADB5C20E3"
    },
    "17061C07922841719904D443C4FF748F": {
      "id": "17061C07922841719904D443C4FF748F",
      "asnIdentifier": null,
      "position": 148000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3B-IC-26",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate the impact of equity, access, and influence on the distribution of computing resources in a global society.",
      "comments": [],
      "ancestorIds": [
        "3ABA3D7554374185B0F3E13ADB5C20E3",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "3ABA3D7554374185B0F3E13ADB5C20E3"
    },
    "F32F9BA43E0D46F9A69E5D0BE3765732": {
      "id": "F32F9BA43E0D46F9A69E5D0BE3765732",
      "asnIdentifier": null,
      "position": 147000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3B-IC-25",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate computational artifacts to maximize their beneficial effects and minimize harmful effects on society.",
      "comments": [],
      "ancestorIds": [
        "3ABA3D7554374185B0F3E13ADB5C20E3",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "3ABA3D7554374185B0F3E13ADB5C20E3"
    },
    "3ABA3D7554374185B0F3E13ADB5C20E3": {
      "id": "3ABA3D7554374185B0F3E13ADB5C20E3",
      "asnIdentifier": null,
      "position": 146000,
      "depth": 1,
      "listId": "E",
      "statementNotation": "3B-IC",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Impacts of Computing",
      "comments": [],
      "ancestorIds": [
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "5CE066CFAE86415A9F1EFBD0D6C0BE11"
    },
    "A0691755F69C42E2B3E9ACDDA5DE4BB8": {
      "id": "A0691755F69C42E2B3E9ACDDA5DE4BB8",
      "asnIdentifier": null,
      "position": 145000,
      "depth": 2,
      "listId": "17",
      "statementNotation": "3B-AP-24",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare multiple programming languages and discuss how their features make them suitable for solving different types of problems.\n\nClarification: Examples of features include blocks versus text, indentation versus curly braces, and high-level versus low-level.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "BFE72340C2724DCB960E10E930274565": {
      "id": "BFE72340C2724DCB960E10E930274565",
      "asnIdentifier": null,
      "position": 144000,
      "depth": 2,
      "listId": "16",
      "statementNotation": "3B-AP-23",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate key qualities of a program through a process such as a code review.\n\nClarification: Examples of qualities could include correctness, usability, readability, efficiency, portability and scalability.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "3CECBD6907824CB8BF875F2712162A8C": {
      "id": "3CECBD6907824CB8BF875F2712162A8C",
      "asnIdentifier": null,
      "position": 143000,
      "depth": 2,
      "listId": "15",
      "statementNotation": "3B-AP-22",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Modify an existing program to add additional functionality and discuss intended and unintended implications (e.g., breaking other functionality).\n\nClarification: For instance, changes made to a method or function signature could break invocations of that method elsewhere in a system.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "A2F875AAD0314FE48766C661E87A72AA": {
      "id": "A2F875AAD0314FE48766C661E87A72AA",
      "asnIdentifier": null,
      "position": 142000,
      "depth": 2,
      "listId": "14",
      "statementNotation": "3B-AP-21",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Develop and use a series of test cases to verify that a program performs according to its design specifications.\n\nClarification: At this level, students are expected to select their own test cases.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "F6C497B0CC0146FC8616FA133A8D16F3": {
      "id": "F6C497B0CC0146FC8616FA133A8D16F3",
      "asnIdentifier": null,
      "position": 141000,
      "depth": 2,
      "listId": "13",
      "statementNotation": "3B-AP-20",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use version control systems, integrated development environments (IDEs), and collaborative tools and practices (code documentation) in a group software project.\n\nClarification: Group software projects can be assigned or student-selected.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "34A4DFCAC0FB4255943216506FCC80C3": {
      "id": "34A4DFCAC0FB4255943216506FCC80C3",
      "asnIdentifier": null,
      "position": 140000,
      "depth": 2,
      "listId": "12",
      "statementNotation": "3B-AP-19",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Develop programs for multiple computing platforms.\n\nClarification: Example platforms could include: computer desktop, web, or mobile.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "7005BF0C34D54627A78D76DFB89FA086": {
      "id": "7005BF0C34D54627A78D76DFB89FA086",
      "asnIdentifier": null,
      "position": 139000,
      "depth": 2,
      "listId": "11",
      "statementNotation": "3B-AP-18",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain security issues that might lead to compromised computer programs.\n\nClarification: For example, common issues include lack of bounds checking, poor input validation, and circular references.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "8A6FAE6B10074E049835ECD2F9BDF0CF": {
      "id": "8A6FAE6B10074E049835ECD2F9BDF0CF",
      "asnIdentifier": null,
      "position": 138000,
      "depth": 2,
      "listId": "10",
      "statementNotation": "3B-AP-17",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Plan and develop programs for broad audiences using a software life cycle process.\n\nClarification: Processes could include agile, spiral, or waterfall.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "D2F018BFFE5148ECAC27EA335C56DEC9": {
      "id": "D2F018BFFE5148ECAC27EA335C56DEC9",
      "asnIdentifier": null,
      "position": 137000,
      "depth": 2,
      "listId": "9",
      "statementNotation": "3B-AP-16",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Demonstrate code reuse by creating programming solutions using libraries and APIs.\n\nClarification: Libraries and APIs can be student-created or common graphics libraries or maps APIs, for example.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "35D6B67162594DD6A9E62F9977084516": {
      "id": "35D6B67162594DD6A9E62F9977084516",
      "asnIdentifier": null,
      "position": 136000,
      "depth": 2,
      "listId": "8",
      "statementNotation": "3B-AP-15",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Analyze a large-scale computational problem and identify generalizable patterns that can be applied to a solution.\n\nClarification: As students encounter complex, real-world problems that span multiple disciplines or social systems, they should decompose complex problems into manageable subproblems that could potentially be solved with programs or procedures that already exist. For example, students could create an app to solve a community problem by connecting to an online database through an application programming interface (API).",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "4DC0559D6B6B4DF488A719413B5195B9": {
      "id": "4DC0559D6B6B4DF488A719413B5195B9",
      "asnIdentifier": null,
      "position": 135000,
      "depth": 2,
      "listId": "7",
      "statementNotation": "3B-AP-14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Construct solutions to problems using student-created components, such as procedures, modules and/or objects.\n\nClarification: Object-oriented programming is optional at this level. Problems can be assigned or student-selected.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "950535F490D4482E90A84A9EDA08582D": {
      "id": "950535F490D4482E90A84A9EDA08582D",
      "asnIdentifier": null,
      "position": 134000,
      "depth": 2,
      "listId": "6",
      "statementNotation": "3B-AP-13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Illustrate the flow of execution of a recursive algorithm.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "8D8A28FDEC6D4887A90FD91F7EA24A1C": {
      "id": "8D8A28FDEC6D4887A90FD91F7EA24A1C",
      "asnIdentifier": null,
      "position": 133000,
      "depth": 2,
      "listId": "5",
      "statementNotation": "3B-AP-12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare and contrast fundamental data structures and their uses.\n\nClarification: Examples could include strings, lists, arrays, stacks, and queues.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "6D00C129E182404A92581310D98FB35A": {
      "id": "6D00C129E182404A92581310D98FB35A",
      "asnIdentifier": null,
      "position": 132000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "3B-AP-11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate algorithms in terms of their efficiency, correctness, and clarity.\n\nClarification: Examples could include sorting and searching.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "326916CDFFBF4F15B391336C5D64765D": {
      "id": "326916CDFFBF4F15B391336C5D64765D",
      "asnIdentifier": null,
      "position": 131000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3B-AP-10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use and adapt classic algorithms to solve computational problems.\n\nClarification: Examples could include sorting and searching.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "F604E33F23C04247B83A5B2CBD23B8E2": {
      "id": "F604E33F23C04247B83A5B2CBD23B8E2",
      "asnIdentifier": null,
      "position": 130000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3B-AP-09",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Implement an artificial intelligence algorithm to play a game against a human opponent or solve a problem.\n\nClarification: Games do not have to be complex. Simple guessing games, Tic-Tac-Toe, or simple robot commands will be sufficient.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "99581D7C75954F23809280F446CDDC05": {
      "id": "99581D7C75954F23809280F446CDDC05",
      "asnIdentifier": null,
      "position": 129000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3B-AP-08",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe how artificial intelligence drives many software and physical systems.\n\nClarification: Examples include digital ad delivery, self-driving cars, and credit card fraud detection.",
      "comments": [],
      "ancestorIds": [
        "57B0CE9F15B74F24BA946C026060B3FC",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "57B0CE9F15B74F24BA946C026060B3FC"
    },
    "57B0CE9F15B74F24BA946C026060B3FC": {
      "id": "57B0CE9F15B74F24BA946C026060B3FC",
      "asnIdentifier": null,
      "position": 128000,
      "depth": 1,
      "listId": "D",
      "statementNotation": "3B-AP",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Algorithms & Programming",
      "comments": [],
      "ancestorIds": [
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "5CE066CFAE86415A9F1EFBD0D6C0BE11"
    },
    "3D103677975449B9A5FA11DCBEBECAB6": {
      "id": "3D103677975449B9A5FA11DCBEBECAB6",
      "asnIdentifier": null,
      "position": 127000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3B-DA-07",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate the ability of models and simulations to test and support the refinement of hypotheses.",
      "comments": [],
      "ancestorIds": [
        "856B8501FB644B21A99C3977046B36CA",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "856B8501FB644B21A99C3977046B36CA"
    },
    "349BBB8E49EE4507A62DEFE8672079A0": {
      "id": "349BBB8E49EE4507A62DEFE8672079A0",
      "asnIdentifier": null,
      "position": 126000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3B-DA-06",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Select data collection tools and techniques to generate data sets that support a claim or communicate information.",
      "comments": [],
      "ancestorIds": [
        "856B8501FB644B21A99C3977046B36CA",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "856B8501FB644B21A99C3977046B36CA"
    },
    "D4E4DC2E7A0246DD8262C2515E34ABED": {
      "id": "D4E4DC2E7A0246DD8262C2515E34ABED",
      "asnIdentifier": null,
      "position": 125000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3B-DA-05",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use data analysis tools and techniques to identify patterns in data representing complex systems.\n\nClarification: For example, identify trends in a dataset representing social media interactions, movie reviews, or shopping patterns.",
      "comments": [],
      "ancestorIds": [
        "856B8501FB644B21A99C3977046B36CA",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "856B8501FB644B21A99C3977046B36CA"
    },
    "856B8501FB644B21A99C3977046B36CA": {
      "id": "856B8501FB644B21A99C3977046B36CA",
      "asnIdentifier": null,
      "position": 124000,
      "depth": 1,
      "listId": "C",
      "statementNotation": "3B-DA",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data & Analysis",
      "comments": [],
      "ancestorIds": [
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "5CE066CFAE86415A9F1EFBD0D6C0BE11"
    },
    "41A4109921C3477496EF8D71C4DEF849": {
      "id": "41A4109921C3477496EF8D71C4DEF849",
      "asnIdentifier": null,
      "position": 123000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3B-NI-04",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare ways software developers protect devices and information from unauthorized access.\n\nClarification: Examples of security concerns to consider: encryption and authentication strategies, secure coding, and safeguarding keys.",
      "comments": [],
      "ancestorIds": [
        "4B827400D65C4341860DFEBF8A236B96",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "4B827400D65C4341860DFEBF8A236B96"
    },
    "946BCCB99C284D0AA5326579356F7476": {
      "id": "946BCCB99C284D0AA5326579356F7476",
      "asnIdentifier": null,
      "position": 122000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3B-NI-03",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe the issues that impact network functionality (e.g., bandwidth, load, delay, topology).\n\nClarification: Recommend use of free online network simulators to explore how these issues impact network functionality.",
      "comments": [],
      "ancestorIds": [
        "4B827400D65C4341860DFEBF8A236B96",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "4B827400D65C4341860DFEBF8A236B96"
    },
    "4B827400D65C4341860DFEBF8A236B96": {
      "id": "4B827400D65C4341860DFEBF8A236B96",
      "asnIdentifier": null,
      "position": 121000,
      "depth": 1,
      "listId": "B",
      "statementNotation": "3B-NI",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Networks & the Internet",
      "comments": [],
      "ancestorIds": [
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "5CE066CFAE86415A9F1EFBD0D6C0BE11"
    },
    "4876336E107E432BA6D0C875CD82E778": {
      "id": "4876336E107E432BA6D0C875CD82E778",
      "asnIdentifier": null,
      "position": 120000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3B-CS-02",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Illustrate ways computing systems implement logic, input, and output through hardware components.\n\nClarification: Examples of components could include logic gates and IO pins.",
      "comments": [],
      "ancestorIds": [
        "D566EF62273740629CDB980C337C7795",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "D566EF62273740629CDB980C337C7795"
    },
    "ADAE36BCBDCE4B149965C08A9258ED45": {
      "id": "ADAE36BCBDCE4B149965C08A9258ED45",
      "asnIdentifier": null,
      "position": 119000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3B-CS-01",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Categorize the roles of operating system software.\n\nClarification: Examples of roles could include memory management, data storage/retrieval, processes management, and access control.",
      "comments": [],
      "ancestorIds": [
        "D566EF62273740629CDB980C337C7795",
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "D566EF62273740629CDB980C337C7795"
    },
    "D566EF62273740629CDB980C337C7795": {
      "id": "D566EF62273740629CDB980C337C7795",
      "asnIdentifier": null,
      "position": 118000,
      "depth": 1,
      "listId": "A",
      "statementNotation": "3B-CS",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing Systems",
      "comments": [],
      "ancestorIds": [
        "5CE066CFAE86415A9F1EFBD0D6C0BE11"
      ],
      "parentId": "5CE066CFAE86415A9F1EFBD0D6C0BE11"
    },
    "5CE066CFAE86415A9F1EFBD0D6C0BE11": {
      "id": "5CE066CFAE86415A9F1EFBD0D6C0BE11",
      "asnIdentifier": null,
      "position": 117000,
      "depth": 0,
      "listId": "V",
      "statementNotation": "3B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "11-12 Standards",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "C4A0CC4CA2914E00ACB00DB65BA6DA68": {
      "id": "C4A0CC4CA2914E00ACB00DB65BA6DA68",
      "asnIdentifier": null,
      "position": 116000,
      "depth": 2,
      "listId": "7",
      "statementNotation": "3A-IC-30",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate the social and economic implications of privacy in the context of safety, law, or ethics.        \n\nClarification: Laws govern many aspects of computing, such as privacy, data, property, information, and identity. International differences in laws and ethics have implications for computing. Students might review case studies or current events which present an ethical dilemma when an individual's right to privacy is at odds with the safety, security, or wellbeing of a community.",
      "comments": [],
      "ancestorIds": [
        "07FDE6CE0B4B446E8CB66720D1DA1102",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "07FDE6CE0B4B446E8CB66720D1DA1102"
    },
    "DEF731A28EC94984855C4E90E0749806": {
      "id": "DEF731A28EC94984855C4E90E0749806",
      "asnIdentifier": null,
      "position": 115000,
      "depth": 2,
      "listId": "6",
      "statementNotation": "3A-IC-29",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain the privacy concerns related to the collection and generation of data through automated processes that may not be evident to users.\n\nClarification: Data can be collected and aggregated across millions of people, even when they are not actively engaging with or physically near the data collection devices. This automated and nonevident collection can raise privacy concerns, such as social media sites mining an account even when the user is not online. Other examples include surveillance video used in a store to track customers for security or information about purchase habits or the monitoring of road traffic to change signals in real time to improve road efficiency without drivers being aware. Methods and devices for collecting data can differ by the amount of storage required, level of detail collected, and sampling rates.",
      "comments": [],
      "ancestorIds": [
        "07FDE6CE0B4B446E8CB66720D1DA1102",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "07FDE6CE0B4B446E8CB66720D1DA1102"
    },
    "3EB6234E4ACC457E9FDF4A48B8697F01": {
      "id": "3EB6234E4ACC457E9FDF4A48B8697F01",
      "asnIdentifier": null,
      "position": 114000,
      "depth": 2,
      "listId": "5",
      "statementNotation": "3A-IC-28",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain the beneficial and harmful effects that intellectual property laws can have on innovation.\n\nClarification: Laws govern many aspects of computing, such as privacy, data, property, information, and identity. These laws can have beneficial and harmful effects, such as expediting or delaying advancements in computing and protecting or infringing upon people’s rights. International differences in laws and ethics have implications for computing. For examples, laws that mandate the blocking of some file-sharing websites may reduce online piracy but can restrict the right to access information. Firewalls can be used to block harmful viruses and malware but can also be used for media censorship. Students should be aware of intellectual property laws and be able to explain how they are used to protect the interests of innovators and how patent trolls abuse the laws for financial gain.",
      "comments": [],
      "ancestorIds": [
        "07FDE6CE0B4B446E8CB66720D1DA1102",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "07FDE6CE0B4B446E8CB66720D1DA1102"
    },
    "A1C52053D76A41ADB433083D6702C0F4": {
      "id": "A1C52053D76A41ADB433083D6702C0F4",
      "asnIdentifier": null,
      "position": 113000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "3A-IC-27",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use tools and methods for collaboration on a project to increase connectivity of people in different cultures and career fields.\n\nClarification: Many aspects of society, especially careers, have been affected by the degree of communication afforded by computing. The increased connectivity between people in different cultures and in different career fields has changed the nature and content of many careers. Students should explore different collaborative tools and methods used to solicit input from team members, classmates, and others, such as participation in online forums or local communities. For example, students could compare ways different social media tools could help a team become more cohesive.",
      "comments": [],
      "ancestorIds": [
        "07FDE6CE0B4B446E8CB66720D1DA1102",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "07FDE6CE0B4B446E8CB66720D1DA1102"
    },
    "621D4FF303B14811ADD95502499B1B3F": {
      "id": "621D4FF303B14811ADD95502499B1B3F",
      "asnIdentifier": null,
      "position": 112000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3A-IC-26",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Demonstrate ways a given algorithm applies to problems across disciplines.\n\nClarification: Computation can share features with disciplines such as art and music by algorithmically translating human intention into an artifact. Students should be able to identify real-world problems that span multiple disciplines, such as increasing bike safety with new helmet technology, and that can be solved computationally.",
      "comments": [],
      "ancestorIds": [
        "07FDE6CE0B4B446E8CB66720D1DA1102",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "07FDE6CE0B4B446E8CB66720D1DA1102"
    },
    "E5568AFA50604BBF8CA874E87A995D91": {
      "id": "E5568AFA50604BBF8CA874E87A995D91",
      "asnIdentifier": null,
      "position": 111000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3A-IC-25",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Test and refine computational artifacts to reduce bias and equity deficits.\n\nClarification: Biases could include incorrect assumptions developers have made about their user base. Equity deficits include minimal exposure to computing, access to education, and training opportunities. Students should begin to identify potential bias during the design process to maximize accessibility in product design and become aware of professionally accepted accessibility standards to evaluate computational artifacts for accessibility.",
      "comments": [],
      "ancestorIds": [
        "07FDE6CE0B4B446E8CB66720D1DA1102",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "07FDE6CE0B4B446E8CB66720D1DA1102"
    },
    "673A6B8AAB8843C38B4EF24D738932C3": {
      "id": "673A6B8AAB8843C38B4EF24D738932C3",
      "asnIdentifier": null,
      "position": 110000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3A-IC-24",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate the ways computing impacts personal, ethical, social, economic, and cultural practices.\n\nClarification: Computing may improve, harm, or maintain practices.  Equity deficits, such as minimal exposure to computing, access to education, and training opportunities, are related to larger, systemic problems in society. Students should be able to evaluate the accessibility of a product to a broad group of end users, such as people who lack access to broadband or who have various disabilities. Students should also begin to identify potential bias during the design process to maximize accessibility in product design.",
      "comments": [],
      "ancestorIds": [
        "07FDE6CE0B4B446E8CB66720D1DA1102",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "07FDE6CE0B4B446E8CB66720D1DA1102"
    },
    "07FDE6CE0B4B446E8CB66720D1DA1102": {
      "id": "07FDE6CE0B4B446E8CB66720D1DA1102",
      "asnIdentifier": null,
      "position": 109000,
      "depth": 1,
      "listId": "E",
      "statementNotation": "3A-IC",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Impacts of Computing",
      "comments": [],
      "ancestorIds": [
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "95E1E2430A1E4408A749A02A8CB69322"
    },
    "E46C49BFCF72468291ACCAD5FE31D056": {
      "id": "E46C49BFCF72468291ACCAD5FE31D056",
      "asnIdentifier": null,
      "position": 108000,
      "depth": 2,
      "listId": "11",
      "statementNotation": "3A-AP-23",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Document design decisions using text, graphics, presentations, and/or demonstrations in the development of complex programs.\n\nClarification: Complex programs are designed as systems of interacting modules, each with a specific role, coordinating for a common overall purpose. These modules can be procedures within a program; combinations of data and procedures; or independent, but interrelated, programs. The development of complex programs is aided by resources such as libraries and tools to edit and manage parts of the program.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "B874F4CFBD4A4845A8C167FE3659E6BE": {
      "id": "B874F4CFBD4A4845A8C167FE3659E6BE",
      "asnIdentifier": null,
      "position": 107000,
      "depth": 2,
      "listId": "10",
      "statementNotation": "3A-AP-22",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Design and develop computational artifacts working in team roles using collaborative tools.\n\nClarification: Collaborative tools could be as complex as source code version control system or as simple as a collaborative word processor. Team roles in pair programming are driver and navigator but could be more specialized in larger teams. As programs grow more complex, the choice of resources that aid program development becomes increasingly important and should be made by the students. Students might work as a team to develop a mobile application that addresses a problem relevant to the school or community, selecting appropriate tools to establish and manage the project timeline; design, share, and revise graphical user interface elements; and track planned, in-progress, and completed components.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "532685569EAC44E8B3AE74A027436E6B": {
      "id": "532685569EAC44E8B3AE74A027436E6B",
      "asnIdentifier": null,
      "position": 106000,
      "depth": 2,
      "listId": "9",
      "statementNotation": "3A-AP-21",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate and refine computational artifacts to make them more usable and accessible.\t\n\nClarification: Testing and refinement is the deliberate and iterative process of improving a computational artifact. This process includes debugging (identifying and fixing errors) and comparing actual outcomes to intended outcomes. Students should respond to the changing needs and expectations of end users and improve the performance, reliability, usability, and accessibility of artifacts. For example, students could incorporate feedback from a variety of end users to help guide the size and placement of menus and buttons in a user interface.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "3E75072A50A44D04842B9EBCA863F309": {
      "id": "3E75072A50A44D04842B9EBCA863F309",
      "asnIdentifier": null,
      "position": 105000,
      "depth": 2,
      "listId": "8",
      "statementNotation": "3A-AP-20",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate licenses that limit or restrict use of computational artifacts when using resources such as libraries.\n\nClarification: Examples of software licenses include copyright, freeware, and the many open-source licensing schemes. At previous levels, students adhered to licensing schemes. At this level, they should consider licensing implications for their own work, especially when incorporating libraries and other resources. Students might consider two software libraries that address a similar need, justifying their choice based on the library that has the least restrictive license.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "0A8F5C97C82A42E6872A4B2B6AF0D42E": {
      "id": "0A8F5C97C82A42E6872A4B2B6AF0D42E",
      "asnIdentifier": null,
      "position": 104000,
      "depth": 2,
      "listId": "7",
      "statementNotation": "3A-AP-19",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Systematically design and develop programs for broad audiences by incorporating feedback from users.\n\nClarification: Examples of programs could include games, utilities, and mobile applications. Students at lower levels collect feedback and revise programs. At this level, students should do so through a systematic process that includes feedback from broad audiences. Students might create a user satisfaction survey and brainstorm distribution methods that could yield feedback from a diverse audience, documenting the process they took to incorporate selected feedback in product revisions.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "E224B6152E81451D8113481D06504F25": {
      "id": "E224B6152E81451D8113481D06504F25",
      "asnIdentifier": null,
      "position": 103000,
      "depth": 2,
      "listId": "6",
      "statementNotation": "3A-AP-18",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create artifacts by using procedures within a program, combinations of data and procedures, or independent but interrelated programs.\n\nClarification: Computational artifacts can be created by combining and modifying existing artifacts or by developing new artifacts. Examples of computational artifacts include programs, simulations, visualizations, digital animations, robotic systems, and apps. Complex programs are designed as systems of interacting modules, each with a specific role, coordinating for a common overall purpose. Modules allow for better management of complex tasks. The focus at this level is understanding a program as a system with relationships between modules. The choice of implementation, such as programming language or paradigm, may vary. Students could incorporate computer vision libraries to increase the capabilities of a robot or leverage open-source JavaScript libraries to expand the functionality of a web application.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "0113C14192B94B1CA3B912F74BEAF4DD": {
      "id": "0113C14192B94B1CA3B912F74BEAF4DD",
      "asnIdentifier": null,
      "position": 102000,
      "depth": 2,
      "listId": "5",
      "statementNotation": "3A-AP-17",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Decompose problems into smaller components through systematic analysis, using constructs such as procedures, modules, and/or objects.\n\nClarification: At this level, students should decompose complex problems into manageable subproblems that could potentially be solved with programs or procedures that already exist. For example, students could create an app to solve a community problem by connecting to an online database through an application programming interface (API).",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "A1EA94362AF540238001B0E9485F7279": {
      "id": "A1EA94362AF540238001B0E9485F7279",
      "asnIdentifier": null,
      "position": 101000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "3A-AP-16",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Design and iteratively develop computational artifacts for practical intent, personal expression, or to address a societal issue by using events to initiate instructions.\n\nClarification: In this context, relevant computational artifacts include programs, mobile apps, or web apps. Events can be user-initiated, such as a button press, or system-initiated, such as a timer firing. At previous levels, students have learned to create and call procedures. Here, students design procedures that are called by events. Students might create a mobile app that updates a list of nearby points of interest when the device detects that its location has been changed.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "89976758831840AFB4D129E3F83209F0": {
      "id": "89976758831840AFB4D129E3F83209F0",
      "asnIdentifier": null,
      "position": 100000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3A-AP-15",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Justify the selection of specific control structures when tradeoffs involve implementation, readability, and program performance, and explain the benefits and drawbacks of choices made.\n\nClarification: Implementation includes the choice of programming language, which affects the time and effort required to create a program. Readability refers to how clear the program is to other programmers and can be improved through documentation. The discussion of performance is limited to a theoretical understanding of execution time and storage requirements; a quantitative analysis is not expected. Control structures at this level may include conditional statements, loops, event handlers, and recursion. For example, students might compare the readability and program performance of iterative and recursive implementations of procedures that calculate the Fibonacci sequence.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "09501AA656FD4604BC25CB5C90011F4D": {
      "id": "09501AA656FD4604BC25CB5C90011F4D",
      "asnIdentifier": null,
      "position": 99000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3A-AP-14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use lists to simplify solutions, generalizing computational problems instead of repeatedly using simple variables.\n\nClarification: Students should be able to identify common features in multiple segments of code and substitute a single segment that uses lists (arrays) to account for the differences.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "D4ABF1DF848747688519A5947945050C": {
      "id": "D4ABF1DF848747688519A5947945050C",
      "asnIdentifier": null,
      "position": 98000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3A-AP-13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create prototypes that use algorithms to solve computational problems by leveraging prior student knowledge and personal interests.\n\nClarification: A prototype is a computational artifact that demonstrates the core functionality of a product or process.  Prototypes are useful for getting early feedback in the design process, and can yield insight into the feasibility of a product.  The process of developing computational artifacts embraces both creative expression and the exploration of ideas to create prototypes and solve computational problems. Students create artifacts that are personally relevant or beneficial to their community and beyond. Students should develop artifacts in response to a task or a computational problem that demonstrate the performance, reusability, and ease of implementation of an algorithm.",
      "comments": [],
      "ancestorIds": [
        "B66655DA7E614FC89BC4FD0F5B9EF812",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "B66655DA7E614FC89BC4FD0F5B9EF812"
    },
    "B66655DA7E614FC89BC4FD0F5B9EF812": {
      "id": "B66655DA7E614FC89BC4FD0F5B9EF812",
      "asnIdentifier": null,
      "position": 97000,
      "depth": 1,
      "listId": "D",
      "statementNotation": "3A-AP",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Algorithms & Programming",
      "comments": [],
      "ancestorIds": [
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "95E1E2430A1E4408A749A02A8CB69322"
    },
    "038CC290C4E44AF1800725B60499D246": {
      "id": "038CC290C4E44AF1800725B60499D246",
      "asnIdentifier": null,
      "position": 96000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "3A-DA-12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create computational models that represent the relationships among different elements of data collected from a phenomenon or process.\n\nClarification: Computational models make predictions about processes or phenomenon based on selected data and features. The amount, quality, and diversity of data and the features chosen can affect the quality of a model and ability to understand a system. Predictions or inferences are tested to validate models. Students should model phenomena as systems, with rules governing the interactions within the system. Students should analyze and evaluate these models against real-world observations. For example, students might create a simple producer–consumer ecosystem model using a programming tool. Eventually, they could progress to creating more complex and realistic interactions between species, such as predation, competition, or symbiosis, and evaluate the model based on data gathered from nature.",
      "comments": [],
      "ancestorIds": [
        "4101B457EFBE49D4B5A874AE14234ABE",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "4101B457EFBE49D4B5A874AE14234ABE"
    },
    "99F0E78248EC451D982A3F642D380C6C": {
      "id": "99F0E78248EC451D982A3F642D380C6C",
      "asnIdentifier": null,
      "position": 95000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3A-DA-11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create interactive data visualizations using software tools to help others better understand real-world phenomena.\n\nClarification: People transform, generalize, simplify, and present large data sets in different ways to influence how other people interpret and understand the underlying information. Examples include visualization, aggregation, rearrangement, and application of mathematical operations. People use software tools or programming to create powerful, interactive data visualizations and perform a range of mathematical operations to transform and analyze data. Students should model phenomena as systems, with rules governing the interactions within the system and evaluate these models against real-world observations. For example, flocking behaviors, queueing, or life cycles. Google Fusion Tables can provide access to data visualization online.",
      "comments": [],
      "ancestorIds": [
        "4101B457EFBE49D4B5A874AE14234ABE",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "4101B457EFBE49D4B5A874AE14234ABE"
    },
    "E11806CC84AF4EE2B82AF043FBDA3A1F": {
      "id": "E11806CC84AF4EE2B82AF043FBDA3A1F",
      "asnIdentifier": null,
      "position": 94000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3A-DA-10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate the tradeoffs in how data elements are organized and where data is stored.\t\n\nClarification: People make choices about how data elements are organized and where data is stored. These choices affect cost, speed, reliability, accessibility, privacy, and integrity. Students should evaluate whether a chosen solution is most appropriate for a particular problem. Students might consider the cost, speed, reliability, accessibility, privacy, and integrity tradeoffs between storing photo data on a mobile device versus in the cloud.",
      "comments": [],
      "ancestorIds": [
        "4101B457EFBE49D4B5A874AE14234ABE",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "4101B457EFBE49D4B5A874AE14234ABE"
    },
    "00E63B4341394CE181893CFE4D065D26": {
      "id": "00E63B4341394CE181893CFE4D065D26",
      "asnIdentifier": null,
      "position": 93000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3A-DA-09",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Translate between different bit representations of real-world phenomena, such as characters, numbers, and images.        \n\nClarification: For example, convert hexadecimal color codes to decimal percentages, ASCII/Unicode representation, and logic gates.",
      "comments": [],
      "ancestorIds": [
        "4101B457EFBE49D4B5A874AE14234ABE",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "4101B457EFBE49D4B5A874AE14234ABE"
    },
    "4101B457EFBE49D4B5A874AE14234ABE": {
      "id": "4101B457EFBE49D4B5A874AE14234ABE",
      "asnIdentifier": null,
      "position": 92000,
      "depth": 1,
      "listId": "C",
      "statementNotation": "3A-DA",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data & Analysis",
      "comments": [],
      "ancestorIds": [
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "95E1E2430A1E4408A749A02A8CB69322"
    },
    "28CDB352305E457F922A1832B06B251F": {
      "id": "28CDB352305E457F922A1832B06B251F",
      "asnIdentifier": null,
      "position": 91000,
      "depth": 2,
      "listId": "5",
      "statementNotation": "3A-NI-08",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain tradeoffs when selecting and implementing cybersecurity recommendations.\n\nClarification: Network security depends on a combination of hardware, software, and practices that control access to data and systems. The needs of users and the sensitivity of data determine the level of security implemented. Every security measure involves tradeoffs between the accessibility and security of the system. Students should be able to describe, justify, and document choices they make using terminology appropriate for the intended audience and purpose. Students could debate issues from the perspective of diverse audiences, including individuals, corporations, privacy advocates, security experts, and government.",
      "comments": [],
      "ancestorIds": [
        "E8599A33A68A43389973C24F29C94615",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "E8599A33A68A43389973C24F29C94615"
    },
    "49B6728B32474A828768294D1774544B": {
      "id": "49B6728B32474A828768294D1774544B",
      "asnIdentifier": null,
      "position": 90000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "3A-NI-07",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare various security measures, considering tradeoffs between the usability and security of a computing system.\n\nClarification: Security measures may include physical security tokens, two-factor authentication, and biometric verification, but choosing security measures involves tradeoffs between the usability and security of the system. The needs of users and the sensitivity of data determine the level of security implemented. Students might discuss computer security policies in place at the local level that present a tradeoff between usability and security, such as a web filter that prevents access to many educational sites but keeps the campus network safe.",
      "comments": [],
      "ancestorIds": [
        "E8599A33A68A43389973C24F29C94615",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "E8599A33A68A43389973C24F29C94615"
    },
    "114B26F6CF1A4D8F8C1BEABC784B932E": {
      "id": "114B26F6CF1A4D8F8C1BEABC784B932E",
      "asnIdentifier": null,
      "position": 89000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3A-NI-06",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Recommend security measures to address various scenarios based on factors such as efficiency, feasibility, and ethical impacts.\n\nClarification: Security measures may include physical security tokens, two-factor authentication, and biometric verification. Potential security problems, such as denial-of-service attacks, ransomware, viruses, worms, spyware, and phishing, exemplify why sensitive data should be securely stored and transmitted. The timely and reliable access to data and information services by authorized users, referred to as availability, is ensured through adequate bandwidth, backups, and other measures. Students should systematically evaluate the feasibility of using computational tools to solve given problems or subproblems, such as through a cost-benefit analysis. Eventually, students should include more factors in their evaluations, such as how efficiency affects feasibility or whether a proposed approach raises ethical concerns.",
      "comments": [],
      "ancestorIds": [
        "E8599A33A68A43389973C24F29C94615",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "E8599A33A68A43389973C24F29C94615"
    },
    "90437CC0B5174BB39D80832CBBDD2C0B": {
      "id": "90437CC0B5174BB39D80832CBBDD2C0B",
      "asnIdentifier": null,
      "position": 88000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3A-NI-05",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Give examples to illustrate how sensitive data can be affected by malware and other attacks.\n\nClarification: Network security depends on a combination of hardware, software, and practices that control access to data and systems. The needs of users and the sensitivity of data determine the level of security implemented. Potential security problems, such as denial-of-service attacks, ransomware, viruses, worms, spyware, and phishing, present threats to sensitive data. Students might reflect on case studies or current events in which governments or organizations experienced data leaks or data loss as a result of these types of attacks.",
      "comments": [],
      "ancestorIds": [
        "E8599A33A68A43389973C24F29C94615",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "E8599A33A68A43389973C24F29C94615"
    },
    "05CD2A13A114457EA87D8608604E353D": {
      "id": "05CD2A13A114457EA87D8608604E353D",
      "asnIdentifier": null,
      "position": 87000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3A-NI-04",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate the scalability and reliability of networks, by describing the relationship between routers, switches, servers, topology, and addressing.\n\nClarification: Each device is assigned an address that uniquely identifies it on the network. Routers function by comparing IP addresses to determine the pathways packets should take to reach their destination. Switches function by comparing MAC addresses to determine which computers or network segments will receive frames. Students could use online network simulators to experiment with these factors.",
      "comments": [],
      "ancestorIds": [
        "E8599A33A68A43389973C24F29C94615",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "E8599A33A68A43389973C24F29C94615"
    },
    "E8599A33A68A43389973C24F29C94615": {
      "id": "E8599A33A68A43389973C24F29C94615",
      "asnIdentifier": null,
      "position": 86000,
      "depth": 1,
      "listId": "B",
      "statementNotation": "3A-NI",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Networks & the Internet",
      "comments": [],
      "ancestorIds": [
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "95E1E2430A1E4408A749A02A8CB69322"
    },
    "2CB839DB06554947B3EC229E9E78FDCE": {
      "id": "2CB839DB06554947B3EC229E9E78FDCE",
      "asnIdentifier": null,
      "position": 85000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "3A-CS-03",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Develop guidelines that convey systematic troubleshooting strategies that others can use to identify and fix errors.\n\nClarification: Troubleshooting complex problems involves the use of multiple sources when researching, evaluating, and implementing potential solutions. Troubleshooting also relies on experience, such as when people recognize that a problem is similar to one they have seen before or adapt solutions that have worked in the past. Examples of complex troubleshooting strategies include resolving connectivity problems, adjusting system configurations and settings, ensuring hardware and software compatibility, and transferring data from one device to another. Students could create a flow chart, a job aid for a help desk employee, or an expert system.",
      "comments": [],
      "ancestorIds": [
        "D360CDE5F2E7494B8E97FFDC76943187",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "D360CDE5F2E7494B8E97FFDC76943187"
    },
    "53593F56143C4455883642641AFC2F6D": {
      "id": "53593F56143C4455883642641AFC2F6D",
      "asnIdentifier": null,
      "position": 84000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "3A-CS-02",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare levels of abstraction and interactions between application software, system software, and hardware layers.\n\nClarification: At its most basic level, a computer is composed of physical hardware and electrical impulses. Multiple layers of software are built upon the hardware and interact with the layers above and below them to reduce complexity. System software manages a computing device’s resources so that software can interact with hardware. For example, text editing software interacts with the operating system to receive input from the keyboard, convert the input to bits for storage, and interpret the bits as readable text to display on the monitor. System software is used on many different types of devices, such as smart TVs, assistive devices, virtual components, cloud components, and drones. For example, students may explore the progression from voltage to binary signal to logic gates to adders and so on. Knowledge of specific, advanced terms for computer architecture, such as BIOS, kernel, or bus, is not expected at this level.",
      "comments": [],
      "ancestorIds": [
        "D360CDE5F2E7494B8E97FFDC76943187",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "D360CDE5F2E7494B8E97FFDC76943187"
    },
    "8927818B0D5C47BE9F3A383F294D6AF3": {
      "id": "8927818B0D5C47BE9F3A383F294D6AF3",
      "asnIdentifier": null,
      "position": 83000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "3A-CS-01",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain how abstractions hide the underlying implementation details of computing systems embedded in everyday objects.        \n\nClarification: Computing devices are often integrated with other systems, including biological, mechanical, and social systems. A medical device can be embedded inside a person to monitor and regulate his or her health, a hearing aid (a type of assistive device) can filter out certain frequencies and magnify others, a monitoring device installed in a motor vehicle can track a person’s driving patterns and habits, and a facial recognition device can be integrated into a security system to identify a person. The creation of integrated or embedded systems is not an expectation at this level. Students might select an embedded device such as a car stereo, identify the types of data (radio station presets, volume level) and procedures (increase volume, store/recall saved station, mute) it includes, and explain how the implementation details are hidden from the user.",
      "comments": [],
      "ancestorIds": [
        "D360CDE5F2E7494B8E97FFDC76943187",
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "D360CDE5F2E7494B8E97FFDC76943187"
    },
    "D360CDE5F2E7494B8E97FFDC76943187": {
      "id": "D360CDE5F2E7494B8E97FFDC76943187",
      "asnIdentifier": null,
      "position": 82000,
      "depth": 1,
      "listId": "A",
      "statementNotation": "3A-CS",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing Systems",
      "comments": [],
      "ancestorIds": [
        "95E1E2430A1E4408A749A02A8CB69322"
      ],
      "parentId": "95E1E2430A1E4408A749A02A8CB69322"
    },
    "95E1E2430A1E4408A749A02A8CB69322": {
      "id": "95E1E2430A1E4408A749A02A8CB69322",
      "asnIdentifier": null,
      "position": 81000,
      "depth": 0,
      "listId": "IV",
      "statementNotation": "3A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "9-10 Standards",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "70CD712044F24044A37F9AEED254876B": {
      "id": "70CD712044F24044A37F9AEED254876B",
      "asnIdentifier": null,
      "position": 80000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "2-IC-23",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe tradeoffs between allowing information to be public and keeping information private and secure.\n\nClarification: Sharing information online can help establish, maintain, and strengthen connections between people. For example, it allows artists and designers to display their talents and reach a broad audience. However, security attacks often start with personal information that is publicly available online. Social engineering is based on tricking people into revealing sensitive information and can be thwarted by being wary of attacks, such as phishing and spoofing.",
      "comments": [],
      "ancestorIds": [
        "49E1811B926F41E98F246013808CD844",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "49E1811B926F41E98F246013808CD844"
    },
    "B14648E7544947F0A5175F5AF38E2FED": {
      "id": "B14648E7544947F0A5175F5AF38E2FED",
      "asnIdentifier": null,
      "position": 79000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "2-IC-22",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Collaborate with many contributors through strategies such as crowdsourcing or surveys when creating a computational artifact.\n\nClarification: Crowdsourcing is gathering services, ideas, or content from a large group of people, especially from the online community. It can be done at the local level (e.g., classroom or school) or global level (e.g., age-appropriate online communities, like Scratch and Minecraft). For example, a group of students could combine animations to create a digital community mosaic. They could also solicit feedback from many people though use of online communities and electronic surveys.",
      "comments": [],
      "ancestorIds": [
        "49E1811B926F41E98F246013808CD844",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "49E1811B926F41E98F246013808CD844"
    },
    "1B17CB380A6749F393DCC8CC27DCD2FA": {
      "id": "1B17CB380A6749F393DCC8CC27DCD2FA",
      "asnIdentifier": null,
      "position": 78000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "2-IC-21",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Discuss issues of bias and accessibility in the design of existing technologies.\n\nClarification: Students should test and discuss the usability of various technology tools (e.g., apps, games, and devices) with the teacher's guidance. For example, facial recognition software that works better for lighter skin tones was likely developed with a homogeneous testing group and could be improved by sampling a more diverse population. When discussing accessibility, students may notice that allowing a user to change font sizes and colors will not only make an interface usable for people with low vision but also benefits users in various situations, such as in bright daylight or a dark room.",
      "comments": [],
      "ancestorIds": [
        "49E1811B926F41E98F246013808CD844",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "49E1811B926F41E98F246013808CD844"
    },
    "C9C37CC6B5404B54940B6721C3D09590": {
      "id": "C9C37CC6B5404B54940B6721C3D09590",
      "asnIdentifier": null,
      "position": 77000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "2-IC-20",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare tradeoffs associated with computing technologies that affect people's everyday activities and career options.\n\nClarification: Advancements in computer technology are neither wholly positive nor negative. However, the ways that people use computing technologies have tradeoffs. Students should consider current events related to broad ideas, including privacy, communication, and automation. For example, driverless cars can increase convenience and reduce accidents, but they are also susceptible to hacking. The emerging industry will reduce the number of taxi and shared-ride drivers, but will create more software engineering and cybersecurity jobs.",
      "comments": [],
      "ancestorIds": [
        "49E1811B926F41E98F246013808CD844",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "49E1811B926F41E98F246013808CD844"
    },
    "49E1811B926F41E98F246013808CD844": {
      "id": "49E1811B926F41E98F246013808CD844",
      "asnIdentifier": null,
      "position": 76000,
      "depth": 1,
      "listId": "E",
      "statementNotation": "2-IC",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Impacts of Computing",
      "comments": [],
      "ancestorIds": [
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "263F47EB41D241369EE1FB63E2B30131"
    },
    "A152D980EE4B4FBBBA50A5C38FC8D658": {
      "id": "A152D980EE4B4FBBBA50A5C38FC8D658",
      "asnIdentifier": null,
      "position": 75000,
      "depth": 2,
      "listId": "10",
      "statementNotation": "2-AP-19",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Document programs in order to make them easier to follow, test, and debug.\n\nClarification: Documentation allows creators and others to more easily use and understand a program. Students should provide documentation for end users that explains their artifacts and how they function. For example, students could provide a project overview and clear user instructions. They should also incorporate comments in their product and communicate their process using design documents, flowcharts, and presentations.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "AD269B57CBB8425BA4B4A62A62F861CE": {
      "id": "AD269B57CBB8425BA4B4A62A62F861CE",
      "asnIdentifier": null,
      "position": 74000,
      "depth": 2,
      "listId": "9",
      "statementNotation": "2-AP-18",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Distribute tasks and maintain a project timeline when collaboratively developing computational artifacts.\n\nClarification: Collaboration is a common and crucial practice in programming development. Often, many individuals and groups work on the interdependent parts of a project together. Students should assume pre-defined roles within their teams and manage the project workflow using structured timelines. With teacher guidance, they will begin to create collective goals, expectations, and equitable workloads. For example, students may divide the design stage of a game into planning the storyboard, flowchart, and different parts of the game mechanics. They can then distribute tasks and roles among members of the team and assign deadlines.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "DAF36E0B858A46C68E3AD762C6DE61E6": {
      "id": "DAF36E0B858A46C68E3AD762C6DE61E6",
      "asnIdentifier": null,
      "position": 73000,
      "depth": 2,
      "listId": "8",
      "statementNotation": "2-AP-17",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Systematically test and refine programs using a range of test cases.\n\nClarification: Use cases and test cases are created and analyzed to better meet the needs of users and to evaluate whether programs function as intended. At this level, testing should become a deliberate process that is more iterative, systematic, and proactive than at lower levels. Students should begin to test programs by considering potential errors, such as what will happen if a user enters invalid input (e.g., negative numbers and 0 instead of positive numbers).",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "7579426713894246976F0864D22E1123": {
      "id": "7579426713894246976F0864D22E1123",
      "asnIdentifier": null,
      "position": 72000,
      "depth": 2,
      "listId": "7",
      "statementNotation": "2-AP-16",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Incorporate existing code, media, and libraries into original programs, and give attribution.\n\nClarification: Building on the work of others enables students to produce more interesting and powerful creations. Students should use portions of code, algorithms, and/or digital media in their own programs and websites. At this level, they may also import libraries and connect to web application program interfaces (APIs). For example, when creating a side-scrolling game, students may incorporate portions of code that create a realistic jump movement from another person's game, and they may also import Creative Commons-licensed images to use in the background. Students should give attribution to the original creators to acknowledge their contributions.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "9B1811FBB7CB415CA942F67124C82188": {
      "id": "9B1811FBB7CB415CA942F67124C82188",
      "asnIdentifier": null,
      "position": 71000,
      "depth": 2,
      "listId": "6",
      "statementNotation": "2-AP-15",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Seek and incorporate feedback from team members and users to refine a solution that meets user needs.\n\nClarification: Development teams that employ user-centered design create solutions (e.g., programs and devices) that can have a large societal impact, such as an app that allows people with speech difficulties to translate hard-to-understand pronunciation into understandable language. Students should begin to seek diverse perspectives throughout the design process to improve their computational artifacts. Considerations of the end-user may include usability, accessibility, age-appropriate content, respectful language, user perspective, pronoun use, color contrast, and ease of use.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "2F531E3A9F3748FB9F8C532A08504FA9": {
      "id": "2F531E3A9F3748FB9F8C532A08504FA9",
      "asnIdentifier": null,
      "position": 70000,
      "depth": 2,
      "listId": "5",
      "statementNotation": "2-AP-14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create procedures with parameters to organize code and make it easier to reuse. \n\nClarification: Students should create procedures and/or functions that are used multiple times within a program to repeat groups of instructions. These procedures can be generalized by defining parameters that create different outputs for a wide range of inputs. For example, a procedure to draw a circle involves many instructions, but all of them can be invoked with one instruction, such as “drawCircle.” By adding a radius parameter, the user can easily draw circles of different sizes.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "6492398FCF0F4E03B1729DE82E0FD0C4": {
      "id": "6492398FCF0F4E03B1729DE82E0FD0C4",
      "asnIdentifier": null,
      "position": 69000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "2-AP-13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Decompose problems and subproblems into parts to facilitate the design, implementation, and review of programs.\n\nClarification: Students should break down problems into subproblems, which can be further broken down to smaller parts. Decomposition facilitates aspects of program development by allowing students to focus on one piece at a time (e.g., getting input from the user, processing the data, and displaying the result to the user). Decomposition also enables different students to work on different parts at the same time. For example, animations can be decomposed into multiple scenes, which can be developed independently.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "08FA83F3D14C4FF187D174BC23B44152": {
      "id": "08FA83F3D14C4FF187D174BC23B44152",
      "asnIdentifier": null,
      "position": 68000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "2-AP-12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Design and iteratively develop programs that combine control structures, including nested loops and compound conditionals.\n\nClarification: Control structures can be combined in many ways. Nested loops are loops placed within loops. Compound conditionals combine two or more conditions in a logical relationship (e.g., using AND, OR, and NOT), and nesting conditionals within one another allows the result of one conditional to lead to another. For example, when programming an interactive story, students could use a compound conditional within a loop to unlock a door only if a character has a key AND is touching the door.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "B27779C688F14A9E88C6B324711BB464": {
      "id": "B27779C688F14A9E88C6B324711BB464",
      "asnIdentifier": null,
      "position": 67000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "2-AP-11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create clearly named variables that represent different data types and perform operations on their values.\n\nClarification: A variable is like a container with a name, in which the contents may change, but the name (identifier) does not. When planning and developing programs, students should decide when and how to declare and name new variables. Students should use naming conventions to improve program readability. Examples of operations include adding points to the score, combining user input with words to make a sentence, changing the size of a picture, or adding a name to a list of people.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "B5324003F8374404BB73986703D41963": {
      "id": "B5324003F8374404BB73986703D41963",
      "asnIdentifier": null,
      "position": 66000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "2-AP-10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use flowcharts and/or pseudocode to address complex problems as algorithms.\n\nClarification: Complex problems are problems that would be difficult for students to solve computationally. Students should use pseudocode and/or flowcharts to organize and sequence an algorithm that addresses a complex problem, even though they may not actually program the solutions. For example, students might express an algorithm that produces a recommendation for purchasing sneakers based on inputs such as size, colors, brand, comfort, and cost. Testing the algorithm with a wide range of inputs and users allows students to refine their recommendation algorithm and to identify other inputs they may have initially excluded.",
      "comments": [],
      "ancestorIds": [
        "5412A46C4BD24E5A8CA5D1408574BA0D",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "5412A46C4BD24E5A8CA5D1408574BA0D"
    },
    "5412A46C4BD24E5A8CA5D1408574BA0D": {
      "id": "5412A46C4BD24E5A8CA5D1408574BA0D",
      "asnIdentifier": null,
      "position": 65000,
      "depth": 1,
      "listId": "D",
      "statementNotation": "2-AP",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Algorithms & Programming",
      "comments": [],
      "ancestorIds": [
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "263F47EB41D241369EE1FB63E2B30131"
    },
    "08E90FBEA4FA45848DE3120C4A20023E": {
      "id": "08E90FBEA4FA45848DE3120C4A20023E",
      "asnIdentifier": null,
      "position": 64000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "2-DA-09",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Refine computational models based on the data they have generated.\n\nClarification: A model may be a programmed simulation of events or a representation of how various data is related. In order to refine a model, students need to consider which data points are relevant, how data points relate to each other, and if the data is accurate. For example, students may make a prediction about how far a ball will travel based on a table of data related to the height and angle of a track. The students could then test and refine their model by comparing predicted versus actual results and considering whether other factors are relevant (e.g., size and mass of the ball). Additionally, students could refine game mechanics based on test outcomes in order to make the game more balanced or fair.",
      "comments": [],
      "ancestorIds": [
        "C02679957C97413BAC08FEA7C40E0101",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "C02679957C97413BAC08FEA7C40E0101"
    },
    "125373F5DABF40ED81763ABFD8998FD9": {
      "id": "125373F5DABF40ED81763ABFD8998FD9",
      "asnIdentifier": null,
      "position": 63000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "2-DA-08",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Collect data using computational tools and transform the data to make it more useful and reliable.\n\nClarification: As students continue to build on their ability to organize and present data visually to support a claim, they will need to understand when and how to transform data for this purpose. Students should transform data to remove errors, highlight or expose relationships, and/or make it easier for computers to process. The cleaning of data is an important transformation for ensuring consistent format and reducing noise and errors (e.g., removing irrelevant responses in a survey). An example of a transformation that highlights a relationship is representing males and females as percentages of a whole instead of as individual counts.",
      "comments": [],
      "ancestorIds": [
        "C02679957C97413BAC08FEA7C40E0101",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "C02679957C97413BAC08FEA7C40E0101"
    },
    "AB7196A9EC2A4051A6F0516CF42AC41A": {
      "id": "AB7196A9EC2A4051A6F0516CF42AC41A",
      "asnIdentifier": null,
      "position": 62000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "2-DA-07",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent data using multiple encoding schemes.\n\nClarification: Data representations occur at multiple levels of abstraction, from the physical storage of bits to the arrangement of information into organized formats (e.g., tables). Students should represent the same data in multiple ways. For example, students could represent the same color using binary, RGB values, hex codes (low-level representations), as well as forms understandable by people, including words, symbols, and digital displays of the color (high-level representations).",
      "comments": [],
      "ancestorIds": [
        "C02679957C97413BAC08FEA7C40E0101",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "C02679957C97413BAC08FEA7C40E0101"
    },
    "C02679957C97413BAC08FEA7C40E0101": {
      "id": "C02679957C97413BAC08FEA7C40E0101",
      "asnIdentifier": null,
      "position": 61000,
      "depth": 1,
      "listId": "C",
      "statementNotation": "2-DA",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data & Analysis",
      "comments": [],
      "ancestorIds": [
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "263F47EB41D241369EE1FB63E2B30131"
    },
    "828B9E99B2E548ACAB75654F82B3BA61": {
      "id": "828B9E99B2E548ACAB75654F82B3BA61",
      "asnIdentifier": null,
      "position": 60000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "2-NI-06",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply multiple methods of encryption to model the secure transmission of information.\n\nClarification: Encryption can be as simple as letter substitution or as complicated as modern methods used to secure networks and the Internet. Students should encode and decode messages using a variety of encryption methods, and they should understand the different levels of complexity used to hide or secure information. For example, students could secure messages using methods such as Caesar cyphers or steganography (i.e., hiding messages inside a picture or other data). They can also model more complicated methods, such as public key encryption, through unplugged activities.",
      "comments": [],
      "ancestorIds": [
        "45B06D00067C46C0B37CF384F2489BE2",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "45B06D00067C46C0B37CF384F2489BE2"
    },
    "58A58D2F8F314027885818643A0E1405": {
      "id": "58A58D2F8F314027885818643A0E1405",
      "asnIdentifier": null,
      "position": 59000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "2-NI-05",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain how physical and digital security measures protect electronic information.\n\nClarification: Information that is stored online is vulnerable to unwanted access. Examples of physical security measures to protect data include keeping passwords hidden, locking doors, making backup copies on external storage devices, and erasing a storage device before it is reused. Examples of digital security measures include secure router admin passwords, firewalls that limit access to private networks, and the use of a protocol such as HTTPS to ensure secure data transmission.",
      "comments": [],
      "ancestorIds": [
        "45B06D00067C46C0B37CF384F2489BE2",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "45B06D00067C46C0B37CF384F2489BE2"
    },
    "CB912CAE4FD547A7B41F0314C2435F95": {
      "id": "CB912CAE4FD547A7B41F0314C2435F95",
      "asnIdentifier": null,
      "position": 58000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "2-NI-04",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Model the role of protocols in transmitting data across networks and the Internet.\n\nClarification: Protocols are rules that define how messages between computers are sent. They determine how quickly and securely information is transmitted across networks and the Internet, as well as how to handle errors in transmission. Students should model how data is sent using protocols to choose the fastest path, to deal with missing information, and to deliver sensitive data securely. For example, students could devise a plan for resending lost information or for interpreting a picture that has missing pieces. The priority at this grade level is understanding the purpose of protocols and how they enable secure and errorless communication. Knowledge of the details of how specific protocols work is not expected.",
      "comments": [],
      "ancestorIds": [
        "45B06D00067C46C0B37CF384F2489BE2",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "45B06D00067C46C0B37CF384F2489BE2"
    },
    "45B06D00067C46C0B37CF384F2489BE2": {
      "id": "45B06D00067C46C0B37CF384F2489BE2",
      "asnIdentifier": null,
      "position": 57000,
      "depth": 1,
      "listId": "B",
      "statementNotation": "2-NI",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Networks & the Internet",
      "comments": [],
      "ancestorIds": [
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "263F47EB41D241369EE1FB63E2B30131"
    },
    "9B6DB3A26B7447518894810652877D81": {
      "id": "9B6DB3A26B7447518894810652877D81",
      "asnIdentifier": null,
      "position": 56000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "2-CS-03",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Systematically identify and fix problems with computing devices and their components.\n\nClarification: Since a computing device may interact with interconnected devices within a system, problems may not be due to the specific computing device itself but to devices connected to it. Just as pilots use checklists to troubleshoot problems with aircraft systems, students should use a similar, structured process to troubleshoot problems with computing systems and ensure that potential solutions are not overlooked. Examples of troubleshooting strategies include following a troubleshooting flow diagram, making changes to software to see if hardware will work, checking connections and settings, and swapping in working components.",
      "comments": [],
      "ancestorIds": [
        "BA5DC47E37714E6A88A3C16F8244897B",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "BA5DC47E37714E6A88A3C16F8244897B"
    },
    "B6BEB5129EFA4C41A5C93E2BF6CA050F": {
      "id": "B6BEB5129EFA4C41A5C93E2BF6CA050F",
      "asnIdentifier": null,
      "position": 55000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "2-CS-02",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Design projects that combine hardware and software components to collect and exchange data.\n\nClarification: Collecting and exchanging data involves input, output, storage, and processing. When possible, students should select the hardware and software components for their project designs by considering factors such as functionality, cost, size, speed, accessibility, and aesthetics. For example, components for a mobile app could include accelerometer, GPS, and speech recognition. The choice of a device that connects wirelessly through a Bluetooth connection versus a physical USB connection involves a tradeoff between mobility and the need for an additional power source for the wireless device.",
      "comments": [],
      "ancestorIds": [
        "BA5DC47E37714E6A88A3C16F8244897B",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "BA5DC47E37714E6A88A3C16F8244897B"
    },
    "EDF6BE610BDF49A29F39E8BCE3AC1061": {
      "id": "EDF6BE610BDF49A29F39E8BCE3AC1061",
      "asnIdentifier": null,
      "position": 54000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "2-CS-01",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Recommend improvements to the design of computing devices, based on an analysis of how users interact with the devices.\n\nClarification: The study of human–computer interaction (HCI) can improve the design of devices, including both hardware and software. Students should make recommendations for existing devices (e.g., a laptop, phone, or tablet) or design their own components or interface (e.g., create their own controllers). Teachers can guide students to consider usability through several lenses, including accessibility, ergonomics, and learnability. For example, assistive devices provide capabilities such as scanning written information and converting it to speech.",
      "comments": [],
      "ancestorIds": [
        "BA5DC47E37714E6A88A3C16F8244897B",
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "BA5DC47E37714E6A88A3C16F8244897B"
    },
    "BA5DC47E37714E6A88A3C16F8244897B": {
      "id": "BA5DC47E37714E6A88A3C16F8244897B",
      "asnIdentifier": null,
      "position": 53000,
      "depth": 1,
      "listId": "A",
      "statementNotation": "2-CS",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing Systems",
      "comments": [],
      "ancestorIds": [
        "263F47EB41D241369EE1FB63E2B30131"
      ],
      "parentId": "263F47EB41D241369EE1FB63E2B30131"
    },
    "263F47EB41D241369EE1FB63E2B30131": {
      "id": "263F47EB41D241369EE1FB63E2B30131",
      "asnIdentifier": null,
      "position": 52000,
      "depth": 0,
      "listId": "III",
      "statementNotation": "2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "6-8 Standards",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "0420B6E97BBD43D2A32D631E31040B83": {
      "id": "0420B6E97BBD43D2A32D631E31040B83",
      "asnIdentifier": null,
      "position": 51000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "1B-IC-21",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use public domain or creative commons media, and refrain from copying or using material created by others without permission.\n\nClarification: Ethical complications arise from the opportunities provided by computing. The ease of sending and receiving copies of media on the Internet, such as video, photos, and music, creates the opportunity for unauthorized use, such as online piracy, and disregard of copyrights. Students should consider the licenses on computational artifacts that they wish to use. For example, the license on a downloaded image or audio file may have restrictions that prohibit modification, require attribution, or prohibit use entirely.",
      "comments": [],
      "ancestorIds": [
        "CF92A3586EA6465B9D2181A5FC699CD4",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "CF92A3586EA6465B9D2181A5FC699CD4"
    },
    "F310F14C8B514B7496C348F465F1C8AD": {
      "id": "F310F14C8B514B7496C348F465F1C8AD",
      "asnIdentifier": null,
      "position": 50000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "1B-IC-20",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Seek diverse perspectives for the purpose of improving computational artifacts.\n\nClarification: Computing provides the possibility for collaboration and sharing of ideas and allows the benefit of diverse perspectives. For example, students could seek feedback from other groups in their class or students at another grade level. Or, with guidance from their teacher, they could use video conferencing tools or other online collaborative spaces, such as blogs, wikis, forums, or website comments, to gather feedback from individuals and groups about programming projects.",
      "comments": [],
      "ancestorIds": [
        "CF92A3586EA6465B9D2181A5FC699CD4",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "CF92A3586EA6465B9D2181A5FC699CD4"
    },
    "9CE8298AC09F477E8541BCA8405204E8": {
      "id": "9CE8298AC09F477E8541BCA8405204E8",
      "asnIdentifier": null,
      "position": 49000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1B-IC-19",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Brainstorm ways to improve the accessibility and usability of technology products for the diverse needs and wants of users.\n\nClarification: The development and modification of computing technology are driven by people’s needs and wants and can affect groups differently. Anticipating the needs and wants of diverse end users requires students to purposefully consider potential perspectives of users with different backgrounds, ability levels, points of view, and disabilities. For example, students may consider using both speech and text when they wish to convey information in a game.  They may also wish to vary the types of programs they create, knowing that not everyone shares their own tastes.",
      "comments": [],
      "ancestorIds": [
        "CF92A3586EA6465B9D2181A5FC699CD4",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "CF92A3586EA6465B9D2181A5FC699CD4"
    },
    "6D9AE0DACF6D4A1C9687CF29853D5CDE": {
      "id": "6D9AE0DACF6D4A1C9687CF29853D5CDE",
      "asnIdentifier": null,
      "position": 48000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1B-IC-18",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Discuss computing technologies that have changed the world, and express how those technologies influence, and are influenced by, cultural practices.\n\nClarification: New computing technology is created and existing technologies are modified for many reasons, including to increase their benefits, decrease their risks, and meet societal needs.  Students, with guidance from their teacher, should discuss topics that relate to the history of technology and the changes in the world due to technology. Topics could be based on current news content, such as robotics, wireless Internet, mobile computing devices, GPS systems, wearable computing, or how social media has influenced social and political changes.",
      "comments": [],
      "ancestorIds": [
        "CF92A3586EA6465B9D2181A5FC699CD4",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "CF92A3586EA6465B9D2181A5FC699CD4"
    },
    "CF92A3586EA6465B9D2181A5FC699CD4": {
      "id": "CF92A3586EA6465B9D2181A5FC699CD4",
      "asnIdentifier": null,
      "position": 47000,
      "depth": 1,
      "listId": "E",
      "statementNotation": "1B-IC",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Impacts of Computing",
      "comments": [],
      "ancestorIds": [
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "D866A37270C24A6196C03D7D9E65FD3A"
    },
    "61BB7D1129D441F2A312D8380038DBF4": {
      "id": "61BB7D1129D441F2A312D8380038DBF4",
      "asnIdentifier": null,
      "position": 46000,
      "depth": 2,
      "listId": "10",
      "statementNotation": "1B-AP-17",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe choices made during program development using code comments, presentations, and demonstrations.\n\nClarification: People communicate about their code to help others understand and use their programs. Another purpose of communicating one's design choices is to show an understanding of one's work. These explanations could manifest themselves as in-line code comments for collaborators and assessors, or as part of a summative presentation, such as a code walk-through or coding journal.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "4BD61C4FFBFC477A918F98138D005DA4": {
      "id": "4BD61C4FFBFC477A918F98138D005DA4",
      "asnIdentifier": null,
      "position": 45000,
      "depth": 2,
      "listId": "9",
      "statementNotation": "1B-AP-16",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Take on varying roles, with teacher guidance, when collaborating with peers during the design, implementation, and review stages of program development.\n\nClarification: Collaborative computing is the process of performing a computational task by working in pairs or on teams. Because it involves asking for the contributions and feedback of others, effective collaboration can lead to better outcomes than working independently. Students should take turns in different roles during program development, such as note taker, facilitator, program tester, or “driver” of the computer.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "0201CD8AC72A44F7B6B064144C2D8C33": {
      "id": "0201CD8AC72A44F7B6B064144C2D8C33",
      "asnIdentifier": null,
      "position": 44000,
      "depth": 2,
      "listId": "8",
      "statementNotation": "1B-AP-15",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Test and debug (identify and fix errors) a program or algorithm to ensure it runs as intended.\n\nClarification: As students develop programs they should continuously test those programs to see that they do what was expected and fix (debug),  any errors. Students should also be able to successfully debug simple errors in programs created by others.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "2EE73FD9F8DB44DF84245FF87535B2EB": {
      "id": "2EE73FD9F8DB44DF84245FF87535B2EB",
      "asnIdentifier": null,
      "position": 43000,
      "depth": 2,
      "listId": "7",
      "statementNotation": "1B-AP-14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Observe intellectual property rights and give appropriate attribution when creating or remixing programs.\n\nClarification: Intellectual property rights can vary by country but copyright laws give the creator of a work a set of rights that prevents others from copying the work and using it in ways that they may not like. Students should identify instances of remixing, when ideas are borrowed and iterated upon, and credit the original creator. Students should also consider common licenses that place limitations or restrictions on the use of computational artifacts, such as images and music downloaded from the Internet. At this stage, attribution should be written in the format required by the teacher and should always be included on any programs shared online.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "DF76A6923D284328B92FA393B3699852": {
      "id": "DF76A6923D284328B92FA393B3699852",
      "asnIdentifier": null,
      "position": 42000,
      "depth": 2,
      "listId": "6",
      "statementNotation": "1B-AP-13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use an iterative process to plan the development of a program by including others' perspectives and considering user preferences.\n\nClarification: Planning is an important part of the iterative process of program development. Students outline key features, time and resource constraints, and user expectations. Students should document the plan as, for example, a storyboard, flowchart, pseudocode, or story map.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "DB834C97739F43988F0E776C6C9A02F2": {
      "id": "DB834C97739F43988F0E776C6C9A02F2",
      "asnIdentifier": null,
      "position": 41000,
      "depth": 2,
      "listId": "5",
      "statementNotation": "1B-AP-12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Modify, remix, or incorporate portions of an existing program into one's own work, to develop something new or add more advanced features.\n\nClarification: Programs can be broken down into smaller parts, which can be incorporated into new or existing programs. For example, students could modify prewritten code from a single-player game to create a two-player game with slightly different rules, remix and add another scene to an animated story, use code to make a ball bounce from another program in a new basketball game, or modify an image created by another student.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "407FEDB5B3C64FBCBF87223D1A184C05": {
      "id": "407FEDB5B3C64FBCBF87223D1A184C05",
      "asnIdentifier": null,
      "position": 40000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "1B-AP-11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Decompose (break down) problems into smaller, manageable subproblems to facilitate the program development process.\n\nClarification: Decomposition is the act of breaking down tasks into simpler tasks. For example, students could create an animation by separating a story into different scenes. For each scene, they would select a background, place characters, and program actions.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "FA40BED449F74C46BBBA0F8155165925": {
      "id": "FA40BED449F74C46BBBA0F8155165925",
      "asnIdentifier": null,
      "position": 39000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "1B-AP-10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create programs that include sequences, events, loops, and conditionals.\n\nClarification: Control structures specify the order (sequence) in which instructions are executed within a program and can be combined to support the creation of more complex programs. Events allow portions of a program to run based on a specific action. For example, students could write a program to explain the water cycle and when a specific component is clicked (event), the program would show information about that part of the water cycle. Conditionals allow for the execution of a portion of code in a program when a certain condition is true. For example, students could write a math game that asks multiplication fact questions and then uses a conditional to check whether or not the answer that was entered is correct. Loops allow for the repetition of a sequence of code multiple times. For example, in a program that produces an animation about a famous historical character, students could use a loop to have the character walk across the screen as they introduce themselves.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "03D183C932354C86BB1F034F1D74ABE4": {
      "id": "03D183C932354C86BB1F034F1D74ABE4",
      "asnIdentifier": null,
      "position": 38000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1B-AP-09",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create programs that use variables to store and modify data.\n\nClarification: Variables are used to store and modify data. At this level, understanding how to use variables is sufficient. For example, students may use mathematical operations to add to the score of a game or subtract from the number of lives available in a game. The use of a variable as a countdown timer is another example.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "32CF2D100035490FBE3EDE7FAD53912D": {
      "id": "32CF2D100035490FBE3EDE7FAD53912D",
      "asnIdentifier": null,
      "position": 37000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1B-AP-08",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare and refine multiple algorithms for the same task and determine which is the most appropriate.\n\nClarification: Different algorithms can achieve the same result, though sometimes one algorithm might be most appropriate for a specific situation. Students should be able to look at different ways to solve the same task and decide which would be the best solution. For example, students could use a map and plan multiple algorithms to get from one point to another. They could look at routes suggested by mapping software and change the route to something that would be better, based on which route is shortest or fastest or would avoid a problem. Students might compare algorithms that describe how to get ready for school. Another example might be to write different algorithms to draw a regular polygon and determine which algorithm would be the easiest to modify or repurpose to draw a different polygon.",
      "comments": [],
      "ancestorIds": [
        "2048A1C666E041F3B1F9D5C3A4F615C6",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048A1C666E041F3B1F9D5C3A4F615C6"
    },
    "2048A1C666E041F3B1F9D5C3A4F615C6": {
      "id": "2048A1C666E041F3B1F9D5C3A4F615C6",
      "asnIdentifier": null,
      "position": 36000,
      "depth": 1,
      "listId": "D",
      "statementNotation": "1B-AP",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Algorithms & Programming",
      "comments": [],
      "ancestorIds": [
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "D866A37270C24A6196C03D7D9E65FD3A"
    },
    "7A8F1ADA48F24DBCA5B4383C741F298E": {
      "id": "7A8F1ADA48F24DBCA5B4383C741F298E",
      "asnIdentifier": null,
      "position": 35000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1B-DA-07",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use data to highlight or propose cause-and-effect relationships, predict outcomes, or communicate an idea.\n\nClarification: The accuracy of data analysis is related to how realistically data is represented. Inferences or predictions based on data are less likely to be accurate if the data is not sufficient or if the data is incorrect in some way. Students should be able to refer to data when communicating an idea. For example, in order to explore the relationship between speed, time, and distance, students could operate a robot at uniform speed, and at increasing time intervals to predict how far the robot travels at that speed. In order to make an accurate prediction, one or two attempts of differing times would not be enough. The robot may also collect temperature data from a sensor, but that data would not be relevant for the task. Students must also make accurate measurements of the distance the robot travels in order to develop a valid prediction. Students could record the temperature at noon each day as a basis to show that temperatures are higher in certain months of the year. If temperatures are not recorded on non-school days or are recorded incorrectly or at different times of the day, the data would be incomplete and the ideas being communicated could be inaccurate. Students may also record the day of the week on which the data was collected, but this would have no relevance to whether temperatures are higher or lower. In order to have sufficient and accurate data on which to communicate the idea, students might want to use data provided by a governmental weather agency.",
      "comments": [],
      "ancestorIds": [
        "1D0AECAA3FA946D2A771F85D0C99A92E",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "1D0AECAA3FA946D2A771F85D0C99A92E"
    },
    "A9D877C6446845E38C0815D63A70E720": {
      "id": "A9D877C6446845E38C0815D63A70E720",
      "asnIdentifier": null,
      "position": 34000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1B-DA-06",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Organize and present collected data visually to highlight relationships and support a claim.\n\nClarification: Raw data has little meaning on its own. Data is often sorted or grouped to provide additional clarity. Organizing data can make interpreting and communicating it to others easier. Data points can be clustered by a number of commonalities. The same data could be manipulated in different ways to emphasize particular aspects or parts of the data set. For example, a data set of sports teams could be sorted by wins, points scored, or points allowed, and a data set of weather information could be sorted by high temperatures, low temperatures, or precipitation.",
      "comments": [],
      "ancestorIds": [
        "1D0AECAA3FA946D2A771F85D0C99A92E",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "1D0AECAA3FA946D2A771F85D0C99A92E"
    },
    "1D0AECAA3FA946D2A771F85D0C99A92E": {
      "id": "1D0AECAA3FA946D2A771F85D0C99A92E",
      "asnIdentifier": null,
      "position": 33000,
      "depth": 1,
      "listId": "C",
      "statementNotation": "1B-Da",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data & Analysis",
      "comments": [],
      "ancestorIds": [
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "D866A37270C24A6196C03D7D9E65FD3A"
    },
    "250FC0C61988444B896A4D5FBFB3C05F": {
      "id": "250FC0C61988444B896A4D5FBFB3C05F",
      "asnIdentifier": null,
      "position": 32000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1B-NI-05",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Discuss real-world cybersecurity problems and how personal information can be protected.\n\nClarification: Just as we protect our personal property offline, we also need to protect our devices and the information stored on them. Information can be protected using various security measures. These measures can be physical and/or digital. Students could discuss or use a journaling or blogging activity to explain, orally or in writing, about topics that relate to personal cybersecurity issues. Discussion topics could be based on current events related to cybersecurity or topics that are applicable to students, such as the necessity of backing up data to guard against loss, how to create strong passwords and the importance of not sharing passwords, or why we should install and keep anti-virus software updated to protect data and systems.",
      "comments": [],
      "ancestorIds": [
        "8CF40101B6784C5CBB81057CE81EFF7B",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "8CF40101B6784C5CBB81057CE81EFF7B"
    },
    "D9C374983545495EAF98747AE769CDA1": {
      "id": "D9C374983545495EAF98747AE769CDA1",
      "asnIdentifier": null,
      "position": 31000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1B-NI-04",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Model how information is broken down into smaller pieces, transmitted as packets through multiple devices over networks and the Internet, and reassembled at the destination.\n\nClarification: Information is sent and received over physical or wireless paths. It is broken down into smaller pieces called packets, which are sent independently and reassembled at the destination. Students should demonstrate their understanding of this flow of information by, for instance, drawing a model of the way packets are transmitted, programming an animation to show how packets are transmitted, or demonstrating this through an unplugged activity which has them act it out in some way.",
      "comments": [],
      "ancestorIds": [
        "8CF40101B6784C5CBB81057CE81EFF7B",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "8CF40101B6784C5CBB81057CE81EFF7B"
    },
    "8CF40101B6784C5CBB81057CE81EFF7B": {
      "id": "8CF40101B6784C5CBB81057CE81EFF7B",
      "asnIdentifier": null,
      "position": 30000,
      "depth": 1,
      "listId": "B",
      "statementNotation": "1B-NI",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Networks & the Internet",
      "comments": [],
      "ancestorIds": [
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "D866A37270C24A6196C03D7D9E65FD3A"
    },
    "A65FB1F3220E43EB934CC94E3A807815": {
      "id": "A65FB1F3220E43EB934CC94E3A807815",
      "asnIdentifier": null,
      "position": 29000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "1B-CS-03",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine potential solutions to solve simple hardware and software problems using common troubleshooting strategies.\n\nClarification: Although computing systems may vary, common troubleshooting strategies can be used on all of them. Students should be able to identify solutions to problems such as the device not responding, no power, no network, app crashing, no sound, or password entry not working. Should errors occur at school, the goal would be that students would use various strategies, such as rebooting the device, checking for power, checking network availability, closing and reopening an app, making sure speakers are turned on or headphones are plugged in, and making sure that the caps lock key is not on, to solve these problems, when possible.",
      "comments": [],
      "ancestorIds": [
        "2048B3598CCA4F278D4079967E72E0F3",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048B3598CCA4F278D4079967E72E0F3"
    },
    "6C5B6DCD7CC94E129632ADA16925497E": {
      "id": "6C5B6DCD7CC94E129632ADA16925497E",
      "asnIdentifier": null,
      "position": 28000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1B-CS-02",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Model how computer hardware and software work together as a system to accomplish tasks.\n\nClarification: In order for a person to accomplish tasks with a computer, both hardware and software are needed. At this stage, a model should only include the basic elements of a computer system, such as input, output, processor, sensors, and storage. Students could draw a model on paper or in a drawing program, program an animation to demonstrate it, or demonstrate it by acting this out in some way.",
      "comments": [],
      "ancestorIds": [
        "2048B3598CCA4F278D4079967E72E0F3",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048B3598CCA4F278D4079967E72E0F3"
    },
    "42F45C572A6246DA97CBCAA115B79306": {
      "id": "42F45C572A6246DA97CBCAA115B79306",
      "asnIdentifier": null,
      "position": 27000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1B-CS-01",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe how internal and external parts of computing devices function to form a system.\n\nClarification: Computing devices often depend on other devices or components. For example, a robot depends on a physically attached light sensor to detect changes in brightness, whereas the light sensor depends on the robot for power. Keyboard input or a mouse click could cause an action to happen or information to be displayed on a screen; this could only happen because the computer has a processor to evaluate what is happening externally and produce corresponding responses. Students should describe how devices and components interact using correct terminology.",
      "comments": [],
      "ancestorIds": [
        "2048B3598CCA4F278D4079967E72E0F3",
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "2048B3598CCA4F278D4079967E72E0F3"
    },
    "2048B3598CCA4F278D4079967E72E0F3": {
      "id": "2048B3598CCA4F278D4079967E72E0F3",
      "asnIdentifier": null,
      "position": 26000,
      "depth": 1,
      "listId": "A",
      "statementNotation": "1B-CS",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing Systems",
      "comments": [],
      "ancestorIds": [
        "D866A37270C24A6196C03D7D9E65FD3A"
      ],
      "parentId": "D866A37270C24A6196C03D7D9E65FD3A"
    },
    "D866A37270C24A6196C03D7D9E65FD3A": {
      "id": "D866A37270C24A6196C03D7D9E65FD3A",
      "asnIdentifier": null,
      "position": 25000,
      "depth": 0,
      "listId": "II",
      "statementNotation": "1B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "3-5 Standards",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "DBBB8E3311AE471B8633334922876FA7": {
      "id": "DBBB8E3311AE471B8633334922876FA7",
      "asnIdentifier": null,
      "position": 24000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "1A-IC-18",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Keep login information private, and log off of devices appropriately.\n\nClarification: People use computing technology in ways that can help or hurt themselves or others. Harmful behaviors, such as sharing private\ninformation and leaving public devices logged in should be recognized and avoided.",
      "comments": [],
      "ancestorIds": [
        "325465F6E0974938B4B7FDA4E0319C9C",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "325465F6E0974938B4B7FDA4E0319C9C"
    },
    "CE1D1F3679E24EF8A4CEC0CDEC78EF90": {
      "id": "CE1D1F3679E24EF8A4CEC0CDEC78EF90",
      "asnIdentifier": null,
      "position": 23000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1A-IC-17",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Work respectfully and responsibly with others online.\n\nClarification: Online communication facilitates positive interactions, such as sharing ideas with many people, but the public and anonymous nature of online communication also allows intimidating and inappropriate behavior in the form of cyberbullying. Students could share their work on blogs or in other collaborative spaces online, taking care to avoid sharing information that is inappropriate or that could personally identify them to others. Students could provide feedback to others on their work in a kind and respectful manner and could tell an adult if others are sharing things they should not share or are treating others in an unkind or disrespectful manner on online collaborative spaces.",
      "comments": [],
      "ancestorIds": [
        "325465F6E0974938B4B7FDA4E0319C9C",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "325465F6E0974938B4B7FDA4E0319C9C"
    },
    "1C121AC023C34C8CAFA223EC5EFA6CC8": {
      "id": "1C121AC023C34C8CAFA223EC5EFA6CC8",
      "asnIdentifier": null,
      "position": 22000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1A-IC-16",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare how people live and work before and after the implementation or adoption of new computing technology.\n\nClarification: Computing technology has positively and negatively changed the way people live and work. In the past, if students wanted to read about a topic, they needed access to a library to find a book about it. Today, students can view and read information on the Internet about a topic or they can download e-books about it directly to a device. Such information may be available in more than one language and could be read to a student, allowing for great accessibility.",
      "comments": [],
      "ancestorIds": [
        "325465F6E0974938B4B7FDA4E0319C9C",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "325465F6E0974938B4B7FDA4E0319C9C"
    },
    "325465F6E0974938B4B7FDA4E0319C9C": {
      "id": "325465F6E0974938B4B7FDA4E0319C9C",
      "asnIdentifier": null,
      "position": 21000,
      "depth": 1,
      "listId": "E",
      "statementNotation": "1A-IC",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Impacts of Computing",
      "comments": [],
      "ancestorIds": [
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "61508FFE9C414E71BEDFA7651731F670"
    },
    "E71AA07C5B6843F0A9AFB509E3F16CEA": {
      "id": "E71AA07C5B6843F0A9AFB509E3F16CEA",
      "asnIdentifier": null,
      "position": 20000,
      "depth": 2,
      "listId": "8",
      "statementNotation": "1A-AP-15",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Using correct terminology, describe steps taken and choices made during the iterative process of program development.\n\nClarification: At this stage, students should be able to talk or write about the goals and expected outcomes of the programs they create and the choices that they made when creating programs. This could be done using coding journals, discussions with a teacher, class presentations, or blogs.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "CE4B60001C8A4A4B9CC3257A04633788": {
      "id": "CE4B60001C8A4A4B9CC3257A04633788",
      "asnIdentifier": null,
      "position": 19000,
      "depth": 2,
      "listId": "7",
      "statementNotation": "1A-AP-14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Debug (identify and fix) errors in an algorithm or program that includes sequences and simple loops.  \n\nClarification: Algorithms or programs may not always work correctly. Students should be able to use various strategies, such as changing the sequence of the steps, following the algorithm in a step-by-step manner, or trial and error to fix problems in algorithms and programs.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "40EF762360014DA7BAF833C37ED3A0E0": {
      "id": "40EF762360014DA7BAF833C37ED3A0E0",
      "asnIdentifier": null,
      "position": 18000,
      "depth": 2,
      "listId": "6",
      "statementNotation": "1A-AP-13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Give attribution when using the ideas and creations of others while developing programs.\n\nClarification: Using computers comes with a level of responsibility. Students should credit artifacts that were created by others, such as pictures, music, and code. Credit could be given orally, if presenting their work to the class, or in writing or orally, if sharing work on a class blog or website. Proper attribution at this stage does not require a formal citation, such as in a bibliography or works cited document.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "BA73EBBB856043E183622C3D2D86620B": {
      "id": "BA73EBBB856043E183622C3D2D86620B",
      "asnIdentifier": null,
      "position": 17000,
      "depth": 2,
      "listId": "5",
      "statementNotation": "1A-AP-12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Develop plans that describe a program’s sequence of events, goals, and expected outcomes.\n\nClarification: Creating a plan for what a program will do clarifies the steps that will be needed to create a program and can be used to check if a program is correct. Students could create a planning document, such as a story map, a storyboard, or a sequential graphic organizer, to illustrate what their program will do. Students at this stage may complete the planning process with help from their teachers.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "46F68923489147618EED9D3B47F6FEDB": {
      "id": "46F68923489147618EED9D3B47F6FEDB",
      "asnIdentifier": null,
      "position": 16000,
      "depth": 2,
      "listId": "4",
      "statementNotation": "1A-AP-11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Decompose (break down) the steps needed to solve a problem into a precise sequence of instructions.\n\nClarification: Decomposition is the act of breaking down tasks into simpler tasks. Students could break down the steps needed to make a peanut butter and jelly sandwich, to brush their teeth, to draw a shape, to move a character across the screen, or to solve a level of a coding app.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "04ED9C98CF9B4ED6B9FD6B6CA41FC05B": {
      "id": "04ED9C98CF9B4ED6B9FD6B6CA41FC05B",
      "asnIdentifier": null,
      "position": 15000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "1A-AP-10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Develop programs with sequences and simple loops, to express ideas or address a problem.\n\nClarification: Programming is used as a tool to create products that reflect a wide range of interests. Control structures specify the order in which instructions are executed within a program.\nSequences are the order of instructions in a program. For example, if dialogue is not sequenced correctly when programming a simple animated story, the story will not make sense. If the commands to program a robot are not in the correct order, the robot will not complete the task desired.\nLoops allow for the repetition of a sequence of code multiple times. For example, in a program to show the life cycle of a butterfly, a loop could be combined with move commands to allow continual but controlled movement of the character.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "301C6CAE214D4D248646C7A14FF667E6": {
      "id": "301C6CAE214D4D248646C7A14FF667E6",
      "asnIdentifier": null,
      "position": 14000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1A-AP-09",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Model the way programs store and manipulate data by using numbers or other symbols to represent information.\n\nClarification: Information in the real world can be represented in computer programs. Students could use thumbs up/down as representations of yes/no, use arrows when writing algorithms to represent direction, or encode and decode words using numbers, pictographs, or other symbols to represent letters or words.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "3F10160B926B4712B46C380F986C457B": {
      "id": "3F10160B926B4712B46C380F986C457B",
      "asnIdentifier": null,
      "position": 13000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1A-AP-08",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Model daily processes by creating and following algorithms (sets of step-by-step instructions) to complete tasks.\n\nClarification: Composition is the combination of smaller tasks into more complex tasks. Students could create and follow algorithms for making simple foods, brushing their teeth, getting ready for school, participating in clean-up time.",
      "comments": [],
      "ancestorIds": [
        "E4BDED9B734140848C6A509CC3E618CA",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "E4BDED9B734140848C6A509CC3E618CA"
    },
    "E4BDED9B734140848C6A509CC3E618CA": {
      "id": "E4BDED9B734140848C6A509CC3E618CA",
      "asnIdentifier": null,
      "position": 12000,
      "depth": 1,
      "listId": "D",
      "statementNotation": "1A-AP",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Algorithms & Programming",
      "comments": [],
      "ancestorIds": [
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "61508FFE9C414E71BEDFA7651731F670"
    },
    "04C454B235F041489CA8CEC517D826B9": {
      "id": "04C454B235F041489CA8CEC517D826B9",
      "asnIdentifier": null,
      "position": 11000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "1A-DA-07",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify and describe patterns in data visualizations, such as charts or graphs, to make predictions.\n\nClarification: Data can be used to make inferences or predictions about the world. Students could analyze a graph or pie chart of the colors in a bag of candy or the averages for colors in multiple bags of candy, identify the patterns for which colors are most and least represented, and then make a prediction as to which colors will have most and least in a new bag of candy. Students could analyze graphs of temperatures taken at the beginning of the school day and end of the school day, identify the patterns of when temperatures rise and fall, and predict if they think the temperature will rise or fall at a particular time of the day, based on the pattern observed.",
      "comments": [],
      "ancestorIds": [
        "149BD3011424459D98EE8235D3A9C892",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "149BD3011424459D98EE8235D3A9C892"
    },
    "E76BECF20CC54A2EB30AAC0D64B914AB": {
      "id": "E76BECF20CC54A2EB30AAC0D64B914AB",
      "asnIdentifier": null,
      "position": 10000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1A-DA-06",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Collect and present the same data in various visual formats. \n\nClarification: The collection and use of data about the world around them is a routine part of life and influences how people live. Students could collect data on the weather, such as sunny days versus rainy days, the temperature at the beginning of the school day and end of the school day, or the inches of rain over the course of a storm. Students could count the number of pieces of each color of candy in a bag of candy, such as Skittles or M&Ms. Students could create surveys of things that interest them, such as favorite foods, pets, or TV shows, and collect answers to their surveys from their peers and others. The data collected could then be organized into two or more visualizations, such as a bar graph, pie chart, or pictograph.",
      "comments": [],
      "ancestorIds": [
        "149BD3011424459D98EE8235D3A9C892",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "149BD3011424459D98EE8235D3A9C892"
    },
    "86E3B714D879435FA21D3421C24C1129": {
      "id": "86E3B714D879435FA21D3421C24C1129",
      "asnIdentifier": null,
      "position": 9000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1A-DA-05",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Store, copy, search, retrieve, modify, and delete information using a computing device and define the information stored as data.\n\nClarification: All information stored and processed by a computing device is referred to as data. Data can be images, text documents, audio files, software programs or apps, video files, etc. As students use software to complete tasks on a computing device, they will be manipulating data.",
      "comments": [],
      "ancestorIds": [
        "149BD3011424459D98EE8235D3A9C892",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "149BD3011424459D98EE8235D3A9C892"
    },
    "149BD3011424459D98EE8235D3A9C892": {
      "id": "149BD3011424459D98EE8235D3A9C892",
      "asnIdentifier": null,
      "position": 8000,
      "depth": 1,
      "listId": "C",
      "statementNotation": "1A-DA",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data & Analysis",
      "comments": [],
      "ancestorIds": [
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "61508FFE9C414E71BEDFA7651731F670"
    },
    "C6DFC52A9F68477898EEB32E0EAED22B": {
      "id": "C6DFC52A9F68477898EEB32E0EAED22B",
      "asnIdentifier": null,
      "position": 7000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1A-NI-04",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain what passwords are and why we use them, and use strong passwords to protect devices and information from unauthorized access.\n\nClarification: Learning to protect one's device or information from unwanted use by others is an essential first step in learning about cybersecurity. Students are not required to use multiple strong passwords. They should appropriately use and protect the passwords they are required to use.",
      "comments": [],
      "ancestorIds": [
        "37D6383898A64D18BA88F9F4587D830A",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "37D6383898A64D18BA88F9F4587D830A"
    },
    "37D6383898A64D18BA88F9F4587D830A": {
      "id": "37D6383898A64D18BA88F9F4587D830A",
      "asnIdentifier": null,
      "position": 6000,
      "depth": 1,
      "listId": "B",
      "statementNotation": "1A-Ne",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Networks & the Internet",
      "comments": [],
      "ancestorIds": [
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "61508FFE9C414E71BEDFA7651731F670"
    },
    "49A22088943B4E11A7B31F7E34D1F544": {
      "id": "49A22088943B4E11A7B31F7E34D1F544",
      "asnIdentifier": null,
      "position": 5000,
      "depth": 2,
      "listId": "3",
      "statementNotation": "1A-CS-03",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe basic hardware and software problems using accurate terminology. \n\nClarification: Problems with computing systems have different causes. Students at this level do not need to understand those causes, but they should be able to communicate a problem with accurate terminology (e.g., when an app or program is not working as expected, a device will not turn on, the sound does not work, etc.). Ideally, students would be able to use simple troubleshooting strategies, including turning a device off and on to reboot it, closing and reopening an app, turning on speakers, or plugging in headphones. These are, however, not specified in the standard, because these problems may not occur.",
      "comments": [],
      "ancestorIds": [
        "F09C24DB142C4F5E9E89E58D50CC26A2",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "F09C24DB142C4F5E9E89E58D50CC26A2"
    },
    "34CD16104C6A47A39D93429A9B3031BA": {
      "id": "34CD16104C6A47A39D93429A9B3031BA",
      "asnIdentifier": null,
      "position": 4000,
      "depth": 2,
      "listId": "2",
      "statementNotation": "1A-CS-02",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use appropriate terminology in identifying and describing the function of common physical components of computing systems (hardware).\n\nClarification: A computing system is composed of hardware and software.Hardware consists of physical components.Students should be able to identify and describe the function of external hardware, such as desktop computers, laptop computers, tablet devices, monitors, keyboards, mice, and printers.",
      "comments": [],
      "ancestorIds": [
        "F09C24DB142C4F5E9E89E58D50CC26A2",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "F09C24DB142C4F5E9E89E58D50CC26A2"
    },
    "090DF75995304AE0A12A15ADCDD02527": {
      "id": "090DF75995304AE0A12A15ADCDD02527",
      "asnIdentifier": null,
      "position": 3000,
      "depth": 2,
      "listId": "1",
      "statementNotation": "1A-CS-01",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Select and operate appropriate software to perform a variety of tasks, and recognize that users have different needs and preferences for the technology they use.\n\nClarification: People use computing devices to perform a variety of tasks accurately and quickly. Students should be able to select the appropriate app/program to use for tasks they are required to complete. For example, if students are asked to draw a picture, they should be able to open and use a drawing app/program to complete this task, or if they are asked to create a presentation, they should be able to open and use presentation software. In addition, with teacher guidance, students should compare and discuss preferences for software with the same primary functionality. Students could compare different web browsers or word processing, presentation, or drawing programs.",
      "comments": [],
      "ancestorIds": [
        "F09C24DB142C4F5E9E89E58D50CC26A2",
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "F09C24DB142C4F5E9E89E58D50CC26A2"
    },
    "F09C24DB142C4F5E9E89E58D50CC26A2": {
      "id": "F09C24DB142C4F5E9E89E58D50CC26A2",
      "asnIdentifier": null,
      "position": 2000,
      "depth": 1,
      "listId": "A",
      "statementNotation": "1A-CS",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing Systems",
      "comments": [],
      "ancestorIds": [
        "61508FFE9C414E71BEDFA7651731F670"
      ],
      "parentId": "61508FFE9C414E71BEDFA7651731F670"
    },
    "61508FFE9C414E71BEDFA7651731F670": {
      "id": "61508FFE9C414E71BEDFA7651731F670",
      "asnIdentifier": null,
      "position": 1000,
      "depth": 0,
      "listId": "I",
      "statementNotation": "1A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "K-2 Standards",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    }
  }
}