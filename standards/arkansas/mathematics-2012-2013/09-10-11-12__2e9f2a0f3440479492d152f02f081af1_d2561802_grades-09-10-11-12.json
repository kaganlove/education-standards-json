{
  "id": "2E9F2A0F3440479492D152F02F081AF1_D2561802_grades-09-10-11-12",
  "title": "Math Applications and Algorithms: Grades 9, 10, 11, 12",
  "subject": "Mathematics (2012-2013)",
  "normalizedSubject": "Math",
  "educationLevels": [
    "09",
    "10",
    "11",
    "12"
  ],
  "cspStatus": {},
  "license": {
    "title": "CC BY 3.0 US",
    "URL": "http://creativecommons.org/licenses/by/3.0/us/",
    "rightsHolder": "Desire2Learn Incorporated"
  },
  "document": {
    "title": "Mathematical Applications and Algorithms Curriculum Framework",
    "sourceURL": "http://www.arkansased.org/public/userfiles/Learning_Services/Curriculum%20and%20Instruction/Frameworks/Math/Mathematical%20Applications%20and%20Algorithms%20CCSS%202013_2014.pdf",
    "asnIdentifier": "D2561802",
    "publicationStatus": "Deprecated",
    "id": "D2561802",
    "valid": "2012"
  },
  "jurisdiction": {
    "id": "2E9F2A0F3440479492D152F02F081AF1",
    "title": "Arkansas"
  },
  "standards": {
    "05A185E064214C799CE8A545D3A78464": {
      "id": "05A185E064214C799CE8A545D3A78464",
      "asnIdentifier": "S2561865",
      "position": 63000,
      "depth": 2,
      "statementNotation": "DMT.7.MAA.6",
      "description": "Estimate best-case or worst-case scenarios using a spreadsheet application scenario tool",
      "ancestorIds": [
        "773C36AF13EB4BE19C024B4591C40B01",
        "27C983A1812F43EDBB2758FC476F07C9"
      ],
      "parentId": "773C36AF13EB4BE19C024B4591C40B01"
    },
    "3FC28A91B72C40EE8D3BE3F59434C3F6": {
      "statementNotation": "DMT.7.MAA.5",
      "description": "Name a range, one cell or a group of cells; use the name to select cells",
      "id": "3FC28A91B72C40EE8D3BE3F59434C3F6",
      "asnIdentifier": "S2561864",
      "position": 62000,
      "depth": 2,
      "ancestorIds": [
        "773C36AF13EB4BE19C024B4591C40B01",
        "27C983A1812F43EDBB2758FC476F07C9"
      ],
      "parentId": "773C36AF13EB4BE19C024B4591C40B01"
    },
    "5ADB9CA182324D2CA616772D466EDEA1": {
      "statementNotation": "DMT.7.MAA.4",
      "description": "Design and investigate best-case or worst-case scenarios of a program",
      "id": "5ADB9CA182324D2CA616772D466EDEA1",
      "asnIdentifier": "S2561863",
      "position": 61000,
      "depth": 2,
      "ancestorIds": [
        "773C36AF13EB4BE19C024B4591C40B01",
        "27C983A1812F43EDBB2758FC476F07C9"
      ],
      "parentId": "773C36AF13EB4BE19C024B4591C40B01"
    },
    "7279CF912445452BA37E742AFE355777": {
      "comments": [
        "(e.g., syntax, runtime, logic)"
      ],
      "id": "7279CF912445452BA37E742AFE355777",
      "asnIdentifier": "S2561862",
      "position": 60000,
      "depth": 2,
      "statementNotation": "DMT.7.MAA.3",
      "description": "Understand and differentiate the different error types",
      "ancestorIds": [
        "773C36AF13EB4BE19C024B4591C40B01",
        "27C983A1812F43EDBB2758FC476F07C9"
      ],
      "parentId": "773C36AF13EB4BE19C024B4591C40B01"
    },
    "1F84A8BFCD084504855577A13915B420": {
      "id": "1F84A8BFCD084504855577A13915B420",
      "asnIdentifier": "S2561861",
      "position": 59000,
      "depth": 2,
      "statementNotation": "DMT.7.MAA.2",
      "description": "Identify and eliminate error messages using troubleshooting techniques (debug)",
      "ancestorIds": [
        "773C36AF13EB4BE19C024B4591C40B01",
        "27C983A1812F43EDBB2758FC476F07C9"
      ],
      "parentId": "773C36AF13EB4BE19C024B4591C40B01"
    },
    "1C0C900646974ED6896645992E85C63C": {
      "position": 58000,
      "depth": 2,
      "statementNotation": "DMT.7.MAA.1",
      "description": "Compare results from mathematical formulas to their program equivalent",
      "id": "1C0C900646974ED6896645992E85C63C",
      "asnIdentifier": "S2561860",
      "ancestorIds": [
        "773C36AF13EB4BE19C024B4591C40B01",
        "27C983A1812F43EDBB2758FC476F07C9"
      ],
      "parentId": "773C36AF13EB4BE19C024B4591C40B01"
    },
    "773C36AF13EB4BE19C024B4591C40B01": {
      "statementLabel": "Content Standard",
      "listId": "7:",
      "description": "The student will manipulate data to adjust and test programs designed using a programmable calculator and/or computer spreadsheet application.",
      "id": "773C36AF13EB4BE19C024B4591C40B01",
      "asnIdentifier": "S2561859",
      "position": 57000,
      "depth": 1,
      "ancestorIds": [
        "27C983A1812F43EDBB2758FC476F07C9"
      ],
      "parentId": "27C983A1812F43EDBB2758FC476F07C9"
    },
    "27C983A1812F43EDBB2758FC476F07C9": {
      "id": "27C983A1812F43EDBB2758FC476F07C9",
      "asnIdentifier": "S2561858",
      "position": 56000,
      "depth": 0,
      "statementLabel": "Strand",
      "description": "Data Manipulation and Testing",
      "ancestorIds": [],
      "parentId": null
    },
    "E8CDC006C2874E8FB2814C9DD27658F9": {
      "depth": 2,
      "statementNotation": "PI.6.MAA.8",
      "description": "Use a spreadsheet application to sort data using various methods",
      "comments": [
        "(e.g., bubble, quick, shell)"
      ],
      "id": "E8CDC006C2874E8FB2814C9DD27658F9",
      "asnIdentifier": "S2561857",
      "position": 55000,
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "D4AE2AB0E9E449FC8CAB1C2A6C482071": {
      "description": "Use subroutines to reduce keystrokes and memory use",
      "id": "D4AE2AB0E9E449FC8CAB1C2A6C482071",
      "asnIdentifier": "S2561856",
      "position": 54000,
      "depth": 2,
      "statementNotation": "PI.6.MAA.7",
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "10CED78145AC438D9033297CDFDA87C2": {
      "statementNotation": "PI.6.MAA.6",
      "description": "Locate, categorize, and implement programming commands",
      "id": "10CED78145AC438D9033297CDFDA87C2",
      "asnIdentifier": "S2561855",
      "position": 53000,
      "depth": 2,
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "E06C540E485C4B1FAC5848237E51323B": {
      "id": "E06C540E485C4B1FAC5848237E51323B",
      "asnIdentifier": "S2561854",
      "position": 52000,
      "depth": 2,
      "statementNotation": "PI.6.MAA.5",
      "description": "Create programs using various display modes including tables and graphs",
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "7571B13ADCA049458482B0FBA78467F0": {
      "position": 51000,
      "depth": 2,
      "statementNotation": "PI.6.MAA.4",
      "description": "Develop functional programs from algorithms developed from the mathematical models",
      "id": "7571B13ADCA049458482B0FBA78467F0",
      "asnIdentifier": "S2561853",
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "707523C869254D8F925F4858DB3B0DA2": {
      "id": "707523C869254D8F925F4858DB3B0DA2",
      "asnIdentifier": "S2561852",
      "position": 50000,
      "depth": 2,
      "statementNotation": "PI.6.MAA.3",
      "description": "Create, edit, and execute programs to calculate mathematical formulas",
      "comments": [
        "(e.g., quadratic formula, volume of a simple solid)"
      ],
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "F9E773BFECB644A099BA3CF19CDABD28": {
      "id": "F9E773BFECB644A099BA3CF19CDABD28",
      "asnIdentifier": "S2561851",
      "position": 49000,
      "depth": 2,
      "statementNotation": "PI.6.MAA.2",
      "description": "Create, edit, and execute programs using recursions and loops in a programmable calculator and spreadsheet application",
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "75904580E3F3411B868E7A8F27AFC343": {
      "statementNotation": "PI.6.MAA.1",
      "description": "Create, edit, and execute a program utilizing an array in a programmable calculator and spreadsheet application",
      "id": "75904580E3F3411B868E7A8F27AFC343",
      "asnIdentifier": "S2561850",
      "position": 48000,
      "depth": 2,
      "ancestorIds": [
        "BC5FCE0E352648D698CBBB7C6C74B023",
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "BC5FCE0E352648D698CBBB7C6C74B023"
    },
    "BC5FCE0E352648D698CBBB7C6C74B023": {
      "statementLabel": "Content Standard",
      "listId": "6:",
      "description": "The student will create, edit, and execute programs using a programmable calculator and/or computer spreadsheet application program.",
      "id": "BC5FCE0E352648D698CBBB7C6C74B023",
      "asnIdentifier": "S2561849",
      "position": 47000,
      "depth": 1,
      "ancestorIds": [
        "1392C7DBEF284C2D8723652923E1157B"
      ],
      "parentId": "1392C7DBEF284C2D8723652923E1157B"
    },
    "1392C7DBEF284C2D8723652923E1157B": {
      "id": "1392C7DBEF284C2D8723652923E1157B",
      "asnIdentifier": "S2561848",
      "position": 46000,
      "depth": 0,
      "statementLabel": "Strand",
      "description": "Program Implementation",
      "ancestorIds": [],
      "parentId": null
    },
    "E474CBEE37D84F17814C2821A89B403C": {
      "description": "Define and use variable data types",
      "comments": [
        "(e.g., integers, real, character)"
      ],
      "id": "E474CBEE37D84F17814C2821A89B403C",
      "asnIdentifier": "S2561847",
      "position": 45000,
      "depth": 2,
      "statementNotation": "PD.5.MAA.7",
      "ancestorIds": [
        "91A2E7B825CB4F6B86769F2AED0D3E9A",
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "91A2E7B825CB4F6B86769F2AED0D3E9A"
    },
    "179B160871734610AFC2A0DDFD063C84": {
      "id": "179B160871734610AFC2A0DDFD063C84",
      "asnIdentifier": "S2561846",
      "position": 44000,
      "depth": 2,
      "statementNotation": "PD.5.MAA.6",
      "description": "Develop recursive relationships from mathematical models",
      "comments": [
        "(e.g., arithmetic and geometric sequences)"
      ],
      "ancestorIds": [
        "91A2E7B825CB4F6B86769F2AED0D3E9A",
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "91A2E7B825CB4F6B86769F2AED0D3E9A"
    },
    "327CD568E7D14FF89CE229E35C24E228": {
      "description": "Use flowchart terminology such as terminals (starts and stops), subroutines, and connectors",
      "id": "327CD568E7D14FF89CE229E35C24E228",
      "asnIdentifier": "S2561845",
      "position": 43000,
      "depth": 2,
      "statementNotation": "PD.5.MAA.5",
      "ancestorIds": [
        "91A2E7B825CB4F6B86769F2AED0D3E9A",
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "91A2E7B825CB4F6B86769F2AED0D3E9A"
    },
    "4357A8762557405783A64BC09C130FD1": {
      "asnIdentifier": "S2561844",
      "position": 42000,
      "depth": 2,
      "statementNotation": "PD.5.MAA.4",
      "description": "Represent an algorithm representation as a flowchart and in pseudocode",
      "id": "4357A8762557405783A64BC09C130FD1",
      "ancestorIds": [
        "91A2E7B825CB4F6B86769F2AED0D3E9A",
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "91A2E7B825CB4F6B86769F2AED0D3E9A"
    },
    "0A1450DB20C543C095FCDEA8C1F6C142": {
      "position": 41000,
      "depth": 2,
      "statementNotation": "PD.5.MAA.3",
      "description": "Define and differentiate Decision (selection) and Sequence (process)",
      "id": "0A1450DB20C543C095FCDEA8C1F6C142",
      "asnIdentifier": "S2561843",
      "ancestorIds": [
        "91A2E7B825CB4F6B86769F2AED0D3E9A",
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "91A2E7B825CB4F6B86769F2AED0D3E9A"
    },
    "6208ABA5B2D149AD959512A73C0AF039": {
      "description": "Implement conditional statements that include if/then, if/then/else, case statements, and Boolean logic",
      "id": "6208ABA5B2D149AD959512A73C0AF039",
      "asnIdentifier": "S2561842",
      "position": 40000,
      "depth": 2,
      "statementNotation": "PD.5.MAA.2",
      "ancestorIds": [
        "91A2E7B825CB4F6B86769F2AED0D3E9A",
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "91A2E7B825CB4F6B86769F2AED0D3E9A"
    },
    "02AD3B2CD75A45B6B867FFA447DF98D3": {
      "id": "02AD3B2CD75A45B6B867FFA447DF98D3",
      "asnIdentifier": "S2561841",
      "position": 39000,
      "depth": 2,
      "statementNotation": "PD.5.MAA.1",
      "description": "Translate a mathematical expression into a computer statement which involves writing assignment statements and using the order of operations",
      "ancestorIds": [
        "91A2E7B825CB4F6B86769F2AED0D3E9A",
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "91A2E7B825CB4F6B86769F2AED0D3E9A"
    },
    "91A2E7B825CB4F6B86769F2AED0D3E9A": {
      "asnIdentifier": "S2561840",
      "position": 38000,
      "depth": 1,
      "statementLabel": "Content Standard",
      "listId": "5:",
      "description": "The student will design a step-by-step plan to solve a given problem",
      "id": "91A2E7B825CB4F6B86769F2AED0D3E9A",
      "ancestorIds": [
        "0E2FD27D08F74AB89A29C4650BBE6897"
      ],
      "parentId": "0E2FD27D08F74AB89A29C4650BBE6897"
    },
    "0E2FD27D08F74AB89A29C4650BBE6897": {
      "id": "0E2FD27D08F74AB89A29C4650BBE6897",
      "asnIdentifier": "S2561839",
      "position": 37000,
      "depth": 0,
      "statementLabel": "Strand",
      "description": "Program Design",
      "ancestorIds": [],
      "parentId": null
    },
    "24E1465DF8404AED829F73B9766F5FC5": {
      "position": 36000,
      "depth": 2,
      "statementNotation": "PS.4.MAA.4",
      "description": "Write an algorithm from a mathematical model",
      "id": "24E1465DF8404AED829F73B9766F5FC5",
      "asnIdentifier": "S2561838",
      "ancestorIds": [
        "8C0E65A01C31431C9CE0D3952A21DD25",
        "466C996C481A4A26BA0184520B09351E"
      ],
      "parentId": "8C0E65A01C31431C9CE0D3952A21DD25"
    },
    "503ABF0F9956463F93AD6A8F7B6E32EC": {
      "description": "Analyze and interpret truth tables from basic statements using Boolean operators (AND, OR, XOR, and NOT)",
      "id": "503ABF0F9956463F93AD6A8F7B6E32EC",
      "asnIdentifier": "S2561837",
      "position": 35000,
      "depth": 2,
      "statementNotation": "PS.4.MAA.3",
      "ancestorIds": [
        "8C0E65A01C31431C9CE0D3952A21DD25",
        "466C996C481A4A26BA0184520B09351E"
      ],
      "parentId": "8C0E65A01C31431C9CE0D3952A21DD25"
    },
    "D2EB1B3367C144229AC6DC1FA700668C": {
      "id": "D2EB1B3367C144229AC6DC1FA700668C",
      "asnIdentifier": "S2561836",
      "position": 34000,
      "depth": 2,
      "statementNotation": "PS.4.MAA.2",
      "description": "Write an algorithm to solve mathematical problems using formulas, equations, and functions",
      "ancestorIds": [
        "8C0E65A01C31431C9CE0D3952A21DD25",
        "466C996C481A4A26BA0184520B09351E"
      ],
      "parentId": "8C0E65A01C31431C9CE0D3952A21DD25"
    },
    "249AC33644904521BA40C349C3DCD63B": {
      "position": 33000,
      "depth": 2,
      "statementNotation": "PS.4.MAA.1",
      "description": "Analyze and interpret graphs, charts, and tables in the design and implementation of a computer program",
      "id": "249AC33644904521BA40C349C3DCD63B",
      "asnIdentifier": "S2561835",
      "ancestorIds": [
        "8C0E65A01C31431C9CE0D3952A21DD25",
        "466C996C481A4A26BA0184520B09351E"
      ],
      "parentId": "8C0E65A01C31431C9CE0D3952A21DD25"
    },
    "8C0E65A01C31431C9CE0D3952A21DD25": {
      "asnIdentifier": "S2561834",
      "position": 32000,
      "depth": 1,
      "statementLabel": "Content Standard",
      "listId": "4:",
      "description": "The student will develop and apply logical reasoning skills to solve real-world problems through the development of mathematical models.",
      "id": "8C0E65A01C31431C9CE0D3952A21DD25",
      "ancestorIds": [
        "466C996C481A4A26BA0184520B09351E"
      ],
      "parentId": "466C996C481A4A26BA0184520B09351E"
    },
    "466C996C481A4A26BA0184520B09351E": {
      "statementLabel": "Strand",
      "description": "Problem Solving",
      "id": "466C996C481A4A26BA0184520B09351E",
      "asnIdentifier": "S2561833",
      "position": 31000,
      "depth": 0,
      "ancestorIds": [],
      "parentId": null
    },
    "EDA5862EAEE3440D9D2780FEBCF22E14": {
      "id": "EDA5862EAEE3440D9D2780FEBCF22E14",
      "asnIdentifier": "S2561832",
      "position": 30000,
      "depth": 2,
      "statementNotation": "SEM.3.MAA.8",
      "description": "Work with 2 × 2 matrices as transformations of the plane and interpret the absolute value of the determinant in terms of area",
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "3A5E0173E3C9427A8804579429D65473": {
      "asnIdentifier": "S2561831",
      "position": 29000,
      "depth": 2,
      "statementNotation": "SEM.3.MAA.7",
      "description": "Understand that the zero and identity matrices play a role in matrix addition and multiplication similar to the role of 0 and 1 in the real numbers; the determinant of a square matrix is nonzero if and only if the matrix has a multiplicative inverse",
      "id": "3A5E0173E3C9427A8804579429D65473",
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "4A39BD3A438147278809EFEC94D292BD": {
      "id": "4A39BD3A438147278809EFEC94D292BD",
      "asnIdentifier": "S2561830",
      "position": 28000,
      "depth": 2,
      "statementNotation": "SEM.3.MAA.6",
      "description": "Understand that, unlike multiplication of numbers, matrix multiplication for square matrices is not a commutative operation but still satisfies the associative and distributive properties",
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "8B04728D23D140E780FD3A404C2FABBA": {
      "id": "8B04728D23D140E780FD3A404C2FABBA",
      "asnIdentifier": "S2561829",
      "position": 27000,
      "depth": 2,
      "statementNotation": "SEM.3.MAA.5",
      "description": "Add, subtract, and multiply matrices of appropriate dimensions",
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "BF3971309C794C1DBFA2FBBB0BFD2726": {
      "comments": [
        "(e.g., as when all of the payoffs in a game are doubled)"
      ],
      "id": "BF3971309C794C1DBFA2FBBB0BFD2726",
      "asnIdentifier": "S2561828",
      "position": 26000,
      "depth": 2,
      "statementNotation": "SEM.3.MAA.4",
      "description": "Multiply matrices by scalars to produce new matrices",
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "682DFED1B88B420FB518FE5F9B39D74E": {
      "id": "682DFED1B88B420FB518FE5F9B39D74E",
      "asnIdentifier": "S2561827",
      "position": 25000,
      "depth": 2,
      "statementNotation": "SEM.3.MAA.3",
      "description": "Use matrices to represent and manipulate data",
      "comments": [
        "(e.g., to represent payoffs or incidence relationships in a network)"
      ],
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "C881063916D245D4872938C854065F37": {
      "statementNotation": "SEM.3.MAA.2",
      "description": "Find the inverse of a matrix if it exists and use it to solve systems of linear equations; use technology for matrices of dimension 3 × 3 or greater",
      "id": "C881063916D245D4872938C854065F37",
      "asnIdentifier": "S2561826",
      "position": 24000,
      "depth": 2,
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "4FABC48C8C7D4677AD862E2EBCA39071": {
      "depth": 2,
      "statementNotation": "SEM.3.MAA.1",
      "description": "Represent a system of linear equations as a single matrix equation in a vector variable",
      "id": "4FABC48C8C7D4677AD862E2EBCA39071",
      "asnIdentifier": "S2561825",
      "position": 23000,
      "ancestorIds": [
        "C01FFA4C362048AD80692C3B6224FC24",
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "C01FFA4C362048AD80692C3B6224FC24"
    },
    "C01FFA4C362048AD80692C3B6224FC24": {
      "depth": 1,
      "statementLabel": "Content Standard",
      "listId": "3:",
      "description": "The student will create, manipulate, and solve systems of equations and matrices and apply them to programming arrays.",
      "id": "C01FFA4C362048AD80692C3B6224FC24",
      "asnIdentifier": "S2561824",
      "position": 22000,
      "ancestorIds": [
        "B5FA854950994C8EAD92DDA524D2E942"
      ],
      "parentId": "B5FA854950994C8EAD92DDA524D2E942"
    },
    "B5FA854950994C8EAD92DDA524D2E942": {
      "id": "B5FA854950994C8EAD92DDA524D2E942",
      "asnIdentifier": "S2561823",
      "position": 21000,
      "depth": 0,
      "statementLabel": "Strand",
      "description": "Systems of Equations and Matrices",
      "ancestorIds": [],
      "parentId": null
    },
    "808190D2F82A45908BDBBF1E3C2F7DD9": {
      "asnIdentifier": "S2561822",
      "position": 20000,
      "depth": 2,
      "statementNotation": "EF.2.MAA.5",
      "description": "Use volume formulas for cylinders, pyramids, cones, and spheres to solve problems",
      "comments": [
        "(e.g., represent inequalities describing nutritional and cost constraints on combinations of different foods)"
      ],
      "id": "808190D2F82A45908BDBBF1E3C2F7DD9",
      "ancestorIds": [
        "A9944FD0A66C43BF9253EDB0053AFB37",
        "EB6F072DD60049B697D0BAC075C85619"
      ],
      "parentId": "A9944FD0A66C43BF9253EDB0053AFB37"
    },
    "197EA6A62C924D8393A0C75AC916799C": {
      "description": "Give an informal argument using Cavalieri's principle for the formulas for the volume of a sphere and other solid figures",
      "comments": [
        "(e.g., represent inequalities describing nutritional and cost constraints on combinations of different foods)"
      ],
      "id": "197EA6A62C924D8393A0C75AC916799C",
      "asnIdentifier": "S2561821",
      "position": 19000,
      "depth": 2,
      "statementNotation": "EF.2.MAA.4",
      "ancestorIds": [
        "A9944FD0A66C43BF9253EDB0053AFB37",
        "EB6F072DD60049B697D0BAC075C85619"
      ],
      "parentId": "A9944FD0A66C43BF9253EDB0053AFB37"
    },
    "73FBF916F0FB434BB2251AB0424D26CB": {
      "id": "73FBF916F0FB434BB2251AB0424D26CB",
      "asnIdentifier": "S2561820",
      "position": 18000,
      "depth": 2,
      "statementNotation": "EF.2.MAA.3",
      "description": "Give an informal argument for the formulas for the circumference of a circle, area of a circle, and volume of a cylinder, pyramid, and cone; use dissection arguments, Cavalieri's principle, and informal limit arguments",
      "comments": [
        "(e.g., represent inequalities describing nutritional and cost constraints on combinations of different foods)"
      ],
      "ancestorIds": [
        "A9944FD0A66C43BF9253EDB0053AFB37",
        "EB6F072DD60049B697D0BAC075C85619"
      ],
      "parentId": "A9944FD0A66C43BF9253EDB0053AFB37"
    },
    "E82385347F5C48D982D49DC4B1CF2D86": {
      "comments": [
        "(e.g., rearrange Ohm's law V = IR to highlight resistance R)"
      ],
      "id": "E82385347F5C48D982D49DC4B1CF2D86",
      "asnIdentifier": "S2561819",
      "position": 17000,
      "depth": 2,
      "statementNotation": "EF.2.MAA.2",
      "description": "Rearrange formulas to highlight a quantity of interest using the same reasoning as in solving equations",
      "ancestorIds": [
        "A9944FD0A66C43BF9253EDB0053AFB37",
        "EB6F072DD60049B697D0BAC075C85619"
      ],
      "parentId": "A9944FD0A66C43BF9253EDB0053AFB37"
    },
    "EA55AAA52399416E89DB9627CD0BA23C": {
      "id": "EA55AAA52399416E89DB9627CD0BA23C",
      "asnIdentifier": "S2561818",
      "position": 16000,
      "depth": 2,
      "statementNotation": "EF.2.MAA.1",
      "description": "Represent constraints by equations or inequalities and by systems of equations and/or inequalities (two and three variable systems); interpret solutions as viable or nonviable options in a modeling context",
      "comments": [
        "(e.g., represent inequalities describing nutritional and cost constraints on combinations of different foods)"
      ],
      "ancestorIds": [
        "A9944FD0A66C43BF9253EDB0053AFB37",
        "EB6F072DD60049B697D0BAC075C85619"
      ],
      "parentId": "A9944FD0A66C43BF9253EDB0053AFB37"
    },
    "A9944FD0A66C43BF9253EDB0053AFB37": {
      "position": 15000,
      "depth": 1,
      "statementLabel": "Content Standard",
      "listId": "2:",
      "description": "The student will manipulate formulas and equations and apply them to programming applications.",
      "id": "A9944FD0A66C43BF9253EDB0053AFB37",
      "asnIdentifier": "S2561817",
      "ancestorIds": [
        "EB6F072DD60049B697D0BAC075C85619"
      ],
      "parentId": "EB6F072DD60049B697D0BAC075C85619"
    },
    "EB6F072DD60049B697D0BAC075C85619": {
      "depth": 0,
      "statementLabel": "Strand",
      "description": "Equations and Formulas",
      "id": "EB6F072DD60049B697D0BAC075C85619",
      "asnIdentifier": "S2561816",
      "position": 14000,
      "ancestorIds": [],
      "parentId": null
    },
    "3761C8B7C4414DB08FBB3E86FE1E7F71": {
      "id": "3761C8B7C4414DB08FBB3E86FE1E7F71",
      "asnIdentifier": "S2561815",
      "position": 13000,
      "depth": 2,
      "statementNotation": "F.1.MAA.11",
      "description": "Find the conjugate of a complex number; use conjugates to find moduli and quotients of complex numbers",
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "A9165B7E903C402F9B5657CA7B7E84C1": {
      "id": "A9165B7E903C402F9B5657CA7B7E84C1",
      "asnIdentifier": "S2561814",
      "position": 12000,
      "depth": 2,
      "statementNotation": "F.1.MAA.10",
      "description": "Use the relation i² = –1 and the commutative, associative, and distributive properties to add, subtract, and multiply complex numbers",
      "comments": [
        "e.g., the Fibonacci sequence is defined recursively by f(0) = f(1) = 1, f(n + 1) = f(n) + f(n − 1) for n ≥ 1"
      ],
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "684D357D86E4422CB90D88A2E1DF5317": {
      "id": "684D357D86E4422CB90D88A2E1DF5317",
      "asnIdentifier": "S2561813",
      "position": 11000,
      "depth": 2,
      "statementNotation": "F.1.MAA.9",
      "description": "Know there is a complex number i such that i² = –1, and every complex number has the form a + bi with a and b real",
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "ED7B8F63D3FD407382CE5A423044F576": {
      "statementNotation": "F.1.MAA.8",
      "description": "Use inverse functions to solve trigonometric equations that arise in modeling contexts, evaluate the solutions using technology, and interpret them in terms of the context",
      "id": "ED7B8F63D3FD407382CE5A423044F576",
      "asnIdentifier": "S2561812",
      "position": 10000,
      "depth": 2,
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "53EBDC4FFBDB42C88F1D6CDE319F8E49": {
      "statementNotation": "F.1.MAA.7",
      "description": "Understand that restricting a trigonometric function to a domain on which it is always increasing or always decreasing allows its inverse to be constructed",
      "id": "53EBDC4FFBDB42C88F1D6CDE319F8E49",
      "asnIdentifier": "S2561811",
      "position": 9000,
      "depth": 2,
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "4E615EC696EC4D69981E81A680602DE2": {
      "statementNotation": "F.1.MAA.6",
      "description": "Write arithmetic and geometric sequences both recursively and with an explicit formula, use them to model situations, and translate between the two forms",
      "id": "4E615EC696EC4D69981E81A680602DE2",
      "asnIdentifier": "S2561810",
      "position": 8000,
      "depth": 2,
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "B7C66826DB5D45E189F4064470E1893B": {
      "id": "B7C66826DB5D45E189F4064470E1893B",
      "asnIdentifier": "S2561809",
      "position": 7000,
      "depth": 2,
      "statementNotation": "F.1.MAA.5",
      "description": "Write a function that describes a relationship between two quantities:<ul><li>compose functions [e.g., if T(y) is the temperature in the atmosphere as a function of height, and ℎ(t) is the height of a weather balloon as a function of time, then T(h(t)) is the temperature at the location of the weather balloon as a function of time]</li><li>combine standard function types using arithmetic operations (e.g., build a function that models the temperature of a cooling body by adding a constant function to a decaying exponential and relate these functions to the model)</li><li>determine an explicit expression, a recursive process, or steps for calculation from a context</li></ul>",
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "42A0F241ADF048BE992007F5980785BF": {
      "position": 6000,
      "depth": 2,
      "statementNotation": "F.1.MAA.4",
      "description": "Compare properties of two functions each represented in a different way: algebraically, graphically, numerically in tables, or by verbal descriptions",
      "comments": [
        "e.g., given a graph of one quadratic function and an algebraic expression for another, determine which has the larger maximum"
      ],
      "id": "42A0F241ADF048BE992007F5980785BF",
      "asnIdentifier": "S2561808",
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "A3B7AE9A90C049C08F1003A5AB5B2164": {
      "asnIdentifier": "S2561807",
      "position": 5000,
      "depth": 2,
      "statementNotation": "F.1.MAA.3",
      "description": "Write a function defined by an expression in different but equivalent forms to reveal and explain different properties of the function",
      "comments": [
        "e.g., the Fibonacci sequence is defined recursively by f(0) = f(1) = 1, f(n + 1) = f(n) + f(n − 1) for n ≥ 1"
      ],
      "id": "A3B7AE9A90C049C08F1003A5AB5B2164",
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "65FADEB3BB3545DD8510CD8070513B1F": {
      "asnIdentifier": "S2561806",
      "position": 4000,
      "depth": 2,
      "statementNotation": "F.1.MAA.2",
      "description": "Graph functions expressed symbolically and show key features of the graph, by hand in simple cases and using technology for more complicated cases: <ul><li>graph exponential and logarithmic functions showing intercepts, end behavior, and trigonometric functions, showing period, midline, and amplitude </li><li>graph linear and quadratic functions and show intercepts, maxima, and minima</li><li>graph rational functions identifying zeros and asymptotes when suitable factorizations are available and showing end behavior</li></ul>",
      "id": "65FADEB3BB3545DD8510CD8070513B1F",
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "7949F97732B1451D84DED0C0FA0A2EBC": {
      "comments": [
        "e.g., the Fibonacci sequence is defined recursively by f(0) = f(1) = 1, f(n + 1) = f(n) + f(n − 1) for n ≥ 1"
      ],
      "id": "7949F97732B1451D84DED0C0FA0A2EBC",
      "asnIdentifier": "S2561805",
      "position": 3000,
      "depth": 2,
      "statementNotation": "F.1.MAA.1",
      "description": "Recognize that sequences are functions, sometimes defined recursively, whose domain is a subset of the integers",
      "ancestorIds": [
        "A93A9D29E41C456C8ABD56FAC3DF39E6",
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "A93A9D29E41C456C8ABD56FAC3DF39E6"
    },
    "A93A9D29E41C456C8ABD56FAC3DF39E6": {
      "id": "A93A9D29E41C456C8ABD56FAC3DF39E6",
      "asnIdentifier": "S2561804",
      "position": 2000,
      "depth": 1,
      "statementLabel": "Content Standard",
      "listId": "1:",
      "description": "The student will graphically, numerically, and algebraically evaluate concepts of different types of functions; include recursively defined functions, series, and sequences; and apply them to programming applications.",
      "ancestorIds": [
        "528A12CDDCE8489F8BF63D03ED889927"
      ],
      "parentId": "528A12CDDCE8489F8BF63D03ED889927"
    },
    "528A12CDDCE8489F8BF63D03ED889927": {
      "id": "528A12CDDCE8489F8BF63D03ED889927",
      "asnIdentifier": "S2561803",
      "position": 1000,
      "depth": 0,
      "statementLabel": "Strand",
      "description": "Functions",
      "ancestorIds": [],
      "parentId": null
    }
  }
}