{
  "id": "2E9F2A0F3440479492D152F02F081AF1_D2637250_grades-09-10-11-12",
  "title": "Programming I Java: Grades 9, 10, 11, 12",
  "subject": "CTE (2002-2018)",
  "normalizedSubject": "Career Education",
  "educationLevels": [
    "09",
    "10",
    "11",
    "12"
  ],
  "cspStatus": {},
  "license": {
    "rightsHolder": "Desire2Learn Incorporated",
    "title": "CC BY 3.0 US",
    "URL": "http://creativecommons.org/licenses/by/3.0/us/"
  },
  "document": {
    "publicationStatus": "Published",
    "id": "D2637250",
    "valid": "2007",
    "title": "Programming I Java",
    "sourceURL": "http://ace.arkansas.gov/cte/informationForms/curriculumFrameworks/Documents/Frameworks/Business/programmingonejava2007.pdf",
    "asnIdentifier": "D2637250"
  },
  "jurisdiction": {
    "id": "2E9F2A0F3440479492D152F02F081AF1",
    "title": "Arkansas"
  },
  "standards": {
    "2B5A66D806B14D1990638571CEBA1191": {
      "statementNotation": "6.8.1",
      "statementLabel": "Application",
      "description": "Write programs that use do while loops",
      "id": "2B5A66D806B14D1990638571CEBA1191",
      "asnIdentifier": "S2638712",
      "position": 132000,
      "depth": 2,
      "ancestorIds": [
        "47722A1A15FD492194563453E3C60CBB",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "47722A1A15FD492194563453E3C60CBB"
    },
    "47722A1A15FD492194563453E3C60CBB": {
      "position": 131000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "6.8",
      "description": "Explain the difference in the effect of a while loop (entrance condition loop) and a do while (exit condition loop) loop",
      "id": "47722A1A15FD492194563453E3C60CBB",
      "asnIdentifier": "S2638711",
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "3C6E20D4070A44C8A3C80E35557C8FE8": {
      "depth": 2,
      "statementNotation": "6.7.1",
      "statementLabel": "Application",
      "description": "Write programs that use accumulators with loops",
      "id": "3C6E20D4070A44C8A3C80E35557C8FE8",
      "asnIdentifier": "S2638710",
      "position": 130000,
      "ancestorIds": [
        "FADB4C964B194D26ACBD7E25B3D536E7",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "FADB4C964B194D26ACBD7E25B3D536E7"
    },
    "FADB4C964B194D26ACBD7E25B3D536E7": {
      "listId": "6.7",
      "description": "Explain the logic of using accumulators with loops",
      "id": "FADB4C964B194D26ACBD7E25B3D536E7",
      "asnIdentifier": "S2638709",
      "position": 129000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "71ABD870251B4546844CACF2E578C55C": {
      "statementLabel": "Application",
      "description": "Write programs that use counters with loops",
      "id": "71ABD870251B4546844CACF2E578C55C",
      "asnIdentifier": "S2638708",
      "position": 128000,
      "depth": 2,
      "statementNotation": "6.6.1",
      "ancestorIds": [
        "2EEB5882874D4BE794BF64C9D823770D",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "2EEB5882874D4BE794BF64C9D823770D"
    },
    "2EEB5882874D4BE794BF64C9D823770D": {
      "description": "Explain the process of using counters with loops",
      "id": "2EEB5882874D4BE794BF64C9D823770D",
      "asnIdentifier": "S2638707",
      "position": 127000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "6.6",
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "419F1ECC5B954C88816D2EBAC3717580": {
      "statementLabel": "Application",
      "description": "Write programs that use loops while",
      "id": "419F1ECC5B954C88816D2EBAC3717580",
      "asnIdentifier": "S2638706",
      "position": 126000,
      "depth": 2,
      "statementNotation": "6.5.1",
      "ancestorIds": [
        "39620841102F4E44BA2BB48119F4503E",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "39620841102F4E44BA2BB48119F4503E"
    },
    "39620841102F4E44BA2BB48119F4503E": {
      "listId": "6.5",
      "description": "Explain the logic of while loops",
      "id": "39620841102F4E44BA2BB48119F4503E",
      "asnIdentifier": "S2638705",
      "position": 125000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "8E99DA2E2CE74984B7ECF0AD30B55F50": {
      "position": 124000,
      "depth": 2,
      "statementNotation": "6.4.2",
      "statementLabel": "Application",
      "description": "Write programs that use nested loops for",
      "id": "8E99DA2E2CE74984B7ECF0AD30B55F50",
      "asnIdentifier": "S2638704",
      "ancestorIds": [
        "71CBA8D7E8944AE1979286161C1A17A4",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "71CBA8D7E8944AE1979286161C1A17A4"
    },
    "1EC3F6BBAAD14F4DA5D930342B83169D": {
      "position": 123000,
      "depth": 2,
      "statementNotation": "6.4.1",
      "statementLabel": "Application",
      "description": "Determine the output of a nested loop",
      "id": "1EC3F6BBAAD14F4DA5D930342B83169D",
      "asnIdentifier": "S2638703",
      "ancestorIds": [
        "71CBA8D7E8944AE1979286161C1A17A4",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "71CBA8D7E8944AE1979286161C1A17A4"
    },
    "71CBA8D7E8944AE1979286161C1A17A4": {
      "id": "71CBA8D7E8944AE1979286161C1A17A4",
      "asnIdentifier": "S2638702",
      "position": 122000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "6.4",
      "description": "Explain the syntax of nested loops",
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "3460872D8814426388A587B666A36229": {
      "id": "3460872D8814426388A587B666A36229",
      "asnIdentifier": "S2638701",
      "position": 121000,
      "depth": 2,
      "statementNotation": "6.3.1",
      "statementLabel": "Application",
      "description": "Write counting for loops with increments other than 1",
      "ancestorIds": [
        "73AEE4A5E2BB4800AE244986E98C5C6A",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "73AEE4A5E2BB4800AE244986E98C5C6A"
    },
    "73AEE4A5E2BB4800AE244986E98C5C6A": {
      "id": "73AEE4A5E2BB4800AE244986E98C5C6A",
      "asnIdentifier": "S2638700",
      "position": 120000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "6.3",
      "description": "Explain the procedure to use for loops to count in increments/decrements other than one",
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "38F5E35916A44BBA9295D06F9E85B449": {
      "id": "38F5E35916A44BBA9295D06F9E85B449",
      "asnIdentifier": "S2638699",
      "position": 119000,
      "depth": 2,
      "statementNotation": "6.2.1",
      "statementLabel": "Application",
      "description": "Write programs that use for loops",
      "ancestorIds": [
        "289FB803876441908BFABC78D457693B",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "289FB803876441908BFABC78D457693B"
    },
    "289FB803876441908BFABC78D457693B": {
      "statementLabel": "Knowledge Statement",
      "listId": "6.2",
      "description": "Describe the purpose and syntax of for loops",
      "id": "289FB803876441908BFABC78D457693B",
      "asnIdentifier": "S2638698",
      "position": 118000,
      "depth": 1,
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "39C30D17D7834C48A1D3CB22B6B157A7": {
      "depth": 2,
      "statementNotation": "6.1.1",
      "statementLabel": "Application",
      "description": "Prepare a list of terms with definitions",
      "id": "39C30D17D7834C48A1D3CB22B6B157A7",
      "asnIdentifier": "S2638697",
      "position": 117000,
      "ancestorIds": [
        "436306A228174009AAD3A40AB877343F",
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "436306A228174009AAD3A40AB877343F"
    },
    "436306A228174009AAD3A40AB877343F": {
      "listId": "6.1",
      "description": "Define terminology",
      "id": "436306A228174009AAD3A40AB877343F",
      "asnIdentifier": "S2638696",
      "position": 116000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "ancestorIds": [
        "48EECFD152D4474AA087C1E266B841BD"
      ],
      "parentId": "48EECFD152D4474AA087C1E266B841BD"
    },
    "48EECFD152D4474AA087C1E266B841BD": {
      "asnIdentifier": "S2638695",
      "position": 115000,
      "depth": 0,
      "statementLabel": "Unit",
      "listId": "6:",
      "description": "Loops",
      "id": "48EECFD152D4474AA087C1E266B841BD",
      "ancestorIds": [],
      "parentId": null
    },
    "C08AEAFD440046A598333238D8BA9572": {
      "statementLabel": "Application",
      "description": "Write a program that requires the use of short-circuit and (&&) and short-circuit or (||)",
      "id": "C08AEAFD440046A598333238D8BA9572",
      "asnIdentifier": "S2638694",
      "position": 114000,
      "depth": 2,
      "statementNotation": "5.8.2",
      "ancestorIds": [
        "B288EB16416E46AD8E7CF7CA094824FB",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "B288EB16416E46AD8E7CF7CA094824FB"
    },
    "490F532CA51A495AA415BA73740AABE4": {
      "id": "490F532CA51A495AA415BA73740AABE4",
      "asnIdentifier": "S2638693",
      "position": 113000,
      "depth": 2,
      "statementNotation": "5.8.1",
      "statementLabel": "Application",
      "description": "Write programs which require the use of &&, ||, and !",
      "ancestorIds": [
        "B288EB16416E46AD8E7CF7CA094824FB",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "B288EB16416E46AD8E7CF7CA094824FB"
    },
    "B288EB16416E46AD8E7CF7CA094824FB": {
      "id": "B288EB16416E46AD8E7CF7CA094824FB",
      "asnIdentifier": "S2638692",
      "position": 112000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.8",
      "description": "Explain the use of logical operators and , or , and not (&&, ||, !)",
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "B1B9CF8E447E4EE98F07936046326CB6": {
      "id": "B1B9CF8E447E4EE98F07936046326CB6",
      "asnIdentifier": "S2638691",
      "position": 111000,
      "depth": 2,
      "statementNotation": "5.7.1",
      "statementLabel": "Application",
      "description": "Write programs using block if-else for 3 or more alternatives",
      "ancestorIds": [
        "410A53EEEA7A413084F1EB782E8698DA",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "410A53EEEA7A413084F1EB782E8698DA"
    },
    "410A53EEEA7A413084F1EB782E8698DA": {
      "asnIdentifier": "S2638690",
      "position": 110000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.7",
      "description": "Explain the syntax and logic of nested statements",
      "id": "410A53EEEA7A413084F1EB782E8698DA",
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "6CCB785F97364959AD827A5A975DAACF": {
      "statementLabel": "Application",
      "description": "Write statements that use if-else to make the correct decision based on the data; use braces where needed to block the statements",
      "id": "6CCB785F97364959AD827A5A975DAACF",
      "asnIdentifier": "S2638689",
      "position": 109000,
      "depth": 2,
      "statementNotation": "5.6.1",
      "ancestorIds": [
        "1991029F89F247EFB11573EEFCD5A169",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "1991029F89F247EFB11573EEFCD5A169"
    },
    "1991029F89F247EFB11573EEFCD5A169": {
      "id": "1991029F89F247EFB11573EEFCD5A169",
      "asnIdentifier": "S2638688",
      "position": 108000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.6",
      "description": "Explain the syntax and logic of if-else statements",
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "020B43AA1887483497E360BB3BC26F28": {
      "asnIdentifier": "S2638687",
      "position": 107000,
      "depth": 2,
      "statementNotation": "5.5.2",
      "statementLabel": "Application",
      "description": "Write programs that use braces correctly to form block if statements",
      "id": "020B43AA1887483497E360BB3BC26F28",
      "ancestorIds": [
        "8AFC542BAFF34046B7FCCB7C0660D35D",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "8AFC542BAFF34046B7FCCB7C0660D35D"
    },
    "39A62CCEC97E447A8B5EBDC88EC4CEA7": {
      "id": "39A62CCEC97E447A8B5EBDC88EC4CEA7",
      "asnIdentifier": "S2638686",
      "position": 106000,
      "depth": 2,
      "statementNotation": "5.5.1",
      "statementLabel": "Application",
      "description": "Write programs that use if statements",
      "ancestorIds": [
        "8AFC542BAFF34046B7FCCB7C0660D35D",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "8AFC542BAFF34046B7FCCB7C0660D35D"
    },
    "8AFC542BAFF34046B7FCCB7C0660D35D": {
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.5",
      "description": "Explain the syntax and logic of if statements",
      "id": "8AFC542BAFF34046B7FCCB7C0660D35D",
      "asnIdentifier": "S2638685",
      "position": 105000,
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "57B5BADDAA8F4BF5AA6CDB4AB80E2785": {
      "statementNotation": "5.4.1",
      "statementLabel": "Application",
      "description": "Write boolean expressions that compare strings for equality and order",
      "id": "57B5BADDAA8F4BF5AA6CDB4AB80E2785",
      "asnIdentifier": "S2638684",
      "position": 104000,
      "depth": 2,
      "ancestorIds": [
        "82F373AC737449B1876B2FFE36E875E6",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "82F373AC737449B1876B2FFE36E875E6"
    },
    "82F373AC737449B1876B2FFE36E875E6": {
      "id": "82F373AC737449B1876B2FFE36E875E6",
      "asnIdentifier": "S2638683",
      "position": 103000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.4",
      "description": "Explain how to use the compareTo() and equals() methods from the String class",
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "10D4E7503DC041679C2C1128F33A753C": {
      "position": 102000,
      "depth": 2,
      "statementNotation": "5.3.1",
      "statementLabel": "Application",
      "description": "When given two strings, determine if they are equal, the first is smaller, or the first is larger",
      "id": "10D4E7503DC041679C2C1128F33A753C",
      "asnIdentifier": "S2638682",
      "ancestorIds": [
        "21E03F8896DF4380995F22ADA3B1C54D",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "21E03F8896DF4380995F22ADA3B1C54D"
    },
    "21E03F8896DF4380995F22ADA3B1C54D": {
      "id": "21E03F8896DF4380995F22ADA3B1C54D",
      "asnIdentifier": "S2638681",
      "position": 101000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.3",
      "description": "Describe the process of comparing two strings",
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "44E8847412FD4570BD2B1C02A65C4215": {
      "statementNotation": "5.2.1",
      "statementLabel": "Application",
      "description": "Write boolean expressions that use the appropriate relational operator",
      "id": "44E8847412FD4570BD2B1C02A65C4215",
      "asnIdentifier": "S2638680",
      "position": 100000,
      "depth": 2,
      "ancestorIds": [
        "92DE9EF4A4C74EF08D835BD09CBB7720",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "92DE9EF4A4C74EF08D835BD09CBB7720"
    },
    "92DE9EF4A4C74EF08D835BD09CBB7720": {
      "id": "92DE9EF4A4C74EF08D835BD09CBB7720",
      "asnIdentifier": "S2638679",
      "position": 99000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.2",
      "description": "List relational operators",
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "6CEB262257F6416A9949896AD4EA7065": {
      "depth": 2,
      "statementNotation": "5.1.1",
      "statementLabel": "Application",
      "description": "Prepare a list of terms with definitions",
      "id": "6CEB262257F6416A9949896AD4EA7065",
      "asnIdentifier": "S2638678",
      "position": 98000,
      "ancestorIds": [
        "920A824138D94A37AD5DCF1D0E755AED",
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "920A824138D94A37AD5DCF1D0E755AED"
    },
    "920A824138D94A37AD5DCF1D0E755AED": {
      "position": 97000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "5.1",
      "description": "Define terminology",
      "id": "920A824138D94A37AD5DCF1D0E755AED",
      "asnIdentifier": "S2638677",
      "ancestorIds": [
        "E0F8919C5D22496186576832547E514D"
      ],
      "parentId": "E0F8919C5D22496186576832547E514D"
    },
    "E0F8919C5D22496186576832547E514D": {
      "id": "E0F8919C5D22496186576832547E514D",
      "asnIdentifier": "S2638676",
      "position": 96000,
      "depth": 0,
      "statementLabel": "Unit",
      "listId": "5:",
      "description": "Decision Structure",
      "ancestorIds": [],
      "parentId": null
    },
    "0324084566A14FD7A449D377D7D1BCBC": {
      "id": "0324084566A14FD7A449D377D7D1BCBC",
      "asnIdentifier": "S2638675",
      "position": 95000,
      "depth": 2,
      "statementNotation": "4.12.1",
      "statementLabel": "Application",
      "description": "Write a program that obtains and uses random integers in the ranges 1…N and 0…N using (int) ((high - low + 1) * Math.Random() + low) formula",
      "ancestorIds": [
        "EB5DB1F52B61468DA5FBAE87AE6BFB32",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "EB5DB1F52B61468DA5FBAE87AE6BFB32"
    },
    "EB5DB1F52B61468DA5FBAE87AE6BFB32": {
      "description": "Describe how to obtain an integer random integer in the range of 0…N or 1…N inclusive (Math class)",
      "id": "EB5DB1F52B61468DA5FBAE87AE6BFB32",
      "asnIdentifier": "S2638674",
      "position": 94000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.12",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "63E4D2EE16064FADA926D757AB5DFF35": {
      "description": "Write a program that obtains and uses random numbers using Math.Random()",
      "id": "63E4D2EE16064FADA926D757AB5DFF35",
      "asnIdentifier": "S2638673",
      "position": 93000,
      "depth": 2,
      "statementNotation": "4.11.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "4A19E942C1884AAD8548F9DBF4CF544A",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "4A19E942C1884AAD8548F9DBF4CF544A"
    },
    "4A19E942C1884AAD8548F9DBF4CF544A": {
      "description": "Describe how to obtain a random double and explain the range of possible values (Math class)",
      "id": "4A19E942C1884AAD8548F9DBF4CF544A",
      "asnIdentifier": "S2638672",
      "position": 92000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.11",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "FE892DB65BF742A9B1C4B89AAC708617": {
      "statementNotation": "4.10.1",
      "statementLabel": "Application",
      "description": "Write a program that uses sqrt, pow, and abs Math functions in calculations",
      "id": "FE892DB65BF742A9B1C4B89AAC708617",
      "asnIdentifier": "S2638671",
      "position": 91000,
      "depth": 2,
      "ancestorIds": [
        "E3DB93B8A01043499277902DF544F154",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E3DB93B8A01043499277902DF544F154"
    },
    "E3DB93B8A01043499277902DF544F154": {
      "id": "E3DB93B8A01043499277902DF544F154",
      "asnIdentifier": "S2638670",
      "position": 90000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.10",
      "description": "Describe how to use the Math class to get a square root, power and/or absolute value (sqrt , pow , abs methods)",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "AEFC0461682A4D36908348442467545F": {
      "statementNotation": "4.9.1",
      "statementLabel": "Application",
      "description": "Write a program that displays the output with a specified number of decimal places",
      "id": "AEFC0461682A4D36908348442467545F",
      "asnIdentifier": "S2638669",
      "position": 89000,
      "depth": 2,
      "ancestorIds": [
        "AEC87E28259F46CAAF3A8644EE31539D",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "AEC87E28259F46CAAF3A8644EE31539D"
    },
    "AEC87E28259F46CAAF3A8644EE31539D": {
      "position": 88000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.9",
      "description": "Describe how to print using a specific number of digits before and/or after the decimal place with the format method from DecimalFormat (java.text.DecimalFormat)",
      "id": "AEC87E28259F46CAAF3A8644EE31539D",
      "asnIdentifier": "S2638668",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "D5BDE5304EE84697BFEBED4C3B0D2332": {
      "description": "Write a program that instantiates a DecimalFormat object",
      "id": "D5BDE5304EE84697BFEBED4C3B0D2332",
      "asnIdentifier": "S2638667",
      "position": 87000,
      "depth": 2,
      "statementNotation": "4.8.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "9508EF0275FA491588C39812146D6CA5",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "9508EF0275FA491588C39812146D6CA5"
    },
    "9508EF0275FA491588C39812146D6CA5": {
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.8",
      "description": "Describe how to instantiate a DecimalFormat object and how to use # and 0 to print the specified digits (java.text.DecimalFormat)",
      "id": "9508EF0275FA491588C39812146D6CA5",
      "asnIdentifier": "S2638666",
      "position": 86000,
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "BB44058B8518468693E1953333394761": {
      "description": "Write a program that displays the output in currency and percent formats",
      "id": "BB44058B8518468693E1953333394761",
      "asnIdentifier": "S2638665",
      "position": 85000,
      "depth": 2,
      "statementNotation": "4.7.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "7C2F1FE486DC4FD6AEF90EA3B81CD609",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "7C2F1FE486DC4FD6AEF90EA3B81CD609"
    },
    "7C2F1FE486DC4FD6AEF90EA3B81CD609": {
      "listId": "4.7",
      "description": "Describe how to set up a variable to print currency or percents using NumberFormat and how to use the format method (java.text.NumberFormat)",
      "id": "7C2F1FE486DC4FD6AEF90EA3B81CD609",
      "asnIdentifier": "S2638664",
      "position": 84000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "A1851E7685E249FF8A489C2E56188650": {
      "description": "Revise the program above so that it closes the scanner object",
      "id": "A1851E7685E249FF8A489C2E56188650",
      "asnIdentifier": "S2638663",
      "position": 83000,
      "depth": 2,
      "statementNotation": "4.6.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "DFD8C23FCE0844F28C8437F21763D45B",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "DFD8C23FCE0844F28C8437F21763D45B"
    },
    "DFD8C23FCE0844F28C8437F21763D45B": {
      "id": "DFD8C23FCE0844F28C8437F21763D45B",
      "asnIdentifier": "S2638662",
      "position": 82000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.6",
      "description": "Describe how to close a Scanner object (java.util.Scanner)",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "1682DD946F3943248FFAE6AE39ACD4D7": {
      "id": "1682DD946F3943248FFAE6AE39ACD4D7",
      "asnIdentifier": "S2638661",
      "position": 81000,
      "depth": 2,
      "statementNotation": "4.5.1",
      "statementLabel": "Application",
      "description": "Expand the program above so that it reads Strings, ints and doubles from the keyboard",
      "ancestorIds": [
        "27A61430ACD94E58A6670A6CA6D9ACD9",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "27A61430ACD94E58A6670A6CA6D9ACD9"
    },
    "27A61430ACD94E58A6670A6CA6D9ACD9": {
      "id": "27A61430ACD94E58A6670A6CA6D9ACD9",
      "asnIdentifier": "S2638660",
      "position": 80000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.5",
      "description": "Describe how to read the following data types from the keyboard using the Scanner object: nextLine(), nextInt(), nextDouble() (java.util.Scanner)",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "D7E47C33C0AF47EC8B37EC50430125E3": {
      "asnIdentifier": "S2638659",
      "position": 79000,
      "depth": 2,
      "statementNotation": "4.4.1",
      "statementLabel": "Application",
      "description": "Write a program that instantiates a Scanner object",
      "id": "D7E47C33C0AF47EC8B37EC50430125E3",
      "ancestorIds": [
        "AB4780A1ED28403595549065854BC9DC",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "AB4780A1ED28403595549065854BC9DC"
    },
    "AB4780A1ED28403595549065854BC9DC": {
      "description": "Describe how to instantiate a Scanner object. (java.util.Scanner)",
      "id": "AB4780A1ED28403595549065854BC9DC",
      "asnIdentifier": "S2638658",
      "position": 78000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.4",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "36FA99EF3F4A43BAA6711574E24B6600": {
      "asnIdentifier": "S2638657",
      "position": 77000,
      "depth": 2,
      "statementNotation": "4.3.1",
      "statementLabel": "Application",
      "description": "Write programs with meaningful prompts",
      "id": "36FA99EF3F4A43BAA6711574E24B6600",
      "ancestorIds": [
        "1B83D5DB851E4CC3B4989A8438B99908",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "1B83D5DB851E4CC3B4989A8438B99908"
    },
    "1B83D5DB851E4CC3B4989A8438B99908": {
      "statementLabel": "Knowledge Statement",
      "listId": "4.3",
      "description": "Give examples of meaningful prompts",
      "id": "1B83D5DB851E4CC3B4989A8438B99908",
      "asnIdentifier": "S2638656",
      "position": 76000,
      "depth": 1,
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "A808AF876F7C4076A76FAF55C9FC4A81": {
      "id": "A808AF876F7C4076A76FAF55C9FC4A81",
      "asnIdentifier": "S2638655",
      "position": 75000,
      "depth": 2,
      "statementNotation": "4.2.1",
      "statementLabel": "Application",
      "description": "Write programs that import the selected classes",
      "ancestorIds": [
        "2E2A731983B5404A971C95263D2E9441",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "2E2A731983B5404A971C95263D2E9441"
    },
    "2E2A731983B5404A971C95263D2E9441": {
      "asnIdentifier": "S2638654",
      "position": 74000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.2",
      "description": "Explain the purpose of the compiler directive import",
      "id": "2E2A731983B5404A971C95263D2E9441",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "4D76B9FE34024AC38D123B2B2844FB43": {
      "asnIdentifier": "S2638653",
      "position": 73000,
      "depth": 2,
      "statementNotation": "4.1.1",
      "statementLabel": "Application",
      "description": "Prepare a list of terms with definitions",
      "id": "4D76B9FE34024AC38D123B2B2844FB43",
      "ancestorIds": [
        "E0DE1DC6865D4448B9B32C5F2E19D287",
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0DE1DC6865D4448B9B32C5F2E19D287"
    },
    "E0DE1DC6865D4448B9B32C5F2E19D287": {
      "position": 72000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "4.1",
      "description": "Define terminology",
      "id": "E0DE1DC6865D4448B9B32C5F2E19D287",
      "asnIdentifier": "S2638652",
      "ancestorIds": [
        "E0004073D7514DC7A1636A06B7ECEBA9"
      ],
      "parentId": "E0004073D7514DC7A1636A06B7ECEBA9"
    },
    "E0004073D7514DC7A1636A06B7ECEBA9": {
      "listId": "4:",
      "description": "Using Selected Standard Classes",
      "id": "E0004073D7514DC7A1636A06B7ECEBA9",
      "asnIdentifier": "S2638651",
      "position": 71000,
      "depth": 0,
      "statementLabel": "Unit",
      "ancestorIds": [],
      "parentId": null
    },
    "1F160C2CF635463482784BE703892354": {
      "description": "Use constants when appropriate in programs",
      "id": "1F160C2CF635463482784BE703892354",
      "asnIdentifier": "S2638650",
      "position": 70000,
      "depth": 2,
      "statementNotation": "3.11.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "0EAAD7DF83D24A2F9C16BFD430AD4676",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "0EAAD7DF83D24A2F9C16BFD430AD4676"
    },
    "0EAAD7DF83D24A2F9C16BFD430AD4676": {
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.11",
      "description": "Explain the circumstances and give examples of appropriate occasions to use constants",
      "id": "0EAAD7DF83D24A2F9C16BFD430AD4676",
      "asnIdentifier": "S2638649",
      "position": 69000,
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "E1E7C382A7F04D25ACF89FA8D63E2CE7": {
      "statementNotation": "3.10.2",
      "statementLabel": "Application",
      "description": "Write programs that use descriptive variable names",
      "id": "E1E7C382A7F04D25ACF89FA8D63E2CE7",
      "asnIdentifier": "S2638648",
      "position": 68000,
      "depth": 2,
      "ancestorIds": [
        "05068EFFC1EE4D39B734216F30FA1E75",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "05068EFFC1EE4D39B734216F30FA1E75"
    },
    "32F189B7EBA7452FB36C6B0D3B547D31": {
      "id": "32F189B7EBA7452FB36C6B0D3B547D31",
      "asnIdentifier": "S2638647",
      "position": 67000,
      "depth": 2,
      "statementNotation": "3.10.1",
      "statementLabel": "Application",
      "description": "Write programs that use descriptive variable names",
      "ancestorIds": [
        "05068EFFC1EE4D39B734216F30FA1E75",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "05068EFFC1EE4D39B734216F30FA1E75"
    },
    "05068EFFC1EE4D39B734216F30FA1E75": {
      "asnIdentifier": "S2638646",
      "position": 66000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.10",
      "description": "Explain rules for choosing variable names",
      "id": "05068EFFC1EE4D39B734216F30FA1E75",
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "C31E389E16C84DAD950F249E8612C89B": {
      "asnIdentifier": "S2638645",
      "position": 65000,
      "depth": 2,
      "statementNotation": "3.9.2",
      "statementLabel": "Application",
      "description": "Write math expressions correctly that use promotion and casting",
      "id": "C31E389E16C84DAD950F249E8612C89B",
      "ancestorIds": [
        "F7AC7B3E72674CE19ED535BBC59CD5EE",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "F7AC7B3E72674CE19ED535BBC59CD5EE"
    },
    "05C8A0892CC94931BD0368D24C1C3B94": {
      "id": "05C8A0892CC94931BD0368D24C1C3B94",
      "asnIdentifier": "S2638644",
      "position": 64000,
      "depth": 2,
      "statementNotation": "3.9.1",
      "statementLabel": "Application",
      "description": "Determine the correct answer to math expressions where casting and promotion are involved",
      "ancestorIds": [
        "F7AC7B3E72674CE19ED535BBC59CD5EE",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "F7AC7B3E72674CE19ED535BBC59CD5EE"
    },
    "F7AC7B3E72674CE19ED535BBC59CD5EE": {
      "position": 63000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.9",
      "description": "Explain the difference in promotion and casting",
      "id": "F7AC7B3E72674CE19ED535BBC59CD5EE",
      "asnIdentifier": "S2638643",
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "C5E9E757400D4A7A9D3C1813087BDB80": {
      "statementLabel": "Application",
      "description": "Write programs that use mathematical operations correctly (integer arithmetic vs floating point arithmetic)",
      "id": "C5E9E757400D4A7A9D3C1813087BDB80",
      "asnIdentifier": "S2638642",
      "position": 62000,
      "depth": 2,
      "statementNotation": "3.8.2",
      "ancestorIds": [
        "F94A7649B47647CFBEE833166569BC41",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "F94A7649B47647CFBEE833166569BC41"
    },
    "FF160762E1B24005A94DEB4BB54CFB8A": {
      "id": "FF160762E1B24005A94DEB4BB54CFB8A",
      "asnIdentifier": "S2638641",
      "position": 61000,
      "depth": 2,
      "statementNotation": "3.8.1",
      "statementLabel": "Application",
      "description": "Write formulas using operators and order of operations",
      "ancestorIds": [
        "F94A7649B47647CFBEE833166569BC41",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "F94A7649B47647CFBEE833166569BC41"
    },
    "F94A7649B47647CFBEE833166569BC41": {
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.8",
      "description": "List arithmetic operations and order of operations (*, /, %, +, -)",
      "id": "F94A7649B47647CFBEE833166569BC41",
      "asnIdentifier": "S2638640",
      "position": 60000,
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "D3C552C238A243D7AA0366A4CA4CC7C4": {
      "id": "D3C552C238A243D7AA0366A4CA4CC7C4",
      "asnIdentifier": "S2638639",
      "position": 59000,
      "depth": 2,
      "statementNotation": "3.7.1",
      "statementLabel": "Application",
      "description": "Use floating point variables in programs where appropriate",
      "ancestorIds": [
        "7020017A61734C7F97D73F0B73A5D2DE",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "7020017A61734C7F97D73F0B73A5D2DE"
    },
    "7020017A61734C7F97D73F0B73A5D2DE": {
      "position": 58000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.7",
      "description": "Explain the advantages and disadvantages of floating-point numbers (round-off errors, more memory, approximate answers, slower computation, size of numbers to be stored, etc.)",
      "id": "7020017A61734C7F97D73F0B73A5D2DE",
      "asnIdentifier": "S2638638",
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "1563CBB0BDF8484898A27A691C93D5DC": {
      "id": "1563CBB0BDF8484898A27A691C93D5DC",
      "asnIdentifier": "S2638637",
      "position": 57000,
      "depth": 2,
      "statementNotation": "3.6.1",
      "statementLabel": "Application",
      "description": "Use integer variables in programs where appropriate",
      "ancestorIds": [
        "355FBBC16B464D1AB1559FE9C5A6AB16",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "355FBBC16B464D1AB1559FE9C5A6AB16"
    },
    "355FBBC16B464D1AB1559FE9C5A6AB16": {
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.6",
      "description": "Explain the advantages of using integer variables whenever possible (faster computation, require less memory, obtain exact answers)",
      "id": "355FBBC16B464D1AB1559FE9C5A6AB16",
      "asnIdentifier": "S2638636",
      "position": 56000,
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "2AA29D4BB06C411C9CF740C14B5EBC89": {
      "depth": 2,
      "statementNotation": "3.5.1",
      "statementLabel": "Application",
      "description": "Write programs that use escape sequences to print strings",
      "id": "2AA29D4BB06C411C9CF740C14B5EBC89",
      "asnIdentifier": "S2638635",
      "position": 55000,
      "ancestorIds": [
        "89FA8B91E8654A0C82D90839374D2ED9",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "89FA8B91E8654A0C82D90839374D2ED9"
    },
    "89FA8B91E8654A0C82D90839374D2ED9": {
      "position": 54000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.5",
      "description": "Explain the purpose of escape sequences (\\n, \\t, \\\\)",
      "id": "89FA8B91E8654A0C82D90839374D2ED9",
      "asnIdentifier": "S2638634",
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "33DC198FE5DD496E971B9C4F20B2FC15": {
      "statementNotation": "3.4.1",
      "statementLabel": "Application",
      "description": "Write output lines using + as the concatenation operator",
      "id": "33DC198FE5DD496E971B9C4F20B2FC15",
      "asnIdentifier": "S2638633",
      "position": 53000,
      "depth": 2,
      "ancestorIds": [
        "924C2A1C1EC34659A2D204C7A425CC0E",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "924C2A1C1EC34659A2D204C7A425CC0E"
    },
    "924C2A1C1EC34659A2D204C7A425CC0E": {
      "statementLabel": "Knowledge Statement",
      "listId": "3.4",
      "description": "Explain the purpose of concatenation",
      "id": "924C2A1C1EC34659A2D204C7A425CC0E",
      "asnIdentifier": "S2638632",
      "position": 52000,
      "depth": 1,
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "D424D49858A343498C7323D99946174F": {
      "id": "D424D49858A343498C7323D99946174F",
      "asnIdentifier": "S2638631",
      "position": 51000,
      "depth": 2,
      "statementNotation": "3.3.2",
      "statementLabel": "Application",
      "description": "Determine whether an identification number (such as Social Security Number) should be treated as a string or number",
      "ancestorIds": [
        "9624C18F439C4D5C9F277EFFE5787BAB",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "9624C18F439C4D5C9F277EFFE5787BAB"
    },
    "9687ACDEC3EF4151AADD9B0613D835EF": {
      "asnIdentifier": "S2638630",
      "position": 50000,
      "depth": 2,
      "statementNotation": "3.3.1",
      "statementLabel": "Application",
      "description": "Write programs that declare and utilize String objects",
      "id": "9687ACDEC3EF4151AADD9B0613D835EF",
      "ancestorIds": [
        "9624C18F439C4D5C9F277EFFE5787BAB",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "9624C18F439C4D5C9F277EFFE5787BAB"
    },
    "9624C18F439C4D5C9F277EFFE5787BAB": {
      "id": "9624C18F439C4D5C9F277EFFE5787BAB",
      "asnIdentifier": "S2638629",
      "position": 49000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.3",
      "description": "Explain the use of a String object",
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "2E16F6B4002A46E79FAF6FE4C9BA8096": {
      "asnIdentifier": "S2638628",
      "position": 48000,
      "depth": 2,
      "statementNotation": "3.2.4",
      "statementLabel": "Application",
      "description": "Designate data type using correct syntax",
      "id": "2E16F6B4002A46E79FAF6FE4C9BA8096",
      "ancestorIds": [
        "1E74D34B6D924B6FA70CF5C58635FB61",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "1E74D34B6D924B6FA70CF5C58635FB61"
    },
    "85D8B8FF5FD7459E80848FBC70FDFA50": {
      "asnIdentifier": "S2638627",
      "position": 47000,
      "depth": 2,
      "statementNotation": "3.2.3",
      "statementLabel": "Application",
      "description": "Determine whether a number should be treated as an integer or a floating point (i.e. single, double)",
      "id": "85D8B8FF5FD7459E80848FBC70FDFA50",
      "ancestorIds": [
        "1E74D34B6D924B6FA70CF5C58635FB61",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "1E74D34B6D924B6FA70CF5C58635FB61"
    },
    "9F431D83966245048C701BC39D6D5603": {
      "description": "Determine whether a particular \"number\" would be considered numeric",
      "id": "9F431D83966245048C701BC39D6D5603",
      "asnIdentifier": "S2638626",
      "position": 46000,
      "depth": 2,
      "statementNotation": "3.2.2",
      "statementLabel": "Application",
      "ancestorIds": [
        "1E74D34B6D924B6FA70CF5C58635FB61",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "1E74D34B6D924B6FA70CF5C58635FB61"
    },
    "C6D03956ABEE456D880E2E6A2BB32117": {
      "description": "Compare the four data types",
      "id": "C6D03956ABEE456D880E2E6A2BB32117",
      "asnIdentifier": "S2638625",
      "position": 45000,
      "depth": 2,
      "statementNotation": "3.2.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "1E74D34B6D924B6FA70CF5C58635FB61",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "1E74D34B6D924B6FA70CF5C58635FB61"
    },
    "1E74D34B6D924B6FA70CF5C58635FB61": {
      "id": "1E74D34B6D924B6FA70CF5C58635FB61",
      "asnIdentifier": "S2638624",
      "position": 44000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.2",
      "description": "List the following four primitive types: int, boolean, double, char.",
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "D753BAC9280E4D5C9F3775C3F858E15A": {
      "id": "D753BAC9280E4D5C9F3775C3F858E15A",
      "asnIdentifier": "S2638623",
      "position": 43000,
      "depth": 2,
      "statementNotation": "3.1.1",
      "statementLabel": "Application",
      "description": "Prepare a list of terms with definitions",
      "ancestorIds": [
        "965F95E28ECB4BA8846C0BA87F9978F4",
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "965F95E28ECB4BA8846C0BA87F9978F4"
    },
    "965F95E28ECB4BA8846C0BA87F9978F4": {
      "id": "965F95E28ECB4BA8846C0BA87F9978F4",
      "asnIdentifier": "S2638622",
      "position": 42000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "3.1",
      "description": "Define terminology",
      "ancestorIds": [
        "87B39730DFB1478EB000191746287468"
      ],
      "parentId": "87B39730DFB1478EB000191746287468"
    },
    "87B39730DFB1478EB000191746287468": {
      "depth": 0,
      "statementLabel": "Unit",
      "listId": "3:",
      "description": "Data Types and Mathematical Operations",
      "id": "87B39730DFB1478EB000191746287468",
      "asnIdentifier": "S2638621",
      "position": 41000,
      "ancestorIds": [],
      "parentId": null
    },
    "1B5898B3C0FB41149D81F3549870F473": {
      "description": "Document difficult logic to make it easy to follow",
      "id": "1B5898B3C0FB41149D81F3549870F473",
      "asnIdentifier": "S2638620",
      "position": 40000,
      "depth": 2,
      "statementNotation": "2.10.3",
      "statementLabel": "Application",
      "ancestorIds": [
        "985E23C244AA4BAEBEB52DB73CC3215B",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "985E23C244AA4BAEBEB52DB73CC3215B"
    },
    "1A04C1015D484CBE8A7474DCE835FC02": {
      "id": "1A04C1015D484CBE8A7474DCE835FC02",
      "asnIdentifier": "S2638619",
      "position": 39000,
      "depth": 2,
      "statementNotation": "2.10.2",
      "statementLabel": "Application",
      "description": "Use descriptive identifiers",
      "ancestorIds": [
        "985E23C244AA4BAEBEB52DB73CC3215B",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "985E23C244AA4BAEBEB52DB73CC3215B"
    },
    "09CFA9DD741D4E69A3058507E684D41E": {
      "asnIdentifier": "S2638618",
      "position": 38000,
      "depth": 2,
      "statementNotation": "2.10.1",
      "statementLabel": "Application",
      "description": "Explain the characteristics of readable programs",
      "id": "09CFA9DD741D4E69A3058507E684D41E",
      "ancestorIds": [
        "985E23C244AA4BAEBEB52DB73CC3215B",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "985E23C244AA4BAEBEB52DB73CC3215B"
    },
    "985E23C244AA4BAEBEB52DB73CC3215B": {
      "statementLabel": "Knowledge Statement",
      "listId": "2.10",
      "description": "Explain the characteristics of readable programs",
      "id": "985E23C244AA4BAEBEB52DB73CC3215B",
      "asnIdentifier": "S2638617",
      "position": 37000,
      "depth": 1,
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "9C2C243BE7A742FABAC3904734B860DB": {
      "id": "9C2C243BE7A742FABAC3904734B860DB",
      "asnIdentifier": "S2638616",
      "position": 36000,
      "depth": 2,
      "statementNotation": "2.9.1",
      "statementLabel": "Application",
      "description": "When given an example, identify the error type",
      "ancestorIds": [
        "35261228CF87443DAC8BA05EB10F8114",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "35261228CF87443DAC8BA05EB10F8114"
    },
    "35261228CF87443DAC8BA05EB10F8114": {
      "description": "Identify different types of errors (syntax, semantic, run-time, compile time)",
      "id": "35261228CF87443DAC8BA05EB10F8114",
      "asnIdentifier": "S2638615",
      "position": 35000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "2.9",
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "4A2E43142999404A925636D9217DAF18": {
      "id": "4A2E43142999404A925636D9217DAF18",
      "asnIdentifier": "S2638614",
      "position": 34000,
      "depth": 2,
      "statementNotation": "2.8.1",
      "statementLabel": "Application",
      "description": "Write a psuedocode (algorithm) for a programming problem",
      "ancestorIds": [
        "E8EDA517C3754EEB88C0B704BAB8651C",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "E8EDA517C3754EEB88C0B704BAB8651C"
    },
    "E8EDA517C3754EEB88C0B704BAB8651C": {
      "asnIdentifier": "S2638613",
      "position": 33000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "2.8",
      "description": "Explain the importance of algorithm and/or pseudocode in program development",
      "id": "E8EDA517C3754EEB88C0B704BAB8651C",
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "1936ED41D1E54A5A8EEE57594E73017F": {
      "id": "1936ED41D1E54A5A8EEE57594E73017F",
      "asnIdentifier": "S2638612",
      "position": 32000,
      "depth": 2,
      "statementNotation": "2.7.2",
      "statementLabel": "Application",
      "description": "Update an existing program",
      "ancestorIds": [
        "2B99383DFD0A4A96852C03DF52D37A99",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "2B99383DFD0A4A96852C03DF52D37A99"
    },
    "AAE2FBAC2AF84161BD28158B7693396D": {
      "depth": 2,
      "statementNotation": "2.7.1",
      "statementLabel": "Application",
      "description": "Be able to use // and /* */ to write programs that are well-documented",
      "id": "AAE2FBAC2AF84161BD28158B7693396D",
      "asnIdentifier": "S2638611",
      "position": 31000,
      "ancestorIds": [
        "2B99383DFD0A4A96852C03DF52D37A99",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "2B99383DFD0A4A96852C03DF52D37A99"
    },
    "2B99383DFD0A4A96852C03DF52D37A99": {
      "statementLabel": "Knowledge Statement",
      "listId": "2.7",
      "description": "Explain the importance of program documentation and maintenance",
      "id": "2B99383DFD0A4A96852C03DF52D37A99",
      "asnIdentifier": "S2638610",
      "position": 30000,
      "depth": 1,
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "6B543A84DC77484595CE1DE832F43C59": {
      "id": "6B543A84DC77484595CE1DE832F43C59",
      "asnIdentifier": "S2638609",
      "position": 29000,
      "depth": 2,
      "statementNotation": "2.6.2",
      "statementLabel": "Application",
      "description": "Write programs whose output is easy to read and understand",
      "ancestorIds": [
        "CB18A8F14E884759BB35394FFA22FFBB",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "CB18A8F14E884759BB35394FFA22FFBB"
    },
    "6AB21D3AADA746E29D7F13873611AD0E": {
      "position": 28000,
      "depth": 2,
      "statementNotation": "2.6.1",
      "statementLabel": "Application",
      "description": "Write programs that have clear instructions",
      "id": "6AB21D3AADA746E29D7F13873611AD0E",
      "asnIdentifier": "S2638608",
      "ancestorIds": [
        "CB18A8F14E884759BB35394FFA22FFBB",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "CB18A8F14E884759BB35394FFA22FFBB"
    },
    "CB18A8F14E884759BB35394FFA22FFBB": {
      "position": 27000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "2.6",
      "description": "Explain the characteristics of user-friendly programs",
      "id": "CB18A8F14E884759BB35394FFA22FFBB",
      "asnIdentifier": "S2638607",
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "CA228FACF51C4BBD8EDA3D4A3182836E": {
      "position": 26000,
      "depth": 2,
      "statementNotation": "2.5.1",
      "statementLabel": "Application",
      "description": "Use appropriate syntax to include comments in programs",
      "id": "CA228FACF51C4BBD8EDA3D4A3182836E",
      "asnIdentifier": "S2638606",
      "ancestorIds": [
        "8C787BF6AB954C9B97031733B11A6340",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "8C787BF6AB954C9B97031733B11A6340"
    },
    "8C787BF6AB954C9B97031733B11A6340": {
      "description": "Identify syntax of comments",
      "id": "8C787BF6AB954C9B97031733B11A6340",
      "asnIdentifier": "S2638605",
      "position": 25000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "2.5",
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "0792F7474D624B64B4B07861090FF2CB": {
      "position": 24000,
      "depth": 2,
      "statementNotation": "2.4.1",
      "statementLabel": "Application",
      "description": "Write programs that use System.out.println with String literals",
      "id": "0792F7474D624B64B4B07861090FF2CB",
      "asnIdentifier": "S2638604",
      "ancestorIds": [
        "FB4E2E1AF7904BAB93C12F798BBD5B34",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "FB4E2E1AF7904BAB93C12F798BBD5B34"
    },
    "FB4E2E1AF7904BAB93C12F798BBD5B34": {
      "id": "FB4E2E1AF7904BAB93C12F798BBD5B34",
      "asnIdentifier": "S2638603",
      "position": 23000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "2.4",
      "description": "Identify the syntax to output String literals to screen",
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "099F33DEC57C4EEAAEF676627426AE9E": {
      "description": "Key, save, compile, and execute \"Hello World\" program",
      "id": "099F33DEC57C4EEAAEF676627426AE9E",
      "asnIdentifier": "S2638602",
      "position": 22000,
      "depth": 2,
      "statementNotation": "2.3.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "2E2D6302865C4B3D8FB012EADC64120B",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "2E2D6302865C4B3D8FB012EADC64120B"
    },
    "2E2D6302865C4B3D8FB012EADC64120B": {
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "2.3",
      "description": "Identify the syntax of a simple program",
      "id": "2E2D6302865C4B3D8FB012EADC64120B",
      "asnIdentifier": "S2638601",
      "position": 21000,
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "D985DDEDDDD643ADAF89E9B0161B0383": {
      "statementLabel": "Application",
      "description": "When given an example, be able to identify the correct step",
      "id": "D985DDEDDDD643ADAF89E9B0161B0383",
      "asnIdentifier": "S2638600",
      "position": 20000,
      "depth": 2,
      "statementNotation": "2.2.1",
      "ancestorIds": [
        "F52D4AE718444DC9B6DF22CC7EC36791",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "F52D4AE718444DC9B6DF22CC7EC36791"
    },
    "F52D4AE718444DC9B6DF22CC7EC36791": {
      "statementLabel": "Knowledge Statement",
      "listId": "2.2",
      "description": "List the steps of the programming process",
      "id": "F52D4AE718444DC9B6DF22CC7EC36791",
      "asnIdentifier": "S2638599",
      "position": 19000,
      "depth": 1,
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "53790C495E9C46439C4096013C84D2B6": {
      "statementNotation": "2.1.1",
      "statementLabel": "Application",
      "description": "Prepare a list of terms with definitions",
      "id": "53790C495E9C46439C4096013C84D2B6",
      "asnIdentifier": "S2638598",
      "position": 18000,
      "depth": 2,
      "ancestorIds": [
        "456E1F28945C4976B5E231FB31200F1E",
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "456E1F28945C4976B5E231FB31200F1E"
    },
    "456E1F28945C4976B5E231FB31200F1E": {
      "listId": "2.1",
      "description": "Define terminology",
      "id": "456E1F28945C4976B5E231FB31200F1E",
      "asnIdentifier": "S2638596",
      "position": 17000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "ancestorIds": [
        "27083BFCD5274415BA4631FD721F6236"
      ],
      "parentId": "27083BFCD5274415BA4631FD721F6236"
    },
    "27083BFCD5274415BA4631FD721F6236": {
      "depth": 0,
      "statementLabel": "Unit",
      "listId": "2:",
      "description": "Programming Techniques and Characteristics of Good Programs",
      "id": "27083BFCD5274415BA4631FD721F6236",
      "asnIdentifier": "S2638597",
      "position": 16000,
      "ancestorIds": [],
      "parentId": null
    },
    "DF58F1A37B3C4B02B7C7FE266871BF3B": {
      "description": "Draw a diagram of how a Java source code program is translated to bytecode and then to executable code",
      "id": "DF58F1A37B3C4B02B7C7FE266871BF3B",
      "asnIdentifier": "S2638595",
      "position": 15000,
      "depth": 2,
      "statementNotation": "1.7.1",
      "statementLabel": "Application",
      "ancestorIds": [
        "4C995BAF9F65434CAE54D0165F276953",
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "4C995BAF9F65434CAE54D0165F276953"
    },
    "4C995BAF9F65434CAE54D0165F276953": {
      "statementLabel": "Knowledge Statement",
      "listId": "1.7",
      "description": "Explain the difference between executable code and bytecode",
      "id": "4C995BAF9F65434CAE54D0165F276953",
      "asnIdentifier": "S2638594",
      "position": 14000,
      "depth": 1,
      "ancestorIds": [
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "D0277BB437834B19BF1C7A2418EB97B2"
    },
    "7D7DDF1239094CF899CA51AAC228ABAD": {
      "asnIdentifier": "S2638593",
      "position": 13000,
      "depth": 2,
      "statementNotation": "1.6.1",
      "statementLabel": "Application",
      "description": "Give an example of how a compiler functions vs. how an interpreter functions",
      "id": "7D7DDF1239094CF899CA51AAC228ABAD",
      "ancestorIds": [
        "6E81ADB45D0C4F1B90A351053026E64D",
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "6E81ADB45D0C4F1B90A351053026E64D"
    },
    "6E81ADB45D0C4F1B90A351053026E64D": {
      "id": "6E81ADB45D0C4F1B90A351053026E64D",
      "asnIdentifier": "S2638592",
      "position": 12000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "1.6",
      "description": "Explain the difference between interpreters and compilers",
      "ancestorIds": [
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "D0277BB437834B19BF1C7A2418EB97B2"
    },
    "6033C2AB2EBC458A8C0378305DC83670": {
      "depth": 2,
      "statementNotation": "1.5.1",
      "statementLabel": "Application",
      "description": "Classify commonly used programming languages as high-level or low-level",
      "id": "6033C2AB2EBC458A8C0378305DC83670",
      "asnIdentifier": "S2638591",
      "position": 11000,
      "ancestorIds": [
        "800E11626B76464F82E0CEEA7DD9B984",
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "800E11626B76464F82E0CEEA7DD9B984"
    },
    "800E11626B76464F82E0CEEA7DD9B984": {
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "1.5",
      "description": "Explain the difference between high-level and low-level languages",
      "id": "800E11626B76464F82E0CEEA7DD9B984",
      "asnIdentifier": "S2638590",
      "position": 10000,
      "ancestorIds": [
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "D0277BB437834B19BF1C7A2418EB97B2"
    },
    "497E7814550B4DFD857E00D0719F8B6F": {
      "statementNotation": "1.4.1",
      "statementLabel": "Application",
      "description": "Tell where each operating system is used most frequently",
      "id": "497E7814550B4DFD857E00D0719F8B6F",
      "asnIdentifier": "S2638589",
      "position": 9000,
      "depth": 2,
      "ancestorIds": [
        "B4C518FE8F644A259159BB330A335F32",
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "B4C518FE8F644A259159BB330A335F32"
    },
    "B4C518FE8F644A259159BB330A335F32": {
      "description": "Discuss various operating systems and their differences (i.e., Windows, Mac Linux)",
      "id": "B4C518FE8F644A259159BB330A335F32",
      "asnIdentifier": "S2638588",
      "position": 8000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "1.4",
      "ancestorIds": [
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "D0277BB437834B19BF1C7A2418EB97B2"
    },
    "33F2F8D5F5014600A7973794B1DB321D": {
      "position": 7000,
      "depth": 2,
      "statementNotation": "1.3.1",
      "statementLabel": "Application",
      "description": "Identify technology as either hardware or software",
      "id": "33F2F8D5F5014600A7973794B1DB321D",
      "asnIdentifier": "S2638587",
      "ancestorIds": [
        "4E232B9AC70D41B78809789507E05F27",
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "4E232B9AC70D41B78809789507E05F27"
    },
    "4E232B9AC70D41B78809789507E05F27": {
      "id": "4E232B9AC70D41B78809789507E05F27",
      "asnIdentifier": "S2638586",
      "position": 6000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "1.3",
      "description": "Discuss terms related to hardware and software",
      "ancestorIds": [
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "D0277BB437834B19BF1C7A2418EB97B2"
    },
    "73F3956037D04E039120E8ECDB53AF22": {
      "depth": 2,
      "statementNotation": "1.2.1",
      "statementLabel": "Application",
      "description": "Identify various software as either system or application",
      "id": "73F3956037D04E039120E8ECDB53AF22",
      "asnIdentifier": "S2638585",
      "position": 5000,
      "ancestorIds": [
        "15334966866A46F7900EC4FCB1A4518A",
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "15334966866A46F7900EC4FCB1A4518A"
    },
    "15334966866A46F7900EC4FCB1A4518A": {
      "description": "Explain the difference between system and application software",
      "id": "15334966866A46F7900EC4FCB1A4518A",
      "asnIdentifier": "S2638584",
      "position": 4000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "1.2",
      "ancestorIds": [
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "D0277BB437834B19BF1C7A2418EB97B2"
    },
    "01F0E0E49E8844078E5DC206998388A3": {
      "statementLabel": "Application",
      "description": "Prepare a list of terms with definitions",
      "id": "01F0E0E49E8844078E5DC206998388A3",
      "asnIdentifier": "S2638583",
      "position": 3000,
      "depth": 2,
      "statementNotation": "1.1.1",
      "ancestorIds": [
        "1082492FD13B4F56BC242DB5F8B246FC",
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "1082492FD13B4F56BC242DB5F8B246FC"
    },
    "1082492FD13B4F56BC242DB5F8B246FC": {
      "id": "1082492FD13B4F56BC242DB5F8B246FC",
      "asnIdentifier": "S2638582",
      "position": 2000,
      "depth": 1,
      "statementLabel": "Knowledge Statement",
      "listId": "1.1",
      "description": "Define terminology",
      "ancestorIds": [
        "D0277BB437834B19BF1C7A2418EB97B2"
      ],
      "parentId": "D0277BB437834B19BF1C7A2418EB97B2"
    },
    "D0277BB437834B19BF1C7A2418EB97B2": {
      "depth": 0,
      "statementLabel": "Unit",
      "listId": "1:",
      "description": "Introduction to Programming and Ethics in Programming",
      "id": "D0277BB437834B19BF1C7A2418EB97B2",
      "asnIdentifier": "S2638581",
      "position": 1000,
      "ancestorIds": [],
      "parentId": null
    }
  }
}