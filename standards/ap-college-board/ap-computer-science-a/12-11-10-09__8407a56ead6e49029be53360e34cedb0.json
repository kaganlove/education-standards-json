{
  "id": "8407A56EAD6E49029BE53360E34CEDB0",
  "title": "AP Computer Science A",
  "subject": "AP Computer Science A",
  "normalizedSubject": null,
  "educationLevels": [
    "12",
    "11",
    "10",
    "09"
  ],
  "cspStatus": {},
  "license": {
    "title": "CC BY 4.0 US",
    "URL": "http://creativecommons.org/licenses/by/4.0/us/",
    "rightsHolder": "Common Curriculum, Inc."
  },
  "document": {
    "title": "AP Computer Science A Course and Exam Description",
    "sourceURL": "https://apcentral.collegeboard.org/pdf/ap-computer-science-a-course-and-exam-description.pdf?course=ap-computer-science-a"
  },
  "jurisdiction": {
    "id": "0A5FD99233A74D8FA3A74F52E5F6CDEC",
    "title": "AP/College Board"
  },
  "standards": {
    "A31E9DF41F164922BFD5366FE38A0EB2": {
      "id": "A31E9DF41F164922BFD5366FE38A0EB2",
      "asnIdentifier": null,
      "position": 187008,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "IOC.1.B.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computer use and the creation of programs\nhave an impact on personal security. These\nimpacts can be beneficial and/or harmful.",
      "comments": [],
      "ancestorIds": [
        "9BCE478A60D54B70AEFF90E7165CD9D8",
        "83F1175C151E4AAF984B2E14FA5F5690",
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9BCE478A60D54B70AEFF90E7165CD9D8"
    },
    "4E8E50D85B2C427788CFF672C0BBC482": {
      "id": "4E8E50D85B2C427788CFF672C0BBC482",
      "asnIdentifier": null,
      "position": 187007,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "IOC.1.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When using the computer, personal privacy is at\nrisk. Programmers should attempt to safeguard\npersonal privacy.",
      "comments": [],
      "ancestorIds": [
        "9BCE478A60D54B70AEFF90E7165CD9D8",
        "83F1175C151E4AAF984B2E14FA5F5690",
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9BCE478A60D54B70AEFF90E7165CD9D8"
    },
    "9BCE478A60D54B70AEFF90E7165CD9D8": {
      "id": "9BCE478A60D54B70AEFF90E7165CD9D8",
      "asnIdentifier": null,
      "position": 187006,
      "depth": 3,
      "listId": "b",
      "statementNotation": "IOC.1.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain the risks to privacy\nfrom collecting and storing\npersonal data on computer\nsystems.",
      "comments": [],
      "ancestorIds": [
        "83F1175C151E4AAF984B2E14FA5F5690",
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "83F1175C151E4AAF984B2E14FA5F5690"
    },
    "9F7D373B01554F81B659FCBCFF724517": {
      "id": "9F7D373B01554F81B659FCBCFF724517",
      "asnIdentifier": null,
      "position": 187005,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "IOC.1.A.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The creation of programs has impacts on\nsociety, economies, and culture. These impacts\ncan be beneficial and/or harmful.",
      "comments": [],
      "ancestorIds": [
        "657169B8B6474C00A518ADC7C68876CF",
        "83F1175C151E4AAF984B2E14FA5F5690",
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "657169B8B6474C00A518ADC7C68876CF"
    },
    "B6A98BA86E74454B85090C57AD17593E": {
      "id": "B6A98BA86E74454B85090C57AD17593E",
      "asnIdentifier": null,
      "position": 187004,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "IOC.1.A.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Legal issues and intellectual property concerns\narise when creating programs.",
      "comments": [],
      "ancestorIds": [
        "657169B8B6474C00A518ADC7C68876CF",
        "83F1175C151E4AAF984B2E14FA5F5690",
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "657169B8B6474C00A518ADC7C68876CF"
    },
    "E1B075EFEF5B4B12817AD5753AC3F174": {
      "id": "E1B075EFEF5B4B12817AD5753AC3F174",
      "asnIdentifier": null,
      "position": 187003,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "IOC.1.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "System reliability is limited. Programmers\nshould make an effort to maximize\nsystem reliability.",
      "comments": [],
      "ancestorIds": [
        "657169B8B6474C00A518ADC7C68876CF",
        "83F1175C151E4AAF984B2E14FA5F5690",
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "657169B8B6474C00A518ADC7C68876CF"
    },
    "657169B8B6474C00A518ADC7C68876CF": {
      "id": "657169B8B6474C00A518ADC7C68876CF",
      "asnIdentifier": null,
      "position": 187002,
      "depth": 3,
      "listId": "a",
      "statementNotation": "IOC.1.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain the ethical and social\nimplications of computing\nsystems.",
      "comments": [],
      "ancestorIds": [
        "83F1175C151E4AAF984B2E14FA5F5690",
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "83F1175C151E4AAF984B2E14FA5F5690"
    },
    "83F1175C151E4AAF984B2E14FA5F5690": {
      "id": "83F1175C151E4AAF984B2E14FA5F5690",
      "asnIdentifier": null,
      "position": 187001,
      "depth": 2,
      "listId": "A",
      "statementNotation": "IOC.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "While programs are typically designed to achieve a specific purpose, they may have\nunintended consequences.",
      "comments": [],
      "ancestorIds": [
        "05B86EB2F99E41D1BB851B29E0617819",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "05B86EB2F99E41D1BB851B29E0617819"
    },
    "05B86EB2F99E41D1BB851B29E0617819": {
      "id": "05B86EB2F99E41D1BB851B29E0617819",
      "asnIdentifier": null,
      "position": 187000,
      "depth": 1,
      "listId": "4",
      "statementNotation": "IOC",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Impact of Computing",
      "comments": [],
      "ancestorIds": [
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
    },
    "4A59773892494FE8992D0382297C6113": {
      "id": "4A59773892494FE8992D0382297C6113",
      "asnIdentifier": null,
      "position": 186030,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.Q.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Merge sort is a recursive sorting algorithm\nthat can be used to sort elements in an array\nor ArrayList.",
      "comments": [],
      "ancestorIds": [
        "535871FAAE8A4AAA827C2D96E94294BB",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "535871FAAE8A4AAA827C2D96E94294BB"
    },
    "535871FAAE8A4AAA827C2D96E94294BB": {
      "id": "535871FAAE8A4AAA827C2D96E94294BB",
      "asnIdentifier": null,
      "position": 186029,
      "depth": 3,
      "listId": "q",
      "statementNotation": "CON.2.Q",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply recursive algorithms\nto sort elements of array or\nArrayList objects.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "DDAF58C0870440319B30B20F5682BD70": {
      "id": "DDAF58C0870440319B30B20F5682BD70",
      "asnIdentifier": null,
      "position": 186028,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.2.P.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The binary search algorithm can be written\neither iteratively or recursively.",
      "comments": [],
      "ancestorIds": [
        "4736DF180F8D4E9B9454A347D3461E43",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4736DF180F8D4E9B9454A347D3461E43"
    },
    "37CB41357F4047DF8B5AB315C89C95A7": {
      "id": "37CB41357F4047DF8B5AB315C89C95A7",
      "asnIdentifier": null,
      "position": 186027,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.2.P.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Binary search can be more efficient than\nsequential/linear search.",
      "comments": [],
      "ancestorIds": [
        "4736DF180F8D4E9B9454A347D3461E43",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4736DF180F8D4E9B9454A347D3461E43"
    },
    "05F344367C7644AFAADDF431A3EE0B91": {
      "id": "05F344367C7644AFAADDF431A3EE0B91",
      "asnIdentifier": null,
      "position": 186026,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.P.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The binary search algorithm starts at the\nmiddle of a sorted array or ArrayList and\neliminates half of the array or ArrayList in\neach iteration until the desired value is found or\nall elements have been eliminated.",
      "comments": [],
      "ancestorIds": [
        "4736DF180F8D4E9B9454A347D3461E43",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4736DF180F8D4E9B9454A347D3461E43"
    },
    "1A52ED9215CD41C39E77813C29B7E468": {
      "id": "1A52ED9215CD41C39E77813C29B7E468",
      "asnIdentifier": null,
      "position": 186025,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.P.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data must be in sorted order to use the binary\nsearch algorithm. ",
      "comments": [],
      "ancestorIds": [
        "4736DF180F8D4E9B9454A347D3461E43",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4736DF180F8D4E9B9454A347D3461E43"
    },
    "4736DF180F8D4E9B9454A347D3461E43": {
      "id": "4736DF180F8D4E9B9454A347D3461E43",
      "asnIdentifier": null,
      "position": 186024,
      "depth": 3,
      "listId": "p",
      "statementNotation": "CON.2.P",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply recursive search\nalgorithms to information\nin String, 1D array, or\nArrayList objects.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "B1872F58D3174F7F94D9AFEC5ABEF689": {
      "id": "B1872F58D3174F7F94D9AFEC5ABEF689",
      "asnIdentifier": null,
      "position": 186023,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "CON.2.O.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Recursion can be used to traverse String,\narray, and ArrayList objects.",
      "comments": [],
      "ancestorIds": [
        "385CFAA5D5A7426DB32B3180250AF6DE",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "385CFAA5D5A7426DB32B3180250AF6DE"
    },
    "C18B5AB045D74178A8CD71F1BCD17A2E": {
      "id": "C18B5AB045D74178A8CD71F1BCD17A2E",
      "asnIdentifier": null,
      "position": 186022,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "CON.2.O.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Any recursive solution can be replicated\nthrough the use of an iterative approach. ",
      "comments": [],
      "ancestorIds": [
        "385CFAA5D5A7426DB32B3180250AF6DE",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "385CFAA5D5A7426DB32B3180250AF6DE"
    },
    "CA624CC9A7054D9DBDBC7C2F92E4FEF0": {
      "id": "CA624CC9A7054D9DBDBC7C2F92E4FEF0",
      "asnIdentifier": null,
      "position": 186021,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.2.O.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Parameter values capture the progress of\na recursive process, much like loop control\nvariable values capture the progress of a loop. ",
      "comments": [],
      "ancestorIds": [
        "385CFAA5D5A7426DB32B3180250AF6DE",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "385CFAA5D5A7426DB32B3180250AF6DE"
    },
    "FF4B48F33D29464A98E9633F6D157BAB": {
      "id": "FF4B48F33D29464A98E9633F6D157BAB",
      "asnIdentifier": null,
      "position": 186020,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.2.O.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Each recursive call has its own set of local\nvariables, including the formal parameters.",
      "comments": [],
      "ancestorIds": [
        "385CFAA5D5A7426DB32B3180250AF6DE",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "385CFAA5D5A7426DB32B3180250AF6DE"
    },
    "D6938B1D076743428B8AF856C24A352F": {
      "id": "D6938B1D076743428B8AF856C24A352F",
      "asnIdentifier": null,
      "position": 186019,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.O.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Recursive methods contain at least one base\ncase, which halts the recursion, and at least\none recursive call. ",
      "comments": [],
      "ancestorIds": [
        "385CFAA5D5A7426DB32B3180250AF6DE",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "385CFAA5D5A7426DB32B3180250AF6DE"
    },
    "36AA6B526E5B4B8886CE48F76F1689AB": {
      "id": "36AA6B526E5B4B8886CE48F76F1689AB",
      "asnIdentifier": null,
      "position": 186018,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.O.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A recursive method is a method that calls itself.",
      "comments": [],
      "ancestorIds": [
        "385CFAA5D5A7426DB32B3180250AF6DE",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "385CFAA5D5A7426DB32B3180250AF6DE"
    },
    "385CFAA5D5A7426DB32B3180250AF6DE": {
      "id": "385CFAA5D5A7426DB32B3180250AF6DE",
      "asnIdentifier": null,
      "position": 186017,
      "depth": 3,
      "listId": "o",
      "statementNotation": "CON.2.O",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the result of\nexecuting recursive methods. ",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "2829FC9153ED4A98B9AFB37D435BAAC2": {
      "id": "2829FC9153ED4A98B9AFB37D435BAAC2",
      "asnIdentifier": null,
      "position": 186016,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.N.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "All standard 1D array algorithms can be applied\nto 2D array objects.",
      "comments": [],
      "ancestorIds": [
        "B8472292839342BCA176980DC75C033D",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B8472292839342BCA176980DC75C033D"
    },
    "612EBEFD06944F6B9DFFF0F3E770D3DE": {
      "id": "612EBEFD06944F6B9DFFF0F3E770D3DE",
      "asnIdentifier": null,
      "position": 186015,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.N.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When applying sequential/linear search\nalgorithms to 2D arrays, each row must be\naccessed then sequential/linear search applied\nto each row of a 2D array.",
      "comments": [],
      "ancestorIds": [
        "B8472292839342BCA176980DC75C033D",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B8472292839342BCA176980DC75C033D"
    },
    "B8472292839342BCA176980DC75C033D": {
      "id": "B8472292839342BCA176980DC75C033D",
      "asnIdentifier": null,
      "position": 186014,
      "depth": 3,
      "listId": "n",
      "statementNotation": "CON.2.N",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For algorithms in the context\nof a particular specification\nthat requires the use of 2D\narray traversals:\n§ Identify standard\nalgorithms.\n§ Modify standard\nalgorithms.\n§ Develop an algorithm.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "30E96EE414504FFDB1C6EE3A2B98D4E7": {
      "id": "30E96EE414504FFDB1C6EE3A2B98D4E7",
      "asnIdentifier": null,
      "position": 186013,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.M.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Informal run-time comparisons of program\ncode segments can be made using statement\nexecution counts.",
      "comments": [],
      "ancestorIds": [
        "D1E9B1D7167344629E10CC31C119E32B",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "D1E9B1D7167344629E10CC31C119E32B"
    },
    "D1E9B1D7167344629E10CC31C119E32B": {
      "id": "D1E9B1D7167344629E10CC31C119E32B",
      "asnIdentifier": null,
      "position": 186012,
      "depth": 3,
      "listId": "m",
      "statementNotation": "CON.2.M",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compute statement\nexecution counts and\ninformal run-time comparison\nof sorting algorithms.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "509D4D7BD34A4F89A0F50F96A563BB3A": {
      "id": "509D4D7BD34A4F89A0F50F96A563BB3A",
      "asnIdentifier": null,
      "position": 186011,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.I.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Selection sort and insertion sort are iterative\nsorting algorithms that can be used to sort\nelements in an array or ArrayList.",
      "comments": [],
      "ancestorIds": [
        "03D19F663FC148DC8519FB606464B617",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "03D19F663FC148DC8519FB606464B617"
    },
    "03D19F663FC148DC8519FB606464B617": {
      "id": "03D19F663FC148DC8519FB606464B617",
      "asnIdentifier": null,
      "position": 186010,
      "depth": 3,
      "listId": "l",
      "statementNotation": "CON.2.I",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply selection sort and\ninsertion sort algorithms to\nsort the elements of array or\nArrayList objects.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "C25B4DEBF35B48559401E71A74A035AB": {
      "id": "C25B4DEBF35B48559401E71A74A035AB",
      "asnIdentifier": null,
      "position": 186009,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.K.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Sequential/linear search algorithms check each\nelement in order until the desired value is found\nor all elements in the array or ArrayList have\nbeen checked.",
      "comments": [],
      "ancestorIds": [
        "5C38D99519A9422D85462AE974990FD7",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5C38D99519A9422D85462AE974990FD7"
    },
    "5CDF549F8E114DEFB69B116F24BDFD2B": {
      "id": "5CDF549F8E114DEFB69B116F24BDFD2B",
      "asnIdentifier": null,
      "position": 186008,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.K.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are standard algorithms for searching.",
      "comments": [],
      "ancestorIds": [
        "5C38D99519A9422D85462AE974990FD7",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5C38D99519A9422D85462AE974990FD7"
    },
    "5C38D99519A9422D85462AE974990FD7": {
      "id": "5C38D99519A9422D85462AE974990FD7",
      "asnIdentifier": null,
      "position": 186007,
      "depth": 3,
      "listId": "k",
      "statementNotation": "CON.2.K",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply sequential/linear\nsearch algorithms to search\nfor specific information\nin array or ArrayList\nobjects.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "0F81196C4F8346F0B02975F1D8F8ECAD": {
      "id": "0F81196C4F8346F0B02975F1D8F8ECAD",
      "asnIdentifier": null,
      "position": 186006,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.J.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Some algorithms require multiple String,\narray, or ArrayList objects to be traversed\nsimultaneously",
      "comments": [],
      "ancestorIds": [
        "E19E5117A2F54B839E67B8F319442AB1",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "E19E5117A2F54B839E67B8F319442AB1"
    },
    "BD2B4A154D2346C388572718401921B1": {
      "id": "BD2B4A154D2346C388572718401921B1",
      "asnIdentifier": null,
      "position": 186005,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.J.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are standard ArrayList algorithms\nthat utilize traversals to:\n§ Insert elements\n§ Delete elements\n§ Apply the same standard algorithms that are\nused with 1D arrays",
      "comments": [],
      "ancestorIds": [
        "E19E5117A2F54B839E67B8F319442AB1",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "E19E5117A2F54B839E67B8F319442AB1"
    },
    "E19E5117A2F54B839E67B8F319442AB1": {
      "id": "E19E5117A2F54B839E67B8F319442AB1",
      "asnIdentifier": null,
      "position": 186004,
      "depth": 3,
      "listId": "j",
      "statementNotation": "CON.2.J",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For algorithms in the context\nof a particular specification\nthat requires the use of\nArrayList traversals:\n§ Identify standard\nalgorithms.\n§ Modify standard\nalgorithms.\n§ Develop an algorithm.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "97E232C8CCC74EC385ADDFF1AD37579A": {
      "id": "97E232C8CCC74EC385ADDFF1AD37579A",
      "asnIdentifier": null,
      "position": 186003,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.I.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are standard array algorithms that utilize\ntraversals to:\n§ Shift or rotate elements left or right\n§ Reverse the order of the elements ",
      "comments": [],
      "ancestorIds": [
        "22EBF61A6D9E4B4780CF56CDAFC05076",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "22EBF61A6D9E4B4780CF56CDAFC05076"
    },
    "8D1906235AE4498BA5A03D6556E943D2": {
      "id": "8D1906235AE4498BA5A03D6556E943D2",
      "asnIdentifier": null,
      "position": 186002,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.I.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are standard algorithms that utilize array\ntraversals to:\n§ Determine a minimum or maximum value\n§ Compute a sum, average, or mode\n§ Determine if at least one element has a\nparticular property\n§ Determine if all elements have a particular\nproperty\n§ Access all consecutive pairs of elements\n§ Determine the presence or absence of\nduplicate elements\n§ Determine the number of elements meeting\nspecific criteria",
      "comments": [],
      "ancestorIds": [
        "22EBF61A6D9E4B4780CF56CDAFC05076",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "22EBF61A6D9E4B4780CF56CDAFC05076"
    },
    "22EBF61A6D9E4B4780CF56CDAFC05076": {
      "id": "22EBF61A6D9E4B4780CF56CDAFC05076",
      "asnIdentifier": null,
      "position": 186001,
      "depth": 3,
      "listId": "i",
      "statementNotation": "CON.2.I",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For algorithms in the context\nof a particular specification\nthat requires the use of array\ntraversals:\n§ Identify standard\nalgorithms.\n§ Modify standard\nalgorithms.\n§ Develop an algorithm.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "B3B4609D1CDA49F5889DEB63B6001264": {
      "id": "B3B4609D1CDA49F5889DEB63B6001264",
      "asnIdentifier": null,
      "position": 186000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.H.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A statement execution count indicates the\nnumber of times a statement is executed by\nthe program.",
      "comments": [],
      "ancestorIds": [
        "1007984452274341860F4B7541AA41DD",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1007984452274341860F4B7541AA41DD"
    },
    "1007984452274341860F4B7541AA41DD": {
      "id": "1007984452274341860F4B7541AA41DD",
      "asnIdentifier": null,
      "position": 185000,
      "depth": 3,
      "listId": "h",
      "statementNotation": "CON.2.H",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compute statement\nexecution counts and\ninformal run-time comparison\nof iterative statements.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "B6D35F0FF8344A1F8C964AB8270EFE28": {
      "id": "B6D35F0FF8344A1F8C964AB8270EFE28",
      "asnIdentifier": null,
      "position": 184000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.G.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When a loop is nested inside another loop,\nthe inner loop must complete all its iterations\nbefore the outer loop can continue.",
      "comments": [],
      "ancestorIds": [
        "A9403CD525334E879FA741FFD707FD13",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9403CD525334E879FA741FFD707FD13"
    },
    "815C84630603472594736311341380A2": {
      "id": "815C84630603472594736311341380A2",
      "asnIdentifier": null,
      "position": 183000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.G.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Nested iteration statements are iteration\nstatements that appear in the body of another\niteration statement.",
      "comments": [],
      "ancestorIds": [
        "A9403CD525334E879FA741FFD707FD13",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9403CD525334E879FA741FFD707FD13"
    },
    "A9403CD525334E879FA741FFD707FD13": {
      "id": "A9403CD525334E879FA741FFD707FD13",
      "asnIdentifier": null,
      "position": 182000,
      "depth": 3,
      "listId": "g",
      "statementNotation": "CON.2.G",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent nested iterative\nprocesses.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "525805B6AD8C4993A39D6995310002DC": {
      "id": "525805B6AD8C4993A39D6995310002DC",
      "asnIdentifier": null,
      "position": 181000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.F.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are standard algorithms that utilize\nString traversals to:\n§ Find if one or more substrings has a\nparticular property\n§ Determine the number of substrings that\nmeet specific criteria\n§ Create a new string with the characters\nreversed",
      "comments": [],
      "ancestorIds": [
        "A6B3FA8C8CBC4455B005F927AF9F2D63",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A6B3FA8C8CBC4455B005F927AF9F2D63"
    },
    "A6B3FA8C8CBC4455B005F927AF9F2D63": {
      "id": "A6B3FA8C8CBC4455B005F927AF9F2D63",
      "asnIdentifier": null,
      "position": 180000,
      "depth": 3,
      "listId": "f",
      "statementNotation": "CON.2.F",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For algorithms in the context\nof a particular specification\nthat involves String\nobjects:\n§ Identify standard\nalgorithms.\n§ Modify standard\nalgorithms.\n§ Develop an algorithm.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "1C6196FEEF674BD098C4B22D915F7C3F": {
      "id": "1C6196FEEF674BD098C4B22D915F7C3F",
      "asnIdentifier": null,
      "position": 179000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "CON.2.E.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "“Off by one” errors occur when the iteration\nstatement loops one time too many or one time\ntoo few. ",
      "comments": [],
      "ancestorIds": [
        "A1F68F3A3C2641F6ABDF7D27449C6496",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A1F68F3A3C2641F6ABDF7D27449C6496"
    },
    "EB68E44912AC46ECBE676E876F36CCD2": {
      "id": "EB68E44912AC46ECBE676E876F36CCD2",
      "asnIdentifier": null,
      "position": 178000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.2.E.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A for loop can be rewritten into an equivalent\nwhile loop and vice versa.",
      "comments": [],
      "ancestorIds": [
        "A1F68F3A3C2641F6ABDF7D27449C6496",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A1F68F3A3C2641F6ABDF7D27449C6496"
    },
    "945D35085A244CB9B67A7A89ADE8C4BE": {
      "id": "945D35085A244CB9B67A7A89ADE8C4BE",
      "asnIdentifier": null,
      "position": 177000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.2.E.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "In each iteration of a for loop, the increment\nstatement is executed after the entire loop\nbody is executed and before the Boolean\nexpression is evaluated again. ",
      "comments": [],
      "ancestorIds": [
        "A1F68F3A3C2641F6ABDF7D27449C6496",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A1F68F3A3C2641F6ABDF7D27449C6496"
    },
    "77EF35EA938249718E3050CF8E520F21": {
      "id": "77EF35EA938249718E3050CF8E520F21",
      "asnIdentifier": null,
      "position": 176000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.E.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "In a for loop, the initialization statement is\nonly executed once before the first Boolean\nexpression evaluation. The variable being\ninitialized is referred to as a loop control\nvariable. ",
      "comments": [],
      "ancestorIds": [
        "A1F68F3A3C2641F6ABDF7D27449C6496",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A1F68F3A3C2641F6ABDF7D27449C6496"
    },
    "8BECB9E83AFB4A8F8F2F911565E3811D": {
      "id": "8BECB9E83AFB4A8F8F2F911565E3811D",
      "asnIdentifier": null,
      "position": 175000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.E.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are three parts in a for loop header:\nthe initialization, the Boolean expression, and\nthe increment. The increment statement can\nalso be a decrement statement. ",
      "comments": [],
      "ancestorIds": [
        "A1F68F3A3C2641F6ABDF7D27449C6496",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A1F68F3A3C2641F6ABDF7D27449C6496"
    },
    "A1F68F3A3C2641F6ABDF7D27449C6496": {
      "id": "A1F68F3A3C2641F6ABDF7D27449C6496",
      "asnIdentifier": null,
      "position": 174000,
      "depth": 3,
      "listId": "e",
      "statementNotation": "CON.2.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent iterative\nprocesses using a for loop.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "407D328CF83A438B974E053CB53436B8": {
      "id": "407D328CF83A438B974E053CB53436B8",
      "asnIdentifier": null,
      "position": 173000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.D.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are standard algorithms to:\n§ Determine a minimum or maximum value\n§ Compute a sum, average, or mode",
      "comments": [],
      "ancestorIds": [
        "D205E7EB14D24EE4A29E9712751C7B4A",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "D205E7EB14D24EE4A29E9712751C7B4A"
    },
    "D8C379102A38416081DB765E672EF480": {
      "id": "D8C379102A38416081DB765E672EF480",
      "asnIdentifier": null,
      "position": 172000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.D.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "There are standard algorithms to:\n§ Identify if an integer is or is not evenly\ndivisible by another integer\n§ Identify the individual digits in an integer\n§ Determine the frequency with which a\nspecific criterion is met",
      "comments": [],
      "ancestorIds": [
        "D205E7EB14D24EE4A29E9712751C7B4A",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "D205E7EB14D24EE4A29E9712751C7B4A"
    },
    "D205E7EB14D24EE4A29E9712751C7B4A": {
      "id": "D205E7EB14D24EE4A29E9712751C7B4A",
      "asnIdentifier": null,
      "position": 171000,
      "depth": 3,
      "listId": "d",
      "statementNotation": "CON.2.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For algorithms in the context\nof a particular specification\nthat does not require the use\nof traversals:\n§ Identify standard\nalgorithms.\n§ Modify standard\nalgorithms.\n§ Develop an algorithm.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "888144D5C17D4B86AF26A6D776D61DCE": {
      "id": "888144D5C17D4B86AF26A6D776D61DCE",
      "asnIdentifier": null,
      "position": 170000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "CON.2.C.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Executing a return statement inside an iteration\nstatement will halt the loop and exit the method\nor constructor. ",
      "comments": [],
      "ancestorIds": [
        "FBFC36FAE71747C2A8522BFEC5BBE332",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FBFC36FAE71747C2A8522BFEC5BBE332"
    },
    "2B387EE36A1F416EBFCE0AABEFDA639D": {
      "id": "2B387EE36A1F416EBFCE0AABEFDA639D",
      "asnIdentifier": null,
      "position": 169000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.2.C.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "If the Boolean expression evaluates to false\ninitially, the loop body is not executed at all.",
      "comments": [],
      "ancestorIds": [
        "FBFC36FAE71747C2A8522BFEC5BBE332",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FBFC36FAE71747C2A8522BFEC5BBE332"
    },
    "5C4323311344425BB03A9D2F74CD1CE7": {
      "id": "5C4323311344425BB03A9D2F74CD1CE7",
      "asnIdentifier": null,
      "position": 168000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.2.C.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A loop is an infinite loop when the Boolean\nexpression always evaluates to true. ",
      "comments": [],
      "ancestorIds": [
        "FBFC36FAE71747C2A8522BFEC5BBE332",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FBFC36FAE71747C2A8522BFEC5BBE332"
    },
    "E80EA2567DF14A71BF5B4C1A1CB38E1A": {
      "id": "E80EA2567DF14A71BF5B4C1A1CB38E1A",
      "asnIdentifier": null,
      "position": 167000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.C.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "In loops, the Boolean expression is evaluated\nbefore each iteration of the loop body,\nincluding the first. When the expression\nevaluates to true, the loop body is executed.\nThis continues until the expression evaluates to\nfalse, whereupon the iteration ceases. ",
      "comments": [],
      "ancestorIds": [
        "FBFC36FAE71747C2A8522BFEC5BBE332",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FBFC36FAE71747C2A8522BFEC5BBE332"
    },
    "63A6877DD88948D39FE16C5625C83840": {
      "id": "63A6877DD88948D39FE16C5625C83840",
      "asnIdentifier": null,
      "position": 166000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.C.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Iteration statements change the flow of control\nby repeating a set of statements zero or more\ntimes until a condition is met. ",
      "comments": [],
      "ancestorIds": [
        "FBFC36FAE71747C2A8522BFEC5BBE332",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FBFC36FAE71747C2A8522BFEC5BBE332"
    },
    "FBFC36FAE71747C2A8522BFEC5BBE332": {
      "id": "FBFC36FAE71747C2A8522BFEC5BBE332",
      "asnIdentifier": null,
      "position": 165000,
      "depth": 3,
      "listId": "c",
      "statementNotation": "CON.2.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent iterative\nprocesses using a\nwhile loop",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "EBC5107D4E3149DD88E639E260428AF9": {
      "id": "EBC5107D4E3149DD88E639E260428AF9",
      "asnIdentifier": null,
      "position": 164000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Nested if statements consist of if\nstatements within if statements.",
      "comments": [],
      "ancestorIds": [
        "BFBBFA6796D14D009AC168D424DA29A8",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "BFBBFA6796D14D009AC168D424DA29A8"
    },
    "BFBBFA6796D14D009AC168D424DA29A8": {
      "id": "BFBBFA6796D14D009AC168D424DA29A8",
      "asnIdentifier": null,
      "position": 163000,
      "depth": 3,
      "listId": "b",
      "statementNotation": "CON.2.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent branching logical\nprocesses by using nested\nconditional statements.",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "5B10D9E6F46242958424439A3D8F2FE7": {
      "id": "5B10D9E6F46242958424439A3D8F2FE7",
      "asnIdentifier": null,
      "position": 162000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "CON.2.A.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A multi-way selection is written when there are\na series of conditions with different statements\nfor each condition. Multi-way selection is\nperformed using if-else-if statements\nsuch that exactly one section of code is\nexecuted based on the first condition that\nevaluates to true.",
      "comments": [],
      "ancestorIds": [
        "EE088062C0A945089D2BA8A7C5A8266C",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EE088062C0A945089D2BA8A7C5A8266C"
    },
    "63814CDF4A6A498DAD76D2B357FF6367": {
      "id": "63814CDF4A6A498DAD76D2B357FF6367",
      "asnIdentifier": null,
      "position": 161000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.2.A.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A two-way selection is written when there are\ntwo sets of statements— one to be executed\nwhen the Boolean condition is true, and\nanother set for when the Boolean condition\nis false. In this case, the body of the “if” is\nexecuted when the Boolean condition is true,\nand the body of the “else” is executed when the\nBoolean condition is false",
      "comments": [],
      "ancestorIds": [
        "EE088062C0A945089D2BA8A7C5A8266C",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EE088062C0A945089D2BA8A7C5A8266C"
    },
    "6FA9EE8604274CB5992B4817ECEF90A9": {
      "id": "6FA9EE8604274CB5992B4817ECEF90A9",
      "asnIdentifier": null,
      "position": 160000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.2.A.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A one-way selection (if statement) is written\nwhen there is a set of statements to execute\nunder a certain condition. In this case, the body\nis executed only when the Boolean condition\nis true.",
      "comments": [],
      "ancestorIds": [
        "EE088062C0A945089D2BA8A7C5A8266C",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EE088062C0A945089D2BA8A7C5A8266C"
    },
    "F13CE2C3611C417897817040B0EA35A2": {
      "id": "F13CE2C3611C417897817040B0EA35A2",
      "asnIdentifier": null,
      "position": 159000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.2.A.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "if statements affect the flow of control by\nexecuting different statements based on the\nvalue of a Boolean expression.",
      "comments": [],
      "ancestorIds": [
        "EE088062C0A945089D2BA8A7C5A8266C",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EE088062C0A945089D2BA8A7C5A8266C"
    },
    "4B39755564614B84A97913D0377E83E5": {
      "id": "4B39755564614B84A97913D0377E83E5",
      "asnIdentifier": null,
      "position": 158000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.2.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Conditional statements interrupt the sequential\nexecution of statements.",
      "comments": [],
      "ancestorIds": [
        "EE088062C0A945089D2BA8A7C5A8266C",
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EE088062C0A945089D2BA8A7C5A8266C"
    },
    "EE088062C0A945089D2BA8A7C5A8266C": {
      "id": "EE088062C0A945089D2BA8A7C5A8266C",
      "asnIdentifier": null,
      "position": 157000,
      "depth": 3,
      "listId": "a",
      "statementNotation": "CON.2.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent branching\nlogical processes by using\nconditional statements. ",
      "comments": [],
      "ancestorIds": [
        "8C5E334187E049CA88EF0578180886E6",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8C5E334187E049CA88EF0578180886E6"
    },
    "8C5E334187E049CA88EF0578180886E6": {
      "id": "8C5E334187E049CA88EF0578180886E6",
      "asnIdentifier": null,
      "position": 156000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "CON.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Programmers incorporate iteration and selection into code as a way of providing\ninstructions for the computer to process each of the many possible input values.",
      "comments": [],
      "ancestorIds": [
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5E90C45CD5334ADEA610F5605DB6C14C"
    },
    "BBF9C93FAF0B48FF98B44D4CF55444EE": {
      "id": "BBF9C93FAF0B48FF98B44D4CF55444EE",
      "asnIdentifier": null,
      "position": 155000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.H.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Often classes have their own equals method,\nwhich can be used to determine whether two\nobjects of the class are equivalent.",
      "comments": [],
      "ancestorIds": [
        "96E7D4F4077E4A15A7EC3983EDE71C61",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "96E7D4F4077E4A15A7EC3983EDE71C61"
    },
    "98DA716C11A14161AB00AC18FFB92402": {
      "id": "98DA716C11A14161AB00AC18FFB92402",
      "asnIdentifier": null,
      "position": 154000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.H.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A reference value can be compared with null,\nusing == or !=, to determine if the reference\nactually references an object.",
      "comments": [],
      "ancestorIds": [
        "96E7D4F4077E4A15A7EC3983EDE71C61",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "96E7D4F4077E4A15A7EC3983EDE71C61"
    },
    "AD52DB6EAE1C4D70BA4104B210226B42": {
      "id": "AD52DB6EAE1C4D70BA4104B210226B42",
      "asnIdentifier": null,
      "position": 153000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.H.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Object reference values can be compared,\nusing == and !=, to identify aliases.",
      "comments": [],
      "ancestorIds": [
        "96E7D4F4077E4A15A7EC3983EDE71C61",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "96E7D4F4077E4A15A7EC3983EDE71C61"
    },
    "72A094EAB27A4BD499278752CEE8FF6D": {
      "id": "72A094EAB27A4BD499278752CEE8FF6D",
      "asnIdentifier": null,
      "position": 152000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.H.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Two object references are considered aliases\nwhen they both reference the same object. ",
      "comments": [],
      "ancestorIds": [
        "96E7D4F4077E4A15A7EC3983EDE71C61",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "96E7D4F4077E4A15A7EC3983EDE71C61"
    },
    "96E7D4F4077E4A15A7EC3983EDE71C61": {
      "id": "96E7D4F4077E4A15A7EC3983EDE71C61",
      "asnIdentifier": null,
      "position": 151000,
      "depth": 3,
      "listId": "h",
      "statementNotation": "CON.1.H",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare object references\nusing Boolean expressions in\nprogram code.",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "92D0639B2AB147C1BBEBDF1DCF70D852": {
      "id": "92D0639B2AB147C1BBEBDF1DCF70D852",
      "asnIdentifier": null,
      "position": 150000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.1.G.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Equivalent Boolean expressions will evaluate to\nthe same value in all cases.",
      "comments": [],
      "ancestorIds": [
        "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2"
    },
    "42C51CF5B21848DB955CCDB0BFD54594": {
      "id": "42C51CF5B21848DB955CCDB0BFD54594",
      "asnIdentifier": null,
      "position": 149000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.1.G.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Truth tables can be used to prove Boolean\nidentities.",
      "comments": [],
      "ancestorIds": [
        "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2"
    },
    "907ECBE0864C4CD0BD454FE55D8698C7": {
      "id": "907ECBE0864C4CD0BD454FE55D8698C7",
      "asnIdentifier": null,
      "position": 148000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.1.G.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "De Morgan’s Laws can be applied to Boolean\nexpressions.",
      "comments": [],
      "ancestorIds": [
        "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2"
    },
    "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2": {
      "id": "1EF20C7BEF4B4DC0AFA7BDDCCBEF38C2",
      "asnIdentifier": null,
      "position": 147000,
      "depth": 3,
      "listId": "g",
      "statementNotation": "CON.1.G",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare and contrast\nequivalent Boolean\nexpressions.",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "362B86D662B04381A7273A57DC2E1CFC": {
      "id": "362B86D662B04381A7273A57DC2E1CFC",
      "asnIdentifier": null,
      "position": 146000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.1.F.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When the result of a logical expression\nusing && or || can be determined by\nevaluating only the first Boolean operand,\nthe second is not evaluated. This is known as\nshort-circuited evaluation.",
      "comments": [],
      "ancestorIds": [
        "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1"
    },
    "8284E59BFC914787B9166FF2F3400BB5": {
      "id": "8284E59BFC914787B9166FF2F3400BB5",
      "asnIdentifier": null,
      "position": 145000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.1.F.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An expression involving logical operators\nevaluates to a Boolean value",
      "comments": [],
      "ancestorIds": [
        "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1"
    },
    "DBBA69D2F8304B0A88E0FF9DB2F11E6D": {
      "id": "DBBA69D2F8304B0A88E0FF9DB2F11E6D",
      "asnIdentifier": null,
      "position": 144000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.1.F.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Logical operators !(not), &&(and), and ||(or)\nare used with Boolean values. This represents\nthe order these operators will be evaluated.",
      "comments": [],
      "ancestorIds": [
        "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1"
    },
    "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1": {
      "id": "E6F0AB72AA3F4BC3AE7CC9EFA0C6C3E1",
      "asnIdentifier": null,
      "position": 143000,
      "depth": 3,
      "listId": "f",
      "statementNotation": "CON.1.F",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate compound Boolean\nexpressions in program code. ",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "FCD86F228850424C9220814F79AFF205": {
      "id": "FCD86F228850424C9220814F79AFF205",
      "asnIdentifier": null,
      "position": 142000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.1.E.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An expression involving relational operators\nevaluates to a Boolean value.",
      "comments": [],
      "ancestorIds": [
        "A19CC0B42FC54109B5C6B9F2D7444588",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A19CC0B42FC54109B5C6B9F2D7444588"
    },
    "C8B43420F03A4B35817078DEF15BB3C6": {
      "id": "C8B43420F03A4B35817078DEF15BB3C6",
      "asnIdentifier": null,
      "position": 141000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.1.E.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Arithmetic expression values can be compared\nusing relational operators (i.e., <, >, <=, >=). ",
      "comments": [],
      "ancestorIds": [
        "A19CC0B42FC54109B5C6B9F2D7444588",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A19CC0B42FC54109B5C6B9F2D7444588"
    },
    "1CC628772F9C4BB6A347A5843A923C31": {
      "id": "1CC628772F9C4BB6A347A5843A923C31",
      "asnIdentifier": null,
      "position": 140000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.1.E.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Primitive values and reference values\ncan be compared using relational\noperators (i.e., == and !=).",
      "comments": [],
      "ancestorIds": [
        "A19CC0B42FC54109B5C6B9F2D7444588",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A19CC0B42FC54109B5C6B9F2D7444588"
    },
    "A19CC0B42FC54109B5C6B9F2D7444588": {
      "id": "A19CC0B42FC54109B5C6B9F2D7444588",
      "asnIdentifier": null,
      "position": 139000,
      "depth": 3,
      "listId": "e",
      "statementNotation": "CON.1.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate Boolean expressions\nthat use relational operators\nin program code",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "3123CE7407F04F499019C69265C9A6A9": {
      "id": "3123CE7407F04F499019C69265C9A6A9",
      "asnIdentifier": null,
      "position": 138000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.1.D.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The values returned from Math.random can\nbe manipulated to produce a random int or\ndouble in a defined range.",
      "comments": [],
      "ancestorIds": [
        "B05BC61E1A2B4B819ACEF355F1000089",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B05BC61E1A2B4B819ACEF355F1000089"
    },
    "84229085948A47D3B99A8D7C948B1C9D": {
      "id": "84229085948A47D3B99A8D7C948B1C9D",
      "asnIdentifier": null,
      "position": 137000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.1.D.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The following static Math methods—including\nwhat they do and when they are used—are part\nof the Java Quick Reference:",
      "comments": [],
      "ancestorIds": [
        "B05BC61E1A2B4B819ACEF355F1000089",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B05BC61E1A2B4B819ACEF355F1000089"
    },
    "B17EE651C1FC449F9982AC80134A1DE2": {
      "id": "B17EE651C1FC449F9982AC80134A1DE2",
      "asnIdentifier": null,
      "position": 136000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.1.D.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The Math class contains only static methods.",
      "comments": [],
      "ancestorIds": [
        "B05BC61E1A2B4B819ACEF355F1000089",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B05BC61E1A2B4B819ACEF355F1000089"
    },
    "235683B5470F4271B9ACF09779C84BC2": {
      "id": "235683B5470F4271B9ACF09779C84BC2",
      "asnIdentifier": null,
      "position": 135000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.1.D.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The Math class is part of the java.lang\npackage. ",
      "comments": [],
      "ancestorIds": [
        "B05BC61E1A2B4B819ACEF355F1000089",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B05BC61E1A2B4B819ACEF355F1000089"
    },
    "B05BC61E1A2B4B819ACEF355F1000089": {
      "id": "B05BC61E1A2B4B819ACEF355F1000089",
      "asnIdentifier": null,
      "position": 134000,
      "depth": 3,
      "listId": "d",
      "statementNotation": "CON.1.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate expressions that use\nthe Math class methods.",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "FEA84E1A5C8A48C39A3B2AC5923311E7": {
      "id": "FEA84E1A5C8A48C39A3B2AC5923311E7",
      "asnIdentifier": null,
      "position": 133000,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "CON.1.C.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "If an expression would evaluate to an int\nvalue outside of the allowed range, an integer\noverflow occurs. This could result in an\nincorrect value within the allowed range.",
      "comments": [],
      "ancestorIds": [
        "DB3B4D72ABA249F3A3F3C58D6A92291A",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "DB3B4D72ABA249F3A3F3C58D6A92291A"
    },
    "F4F77F46E1D64E4780173CCB1BEF677A": {
      "id": "F4F77F46E1D64E4780173CCB1BEF677A",
      "asnIdentifier": null,
      "position": 132000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "CON.1.C.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Integer values in Java are represented by\nvalues of type int, which are stored using a\nfinite amount (4 bytes) of memory. Therefore,\nan int value must be in the range from\nInteger.MIN_VALUE to Integer.MAX_\nVALUE inclusive.",
      "comments": [],
      "ancestorIds": [
        "DB3B4D72ABA249F3A3F3C58D6A92291A",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "DB3B4D72ABA249F3A3F3C58D6A92291A"
    },
    "1928FC30CE05402995ACD0095C9EECE3": {
      "id": "1928FC30CE05402995ACD0095C9EECE3",
      "asnIdentifier": null,
      "position": 131000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.1.C.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Values of type double can be rounded to the\nnearest integer by (int)(x + 0.5) or (int)(x – 0.5) for negative numbers.",
      "comments": [],
      "ancestorIds": [
        "DB3B4D72ABA249F3A3F3C58D6A92291A",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "DB3B4D72ABA249F3A3F3C58D6A92291A"
    },
    "7B0F481DA1AC47C3BFE2416AA85850DF": {
      "id": "7B0F481DA1AC47C3BFE2416AA85850DF",
      "asnIdentifier": null,
      "position": 130000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.1.C.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Some programming code causes int values\nto be automatically cast (widened) to double\nvalues.",
      "comments": [],
      "ancestorIds": [
        "DB3B4D72ABA249F3A3F3C58D6A92291A",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "DB3B4D72ABA249F3A3F3C58D6A92291A"
    },
    "1792286845AF4697A7744DFAE56415BB": {
      "id": "1792286845AF4697A7744DFAE56415BB",
      "asnIdentifier": null,
      "position": 129000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.1.C.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Casting a double value to an int causes\nthe digits to the right of the decimal point to be\ntruncated. ",
      "comments": [],
      "ancestorIds": [
        "DB3B4D72ABA249F3A3F3C58D6A92291A",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "DB3B4D72ABA249F3A3F3C58D6A92291A"
    },
    "2DEED860BA854585BFCFFB8B49E351DD": {
      "id": "2DEED860BA854585BFCFFB8B49E351DD",
      "asnIdentifier": null,
      "position": 128000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.1.C.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The casting operators (int) and (double)\ncan be used to create a temporary value\nconverted to a different data type.",
      "comments": [],
      "ancestorIds": [
        "DB3B4D72ABA249F3A3F3C58D6A92291A",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "DB3B4D72ABA249F3A3F3C58D6A92291A"
    },
    "DB3B4D72ABA249F3A3F3C58D6A92291A": {
      "id": "DB3B4D72ABA249F3A3F3C58D6A92291A",
      "asnIdentifier": null,
      "position": 127000,
      "depth": 3,
      "listId": "c",
      "statementNotation": "CON.1.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate arithmetic\nexpressions that use casting.",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "CB32E9E239874DBDB2E2EDF53358316B": {
      "id": "CB32E9E239874DBDB2E2EDF53358316B",
      "asnIdentifier": null,
      "position": 126000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "CON.1.B.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The increment operator (++) and decrement\noperator (−−) are used to add 1 or subtract 1\nfrom the stored value of a variable or an array\nelement. The new value is assigned to the\nvariable or array element.",
      "comments": [],
      "ancestorIds": [
        "EC020567D8DC4C9E919366F8D1CEEBA7",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EC020567D8DC4C9E919366F8D1CEEBA7"
    },
    "6DFBB8FD49034B7A88D22E1CB275D717": {
      "id": "6DFBB8FD49034B7A88D22E1CB275D717",
      "asnIdentifier": null,
      "position": 125000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.1.B.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compound assignment operators (+=, −=, *=,\n/=, %=) can be used in place of the assignment\noperator.",
      "comments": [],
      "ancestorIds": [
        "EC020567D8DC4C9E919366F8D1CEEBA7",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EC020567D8DC4C9E919366F8D1CEEBA7"
    },
    "B3A2536E0CEE490F9E3B537D4B11D487": {
      "id": "B3A2536E0CEE490F9E3B537D4B11D487",
      "asnIdentifier": null,
      "position": 124000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.1.B.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The value of an expression has a type based on\nthe evaluation of the expression.",
      "comments": [],
      "ancestorIds": [
        "EC020567D8DC4C9E919366F8D1CEEBA7",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EC020567D8DC4C9E919366F8D1CEEBA7"
    },
    "83814B7F3C274B9383244187AB177A80": {
      "id": "83814B7F3C274B9383244187AB177A80",
      "asnIdentifier": null,
      "position": 123000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.1.B.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "During execution, expressions are evaluated to\nproduce a single value.",
      "comments": [],
      "ancestorIds": [
        "EC020567D8DC4C9E919366F8D1CEEBA7",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EC020567D8DC4C9E919366F8D1CEEBA7"
    },
    "E19567EB7FB54FD8A1D6DFF95D346070": {
      "id": "E19567EB7FB54FD8A1D6DFF95D346070",
      "asnIdentifier": null,
      "position": 122000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.1.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The assignment operator (=) allows a program\nto initialize or change the value stored in a\nvariable. The value of the expression on the\nright is stored in the variable on the left",
      "comments": [],
      "ancestorIds": [
        "EC020567D8DC4C9E919366F8D1CEEBA7",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "EC020567D8DC4C9E919366F8D1CEEBA7"
    },
    "EC020567D8DC4C9E919366F8D1CEEBA7": {
      "id": "EC020567D8DC4C9E919366F8D1CEEBA7",
      "asnIdentifier": null,
      "position": 121000,
      "depth": 3,
      "listId": "b",
      "statementNotation": "CON.1.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate what is stored\nin a variable as a result\nof an expression with an\nassignment statement.",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "F2F00D9767CE4BB49FA3A070703BA665": {
      "id": "F2F00D9767CE4BB49FA3A070703BA665",
      "asnIdentifier": null,
      "position": 120000,
      "depth": 4,
      "listId": "1h",
      "statementNotation": "CON.1.A.8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An attempt to divide an integer by zero will result\nin an ArithmeticException to occur. ",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "56FC1E56EABE4F84AE0F8B123E203B4E": {
      "id": "56FC1E56EABE4F84AE0F8B123E203B4E",
      "asnIdentifier": null,
      "position": 119000,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "CON.1.A.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "During evaluation, operands are associated with\noperators according to operator precedence to\ndetermine how they are grouped.",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "BB7BC40D8744464ABD8FA9104C8BEAE2": {
      "id": "BB7BC40D8744464ABD8FA9104C8BEAE2",
      "asnIdentifier": null,
      "position": 118000,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "CON.1.A.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Operators can be used to construct compound\nexpressions.",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "4DA7660B35A1414783E800BDC86CDAC1": {
      "id": "4DA7660B35A1414783E800BDC86CDAC1",
      "asnIdentifier": null,
      "position": 117000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "CON.1.A.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An arithmetic operation that uses a double\nvalue will evaluate to a double value.",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "8E9D264666734F0EA4C8202CBF444B51": {
      "id": "8E9D264666734F0EA4C8202CBF444B51",
      "asnIdentifier": null,
      "position": 116000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "CON.1.A.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An arithmetic operation that uses two int\nvalues will evaluate to an int value",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "04558A0FC259473EA16F6AE7D3F10079": {
      "id": "04558A0FC259473EA16F6AE7D3F10079",
      "asnIdentifier": null,
      "position": 115000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "CON.1.A.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The arithmetic operators consist of +, −, *, /,\nand %.",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "5D5578D64DE84CE88F36A84AFCC51935": {
      "id": "5D5578D64DE84CE88F36A84AFCC51935",
      "asnIdentifier": null,
      "position": 114000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "CON.1.A.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Arithmetic expressions include expressions of\ntype int and double.",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "5F20587DDB6D47A69237FB92B698B3FA": {
      "id": "5F20587DDB6D47A69237FB92B698B3FA",
      "asnIdentifier": null,
      "position": 113000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "CON.1.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A literal is the source code representation of a\nfixed value.",
      "comments": [],
      "ancestorIds": [
        "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F7678FB3BB2B4E508C1AB31F1D7A7D0C"
    },
    "F7678FB3BB2B4E508C1AB31F1D7A7D0C": {
      "id": "F7678FB3BB2B4E508C1AB31F1D7A7D0C",
      "asnIdentifier": null,
      "position": 112000,
      "depth": 3,
      "listId": "a",
      "statementNotation": "CON.1.A ",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate arithmetic\nexpressions in a program\ncode.",
      "comments": [],
      "ancestorIds": [
        "495429F25A2B4183BB8A00240FDB71A0",
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "495429F25A2B4183BB8A00240FDB71A0"
    },
    "495429F25A2B4183BB8A00240FDB71A0": {
      "id": "495429F25A2B4183BB8A00240FDB71A0",
      "asnIdentifier": null,
      "position": 111000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "CON.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The way variables and operators are sequenced and combined in an expression\ndetermines the computed result. ",
      "comments": [],
      "ancestorIds": [
        "5E90C45CD5334ADEA610F5605DB6C14C",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5E90C45CD5334ADEA610F5605DB6C14C"
    },
    "5E90C45CD5334ADEA610F5605DB6C14C": {
      "id": "5E90C45CD5334ADEA610F5605DB6C14C",
      "asnIdentifier": null,
      "position": 110000,
      "depth": 1,
      "listId": "3",
      "statementNotation": "CON",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Control",
      "comments": [],
      "ancestorIds": [
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
    },
    "6DB7573C43064CE688B12F4A75EB1896": {
      "id": "6DB7573C43064CE688B12F4A75EB1896",
      "asnIdentifier": null,
      "position": 109050,
      "depth": 3,
      "listId": "h",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "AA4DB60FA76B4732B80EC3C13654EC8C": {
      "id": "AA4DB60FA76B4732B80EC3C13654EC8C",
      "asnIdentifier": null,
      "position": 109049,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.2.G.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The outer loop of a nested enhanced for\nloop used to traverse a 2D array traverses\nthe rows. Therefore, the enhanced for loop\nvariable must be the type of each row, which\nis a 1D array. The inner loop traverses a single\nrow. Therefore, the inner enhanced for\nloop variable must be the same type as the\nelements stored in the 1D array",
      "comments": [],
      "ancestorIds": [
        "84574272462A4DDCBC1E3EB95BB21926",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "84574272462A4DDCBC1E3EB95BB21926"
    },
    "124C81533D084747A463A6FA5927793C": {
      "id": "124C81533D084747A463A6FA5927793C",
      "asnIdentifier": null,
      "position": 109048,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.2.G.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Nested iteration statements can be written to\ntraverse the 2D array in “row-major order” or\n“column-major order.” ",
      "comments": [],
      "ancestorIds": [
        "84574272462A4DDCBC1E3EB95BB21926",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "84574272462A4DDCBC1E3EB95BB21926"
    },
    "92B69DAE9C4D42B59553D7484779BECB": {
      "id": "92B69DAE9C4D42B59553D7484779BECB",
      "asnIdentifier": null,
      "position": 109047,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.2.G.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Nested iteration statements are used to\ntraverse and access all elements in a 2D array.\nSince 2D arrays are stored as arrays of arrays,\nthe way 2D arrays are traversed using for\nloops and enhanced for loops is similar to 1D\narray objects.",
      "comments": [],
      "ancestorIds": [
        "84574272462A4DDCBC1E3EB95BB21926",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "84574272462A4DDCBC1E3EB95BB21926"
    },
    "84574272462A4DDCBC1E3EB95BB21926": {
      "id": "84574272462A4DDCBC1E3EB95BB21926",
      "asnIdentifier": null,
      "position": 109046,
      "depth": 3,
      "listId": "g",
      "statementNotation": "VAR.2.G.",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For 2D array objects:\n§ Traverse using nested\nfor loops.\n§ Traverse using nested\nenhanced for loops.",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "8409359F89654966A1B456CD0403F47D": {
      "id": "8409359F89654966A1B456CD0403F47D",
      "asnIdentifier": null,
      "position": 109045,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "VAR.2.F.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "“Row-major order” refers to an ordering of 2D\narray elements where traversal occurs across\neach row, while “column-major order” traversal\noccurs down each column.",
      "comments": [],
      "ancestorIds": [
        "F58DBE596A89486FAF33640C874C0364",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F58DBE596A89486FAF33640C874C0364"
    },
    "DF8C16EA801B41A3A0499CF0D08C3056": {
      "id": "DF8C16EA801B41A3A0499CF0D08C3056",
      "asnIdentifier": null,
      "position": 109044,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.2.F.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The square brackets [row][col] are used\nto access and modify an element in a 2D array.",
      "comments": [],
      "ancestorIds": [
        "F58DBE596A89486FAF33640C874C0364",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F58DBE596A89486FAF33640C874C0364"
    },
    "1127972971BF4AFB88441B537B44B43E": {
      "id": "1127972971BF4AFB88441B537B44B43E",
      "asnIdentifier": null,
      "position": 109043,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.2.F.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The initializer list used to create and initialize\na 2D array consists of initializer lists that\nrepresent 1D arrays.",
      "comments": [],
      "ancestorIds": [
        "F58DBE596A89486FAF33640C874C0364",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F58DBE596A89486FAF33640C874C0364"
    },
    "724283FD203E45F2AF908D25B210E593": {
      "id": "724283FD203E45F2AF908D25B210E593",
      "asnIdentifier": null,
      "position": 109043,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.2.F.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For the purposes of the exam, when accessing\nthe element at arr[first][second], the\nfirst index is used for rows, the second index is\nused for columns.",
      "comments": [],
      "ancestorIds": [
        "F58DBE596A89486FAF33640C874C0364",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F58DBE596A89486FAF33640C874C0364"
    },
    "DCBFA6B790194B1CABA494F9DC58F337": {
      "id": "DCBFA6B790194B1CABA494F9DC58F337",
      "asnIdentifier": null,
      "position": 109042,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.2.F.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "2D arrays are stored as arrays of arrays.\nTherefore, the way 2D arrays are created and\nindexed is similar to 1D array objects",
      "comments": [],
      "ancestorIds": [
        "F58DBE596A89486FAF33640C874C0364",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F58DBE596A89486FAF33640C874C0364"
    },
    "F58DBE596A89486FAF33640C874C0364": {
      "id": "F58DBE596A89486FAF33640C874C0364",
      "asnIdentifier": null,
      "position": 109041,
      "depth": 3,
      "listId": "f",
      "statementNotation": "VAR.2.F",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent collections of\nrelated primitive or object\nreference data using\ntwo-dimensional (2D)\narray objects.",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "2A1308512F0E4B74BC7C5FE7F5443D5A": {
      "id": "2A1308512F0E4B74BC7C5FE7F5443D5A",
      "asnIdentifier": null,
      "position": 109040,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.2.E.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Changing the size of an ArrayList\nwhile traversing it using an\nenhanced for loop can result in a\nConcurrentModificationException\nbeing thrown. Therefore, when using\nan enhanced for loop to traverse an\nArrayList, you should not add or\nremove elements.",
      "comments": [],
      "ancestorIds": [
        "44E8008DB68443E2BF9681A97328F4E5",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "44E8008DB68443E2BF9681A97328F4E5"
    },
    "F31A9C8C73B742A8A79EDF06B625B2DE": {
      "id": "F31A9C8C73B742A8A79EDF06B625B2DE",
      "asnIdentifier": null,
      "position": 109039,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.2.E.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Since the indices for an ArrayList\nstart at 0 and end at the number of\nelements − 1, accessing an index value\noutside of this range will result in an\nArrayIndexOutOfBoundsException\nbeing thrown.",
      "comments": [],
      "ancestorIds": [
        "44E8008DB68443E2BF9681A97328F4E5",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "44E8008DB68443E2BF9681A97328F4E5"
    },
    "F27CCE4F3F60409E9EB38B7DC0095510": {
      "id": "F27CCE4F3F60409E9EB38B7DC0095510",
      "asnIdentifier": null,
      "position": 109038,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.2.E.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Deleting elements during a traversal of an\nArrayList requires using special techniques\nto avoid skipping elements.",
      "comments": [],
      "ancestorIds": [
        "44E8008DB68443E2BF9681A97328F4E5",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "44E8008DB68443E2BF9681A97328F4E5"
    },
    "C76E54F112D94747BB364D0AF5845461": {
      "id": "C76E54F112D94747BB364D0AF5845461",
      "asnIdentifier": null,
      "position": 109037,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.2.E.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Iteration statements can be used to access all\nthe elements in an ArrayList. This is called\ntraversing the ArrayList.",
      "comments": [],
      "ancestorIds": [
        "44E8008DB68443E2BF9681A97328F4E5",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "44E8008DB68443E2BF9681A97328F4E5"
    },
    "44E8008DB68443E2BF9681A97328F4E5": {
      "id": "44E8008DB68443E2BF9681A97328F4E5",
      "asnIdentifier": null,
      "position": 109036,
      "depth": 3,
      "listId": "e",
      "statementNotation": "VAR.2.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For ArrayList objects:\na.  Traverse using a for or\nwhile loop\nb.  Traverse using an\nenhanced for loop",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "ECD086D9F9004E96B2B05ED60E5C6191": {
      "id": "ECD086D9F9004E96B2B05ED60E5C6191",
      "asnIdentifier": null,
      "position": 109035,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "VAR.2.D.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The following ArrayList methods—\nincluding what they do and when they are\nused—are part of the Java Quick Reference:",
      "comments": [],
      "ancestorIds": [
        "4431DF1108C84CDCB16DA79BF02B982A",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4431DF1108C84CDCB16DA79BF02B982A"
    },
    "85848D9E328D410EAA4FAA38722A5BC9": {
      "id": "85848D9E328D410EAA4FAA38722A5BC9",
      "asnIdentifier": null,
      "position": 109034,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "VAR.2.D.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The ArrayList class is part of the java.\nutil package. An import statement can be\nused to make this class available for use in the\nprogram.",
      "comments": [],
      "ancestorIds": [
        "4431DF1108C84CDCB16DA79BF02B982A",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4431DF1108C84CDCB16DA79BF02B982A"
    },
    "463E29962E744E44947A88BC7E2988EA": {
      "id": "463E29962E744E44947A88BC7E2988EA",
      "asnIdentifier": null,
      "position": 109033,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "VAR.2.D.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "ArrayList is preferred over\nArrayList because it allows the compiler\nto find errors that would otherwise be found at\nrun-time.  ",
      "comments": [],
      "ancestorIds": [
        "4431DF1108C84CDCB16DA79BF02B982A",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4431DF1108C84CDCB16DA79BF02B982A"
    },
    "74F59FB701CA409BA1D3858FC2BB0EF4": {
      "id": "74F59FB701CA409BA1D3858FC2BB0EF4",
      "asnIdentifier": null,
      "position": 109032,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.2.D.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When ArrayList is specified, the types\nof the reference parameters and return type\nwhen using the methods are type E.",
      "comments": [],
      "ancestorIds": [
        "4431DF1108C84CDCB16DA79BF02B982A",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4431DF1108C84CDCB16DA79BF02B982A"
    },
    "2A2232F94C0341BDB71B68F80D58578E": {
      "id": "2A2232F94C0341BDB71B68F80D58578E",
      "asnIdentifier": null,
      "position": 109031,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.2.D.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Java allows the generic type\nArrayList, where the generic type E\nspecifies the type of the elements. ",
      "comments": [],
      "ancestorIds": [
        "4431DF1108C84CDCB16DA79BF02B982A",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4431DF1108C84CDCB16DA79BF02B982A"
    },
    "B19228640DC14618AAA8AC785C775DAB": {
      "id": "B19228640DC14618AAA8AC785C775DAB",
      "asnIdentifier": null,
      "position": 109030,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.2.D.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The ArrayList constructor\nArrayList() constructs an empty list. ",
      "comments": [],
      "ancestorIds": [
        "4431DF1108C84CDCB16DA79BF02B982A",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4431DF1108C84CDCB16DA79BF02B982A"
    },
    "5DC918C1C9A04E3A9149448CCEAAE616": {
      "id": "5DC918C1C9A04E3A9149448CCEAAE616",
      "asnIdentifier": null,
      "position": 109029,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.2.D.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An ArrayList object is mutable and\ncontains object references.",
      "comments": [],
      "ancestorIds": [
        "4431DF1108C84CDCB16DA79BF02B982A",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "4431DF1108C84CDCB16DA79BF02B982A"
    },
    "4431DF1108C84CDCB16DA79BF02B982A": {
      "id": "4431DF1108C84CDCB16DA79BF02B982A",
      "asnIdentifier": null,
      "position": 109028,
      "depth": 3,
      "listId": "d",
      "statementNotation": "VAR.2.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent collections of\nrelated object reference data\nusing ArrayList objects.",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "1599781C7F984F86BB0303C6EEC3EE92": {
      "id": "1599781C7F984F86BB0303C6EEC3EE92",
      "asnIdentifier": null,
      "position": 109027,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.2.C.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Program code written using an enhanced for\nloop to traverse and access elements in an\narray can be rewritten using an indexed for\nloop or a while loop.",
      "comments": [],
      "ancestorIds": [
        "01BE31020D8543EC91C6A89F67D8A9B2",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "01BE31020D8543EC91C6A89F67D8A9B2"
    },
    "1235429FA42F4C059ABA3A834FA9720B": {
      "id": "1235429FA42F4C059ABA3A834FA9720B",
      "asnIdentifier": null,
      "position": 109025,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.2.C.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Assigning a new value to the enhanced for\nloop variable does not change the value stored\nin the array.",
      "comments": [],
      "ancestorIds": [
        "01BE31020D8543EC91C6A89F67D8A9B2",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "01BE31020D8543EC91C6A89F67D8A9B2"
    },
    "DB0B9302AE27481F9085AF6EB24B53DF": {
      "id": "DB0B9302AE27481F9085AF6EB24B53DF",
      "asnIdentifier": null,
      "position": 109024,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.2.C.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For each iteration of the enhanced for loop,\nthe enhanced for loop variable is assigned a\ncopy of an element without using its index.",
      "comments": [],
      "ancestorIds": [
        "01BE31020D8543EC91C6A89F67D8A9B2",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "01BE31020D8543EC91C6A89F67D8A9B2"
    },
    "0E9833FD7CC3447C9E84ACD5A0044396": {
      "id": "0E9833FD7CC3447C9E84ACD5A0044396",
      "asnIdentifier": null,
      "position": 109023,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.2.C.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An enhanced for loop header includes a\nvariable, referred to as the enhanced for\nloop variable.",
      "comments": [],
      "ancestorIds": [
        "01BE31020D8543EC91C6A89F67D8A9B2",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "01BE31020D8543EC91C6A89F67D8A9B2"
    },
    "01BE31020D8543EC91C6A89F67D8A9B2": {
      "id": "01BE31020D8543EC91C6A89F67D8A9B2",
      "asnIdentifier": null,
      "position": 109022,
      "depth": 3,
      "listId": "c",
      "statementNotation": "VAR.2.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Traverse the elements in\na 1D array object using an\nenhanced for loop.",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "16550C0B58154E3F84CD7A5647CFC48B": {
      "id": "16550C0B58154E3F84CD7A5647CFC48B",
      "asnIdentifier": null,
      "position": 109021,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.2.B.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Since the indices for an array start at\n0 and end at the number of elements\n− 1, “off by one” errors are easy to make\nwhen traversing an array, resulting in an\nArrayIndexOutOfBoundsException\nbeing thrown.",
      "comments": [],
      "ancestorIds": [
        "7B4AE42A43FB457BBFA87EE363C21959",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7B4AE42A43FB457BBFA87EE363C21959"
    },
    "C2696D2FCF144EEDB71661D69276F89E": {
      "id": "C2696D2FCF144EEDB71661D69276F89E",
      "asnIdentifier": null,
      "position": 109020,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.2.B.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Traversing an array with an indexed for\nloop or while loop requires elements to be\naccessed using their indices",
      "comments": [],
      "ancestorIds": [
        "7B4AE42A43FB457BBFA87EE363C21959",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7B4AE42A43FB457BBFA87EE363C21959"
    },
    "AD74C006DCAC4F1DAD4CC472E585F038": {
      "id": "AD74C006DCAC4F1DAD4CC472E585F038",
      "asnIdentifier": null,
      "position": 109019,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.2.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Iteration statements can be used to access\nall the elements in an array. This is called\ntraversing the array.",
      "comments": [],
      "ancestorIds": [
        "7B4AE42A43FB457BBFA87EE363C21959",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7B4AE42A43FB457BBFA87EE363C21959"
    },
    "7B4AE42A43FB457BBFA87EE363C21959": {
      "id": "7B4AE42A43FB457BBFA87EE363C21959",
      "asnIdentifier": null,
      "position": 109018,
      "depth": 3,
      "listId": "b",
      "statementNotation": "VAR.2.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Traverse the elements in a\n1D array.",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "1143CE657ECC46BF8BDE12C4C894BB8E": {
      "id": "1143CE657ECC46BF8BDE12C4C894BB8E",
      "asnIdentifier": null,
      "position": 109017,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "VAR.2.A.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The valid index values for an array are\n0 through one less than the number of\nelements in the array, inclusive. Using an index\nvalue outside of this range will result in an\nArrayIndexOutOfBoundsException\nbeing thrown. ",
      "comments": [],
      "ancestorIds": [
        "A99C1661BA164845B6CFADDC041C8C6D",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A99C1661BA164845B6CFADDC041C8C6D"
    },
    "172A415852564EA0B982859D095D059B": {
      "id": "172A415852564EA0B982859D095D059B",
      "asnIdentifier": null,
      "position": 109016,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "VAR.2.A.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Square brackets ([ ]) are used to access and\nmodify an element in a 1D array using an index.",
      "comments": [],
      "ancestorIds": [
        "A99C1661BA164845B6CFADDC041C8C6D",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A99C1661BA164845B6CFADDC041C8C6D"
    },
    "F0D0857FD18F4C8BABA566BF9DD58F9E": {
      "id": "F0D0857FD18F4C8BABA566BF9DD58F9E",
      "asnIdentifier": null,
      "position": 109015,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "VAR.2.A.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Initializer lists can be used to create and\ninitialize arrays.",
      "comments": [],
      "ancestorIds": [
        "A99C1661BA164845B6CFADDC041C8C6D",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A99C1661BA164845B6CFADDC041C8C6D"
    },
    "A30F1293A1C9488D92FCA5BF3C0DBDEB": {
      "id": "A30F1293A1C9488D92FCA5BF3C0DBDEB",
      "asnIdentifier": null,
      "position": 109014,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.2.A.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When an array is created using the keyword\nnew, all of its elements are initialized with a\nspecific value based on the type of elements:\n§ Elements of type int are initialized to 0\n§ Elements of type double are initialized to 0.0\n§ Elements of type boolean are initialized\nto false\n§ Elements of a reference type are initialized\nto the reference value null. No objects are\nautomatically created",
      "comments": [],
      "ancestorIds": [
        "A99C1661BA164845B6CFADDC041C8C6D",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A99C1661BA164845B6CFADDC041C8C6D"
    },
    "40991AB4A6F5450E9CF132A4FD145137": {
      "id": "40991AB4A6F5450E9CF132A4FD145137",
      "asnIdentifier": null,
      "position": 109013,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.2.A.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Arrays can store either primitive data or object\nreference data.",
      "comments": [],
      "ancestorIds": [
        "A99C1661BA164845B6CFADDC041C8C6D",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A99C1661BA164845B6CFADDC041C8C6D"
    },
    "2AEADF76CF7246EAB5F681A54835BD85": {
      "id": "2AEADF76CF7246EAB5F681A54835BD85",
      "asnIdentifier": null,
      "position": 109012,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.2.A.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The size of an array is established at the time of\ncreation and cannot be changed. ",
      "comments": [],
      "ancestorIds": [
        "A99C1661BA164845B6CFADDC041C8C6D",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A99C1661BA164845B6CFADDC041C8C6D"
    },
    "9F43D8A64C3E4CDAB2E8FD49A524AAAA": {
      "id": "9F43D8A64C3E4CDAB2E8FD49A524AAAA",
      "asnIdentifier": null,
      "position": 109011,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.2.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The use of array objects allows multiple related\nitems to be represented using a single variable. ",
      "comments": [],
      "ancestorIds": [
        "A99C1661BA164845B6CFADDC041C8C6D",
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A99C1661BA164845B6CFADDC041C8C6D"
    },
    "A99C1661BA164845B6CFADDC041C8C6D": {
      "id": "A99C1661BA164845B6CFADDC041C8C6D",
      "asnIdentifier": null,
      "position": 109010,
      "depth": 3,
      "listId": "a",
      "statementNotation": "VAR.2.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent collections of\nrelated primitive or object\nreference data using onedimensional (1D) array objects.",
      "comments": [],
      "ancestorIds": [
        "09688751CD4F43C6A9B0C4E5B9DBDBFC",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "09688751CD4F43C6A9B0C4E5B9DBDBFC"
    },
    "09688751CD4F43C6A9B0C4E5B9DBDBFC": {
      "id": "09688751CD4F43C6A9B0C4E5B9DBDBFC",
      "asnIdentifier": null,
      "position": 109009,
      "depth": 2,
      "listId": "B",
      "statementNotation": "VAR.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "To manage large amounts of data or complex relationships in data, programmers\nwrite code that groups the data together into a single data structure without creating\nindividual variables for each value. \n",
      "comments": [],
      "ancestorIds": [
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B1CB00B4D64C4B1298E56F3C7DC600E6"
    },
    "0C6C03BDA5514568A6F15E6393C9C5D3": {
      "id": "0C6C03BDA5514568A6F15E6393C9C5D3",
      "asnIdentifier": null,
      "position": 109008,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.1.H.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The keyword this can be used to pass the\ncurrent object as an actual parameter in a\nmethod call.",
      "comments": [],
      "ancestorIds": [
        "7DD2ED20D38C41E6934C55913402D0BA",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7DD2ED20D38C41E6934C55913402D0BA"
    },
    "3735AD9C26574C61981E5E0D7074DA30": {
      "id": "3735AD9C26574C61981E5E0D7074DA30",
      "asnIdentifier": null,
      "position": 109007,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.H.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Within a non-static method or a constructor,\nthe keyword this is a reference to the\ncurrent object—the object whose method or\nconstructor is being called.",
      "comments": [],
      "ancestorIds": [
        "7DD2ED20D38C41E6934C55913402D0BA",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7DD2ED20D38C41E6934C55913402D0BA"
    },
    "7DD2ED20D38C41E6934C55913402D0BA": {
      "id": "7DD2ED20D38C41E6934C55913402D0BA",
      "asnIdentifier": null,
      "position": 109006,
      "depth": 3,
      "listId": "h",
      "statementNotation": "VAR.1.H",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Evaluate object reference\nexpressions that use the\nkeyword this.",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "6EEB7929993044619F8337CC4395D369": {
      "id": "6EEB7929993044619F8337CC4395D369",
      "asnIdentifier": null,
      "position": 109005,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.1.G.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Through method decomposition, a\nprogrammer breaks down a large problem into\nsmaller subproblems by creating methods to\nsolve each individual subproblem.",
      "comments": [],
      "ancestorIds": [
        "5B3F331D88FF448F8B1227E79DF4D8A0",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5B3F331D88FF448F8B1227E79DF4D8A0"
    },
    "F01488761C3845FDBF8522E503A5CCBD": {
      "id": "F01488761C3845FDBF8522E503A5CCBD",
      "asnIdentifier": null,
      "position": 109004,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.1.G.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Formal parameters and variables declared in a\nmethod or constructor can only be used within\nthat method or constructor. ",
      "comments": [],
      "ancestorIds": [
        "5B3F331D88FF448F8B1227E79DF4D8A0",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5B3F331D88FF448F8B1227E79DF4D8A0"
    },
    "E98296C8723749398061CCD81585F9D7": {
      "id": "E98296C8723749398061CCD81585F9D7",
      "asnIdentifier": null,
      "position": 109003,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.1.G.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When there is a local variable with the same\nname as an instance variable, the variable\nname will refer to the local variable instead of\nthe instance variable. ",
      "comments": [],
      "ancestorIds": [
        "5B3F331D88FF448F8B1227E79DF4D8A0",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5B3F331D88FF448F8B1227E79DF4D8A0"
    },
    "5E95E8F6BA344A8E944A32E24D7D9144": {
      "id": "5E95E8F6BA344A8E944A32E24D7D9144",
      "asnIdentifier": null,
      "position": 109002,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.G.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Local variables can be declared in the body of\nconstructors and methods. These variables\nmay only be used within the constructor or\nmethod and cannot be declared to be public\nor private.",
      "comments": [],
      "ancestorIds": [
        "5B3F331D88FF448F8B1227E79DF4D8A0",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5B3F331D88FF448F8B1227E79DF4D8A0"
    },
    "5B3F331D88FF448F8B1227E79DF4D8A0": {
      "id": "5B3F331D88FF448F8B1227E79DF4D8A0",
      "asnIdentifier": null,
      "position": 109001,
      "depth": 3,
      "listId": "g",
      "statementNotation": "VAR.1.G",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain where variables can\nbe used in the program code.",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "C1724F504C2F495982F110C474B1CED1": {
      "id": "C1724F504C2F495982F110C474B1CED1",
      "asnIdentifier": null,
      "position": 109000,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "VAR.1.F.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The Java compiler applies unboxing when a\nwrapper class object is:\n§ Passed as a parameter to a method that\nexpects a value of the corresponding\nprimitive type.\n§ Assigned to a variable of the corresponding\nprimitive type.",
      "comments": [],
      "ancestorIds": [
        "29932C09E81E440DB6042ADE69158CE8",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "29932C09E81E440DB6042ADE69158CE8"
    },
    "4A6E42BC223246078730793BEC931C63": {
      "id": "4A6E42BC223246078730793BEC931C63",
      "asnIdentifier": null,
      "position": 108000,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "VAR.1.F.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Unboxing is the automatic conversion that the\nJava compiler makes from the wrapper class\nto the primitive type. This includes converting\nan Integer to an int and a Double to a\ndouble.",
      "comments": [],
      "ancestorIds": [
        "29932C09E81E440DB6042ADE69158CE8",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "29932C09E81E440DB6042ADE69158CE8"
    },
    "2FB4C62A9F944C4AB9D639824E66A90B": {
      "id": "2FB4C62A9F944C4AB9D639824E66A90B",
      "asnIdentifier": null,
      "position": 107000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "VAR.1.F.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The Java compiler applies autoboxing when a\nprimitive value is:",
      "comments": [],
      "ancestorIds": [
        "29932C09E81E440DB6042ADE69158CE8",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "29932C09E81E440DB6042ADE69158CE8"
    },
    "39E611D31079491E8906926B9F4274E2": {
      "id": "39E611D31079491E8906926B9F4274E2",
      "asnIdentifier": null,
      "position": 106000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.1.F.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Autoboxing is the automatic conversion that\nthe Java compiler makes between primitive\ntypes and their corresponding object wrapper\nclasses. This includes converting an int to an\nInteger and a double to a Double.",
      "comments": [],
      "ancestorIds": [
        "29932C09E81E440DB6042ADE69158CE8",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "29932C09E81E440DB6042ADE69158CE8"
    },
    "6742B6AEDCFC4E18BD19421ED6D9CD1A": {
      "id": "6742B6AEDCFC4E18BD19421ED6D9CD1A",
      "asnIdentifier": null,
      "position": 105000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.1.F.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The following Double methods and\nconstructors—including what they do and\nwhen they are used—are part of the Java Quick\nReference:",
      "comments": [],
      "ancestorIds": [
        "29932C09E81E440DB6042ADE69158CE8",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "29932C09E81E440DB6042ADE69158CE8"
    },
    "B8D04AB47FF748CF9781B46D7D845A9A": {
      "id": "B8D04AB47FF748CF9781B46D7D845A9A",
      "asnIdentifier": null,
      "position": 104000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.1.F.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The following Integer methods and\nconstructors—including what they do and\nwhen they are used—are part of the Java Quick\nReference:",
      "comments": [],
      "ancestorIds": [
        "29932C09E81E440DB6042ADE69158CE8",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "29932C09E81E440DB6042ADE69158CE8"
    },
    "E8D03F4DB7A14C44B1390238446F19E0": {
      "id": "E8D03F4DB7A14C44B1390238446F19E0",
      "asnIdentifier": null,
      "position": 103000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.F.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The Integer class and Double class are\npart of the java.lang package.  ",
      "comments": [],
      "ancestorIds": [
        "29932C09E81E440DB6042ADE69158CE8",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "29932C09E81E440DB6042ADE69158CE8"
    },
    "29932C09E81E440DB6042ADE69158CE8": {
      "id": "29932C09E81E440DB6042ADE69158CE8",
      "asnIdentifier": null,
      "position": 102000,
      "depth": 3,
      "listId": "f",
      "statementNotation": "VAR.1.F",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For wrapper classes:\na. Create Integer objects.\nb. Call Integer methods.\nc. Create Double objects.\nd. Call Double methods",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "94CACB7BEA564CDBB950DB96CEEFFA6E": {
      "id": "94CACB7BEA564CDBB950DB96CEEFFA6E",
      "asnIdentifier": null,
      "position": 101000,
      "depth": 4,
      "listId": "1m",
      "statementNotation": "VAR.1.E.13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A string identical to the single element substring\nat position index can be created by calling\nsubstring(index, index + 1).",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "859D48697B4344138B711BC0873B04FA": {
      "id": "859D48697B4344138B711BC0873B04FA",
      "asnIdentifier": null,
      "position": 100000,
      "depth": 4,
      "listId": "1l",
      "statementNotation": "VAR.1.E.12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The following String methods and\nconstructors—including what they do and\nwhen they are used—are part of the Java\nQuick Reference",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "2079967ED54B4A79BAD0A96D228E82BE": {
      "id": "2079967ED54B4A79BAD0A96D228E82BE",
      "asnIdentifier": null,
      "position": 99000,
      "depth": 4,
      "listId": "1k",
      "statementNotation": "VAR.1.E.11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A String object can be concatenated with\nan object reference, which implicitly calls the\nreferenced object’s toString method.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "19720F340FAE44158DB60F572BA7EC53": {
      "id": "19720F340FAE44158DB60F572BA7EC53",
      "asnIdentifier": null,
      "position": 98000,
      "depth": 4,
      "listId": "1j",
      "statementNotation": "VAR.1.E.10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A String object has index values from\n0 to length – 1. Attempting to access\nindices outside this range will result in an\nIndexOutOfBoundsException.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "067D26AA0B4A4E0598E5A41BF27F5926": {
      "id": "067D26AA0B4A4E0598E5A41BF27F5926",
      "asnIdentifier": null,
      "position": 97000,
      "depth": 4,
      "listId": "1i",
      "statementNotation": "VAR.1.E.9",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The String class is part of the java.lang\npackage. Classes in the java.lang package\nare available by default.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "BB3E8534242346E5830D46472D7735DC": {
      "id": "BB3E8534242346E5830D46472D7735DC",
      "asnIdentifier": null,
      "position": 96000,
      "depth": 4,
      "listId": "1h",
      "statementNotation": "VAR.1.E.8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Classes in the APIs and libraries are grouped\ninto packages.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "FC4F393C11E549ACB5433820E3BE0A6C": {
      "id": "FC4F393C11E549ACB5433820E3BE0A6C",
      "asnIdentifier": null,
      "position": 95000,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "VAR.1.E.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Documentation for APIs and libraries are\nessential to understanding the attributes and\nbehaviors of an object of a class.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "1133E16FFFBC4CC7B1BBC6352E3776F0": {
      "id": "1133E16FFFBC4CC7B1BBC6352E3776F0",
      "asnIdentifier": null,
      "position": 94000,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "VAR.1.E.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Application program interfaces (APIs) and\nlibraries simplify complex programming tasks.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "6463993ED541490ABA8CD96DFA7EF76C": {
      "id": "6463993ED541490ABA8CD96DFA7EF76C",
      "asnIdentifier": null,
      "position": 93000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "VAR.1.E.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Escape sequences start with a \\ and have a\nspecial meaning in Java. Escape sequences\nused in this course include \\”, \\\\, and \\n. ",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "F8DD09DB2697481DB8C29D77B48B4CD5": {
      "id": "F8DD09DB2697481DB8C29D77B48B4CD5",
      "asnIdentifier": null,
      "position": 92000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.1.E.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Primitive values can be concatenated with\na String object. This causes implicit\nconversion of the values to String objects",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "64D1A542EED64FAFA160DD00D30505EC": {
      "id": "64D1A542EED64FAFA160DD00D30505EC",
      "asnIdentifier": null,
      "position": 91000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.1.E.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "String objects can be concatenated\nusing the + or += operator, resulting in a new\nString object.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "BC18B88A5DAD495CA03BE97A54F272EA": {
      "id": "BC18B88A5DAD495CA03BE97A54F272EA",
      "asnIdentifier": null,
      "position": 90000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.1.E.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "String objects are immutable, meaning\nthat String methods do not change the\nString object.",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "257D23BE320146CE9CA518D09FD7A3B3": {
      "id": "257D23BE320146CE9CA518D09FD7A3B3",
      "asnIdentifier": null,
      "position": 89000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.E.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "String objects can be created by using\nstring literals or by calling the String class\nconstructor",
      "comments": [],
      "ancestorIds": [
        "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E"
    },
    "6E3DB9DB7D6A4FE997ED7B317FBBEF1E": {
      "id": "6E3DB9DB7D6A4FE997ED7B317FBBEF1E",
      "asnIdentifier": null,
      "position": 88000,
      "depth": 3,
      "listId": "e",
      "statementNotation": "VAR.1.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For String class:\na. Create String objects.\nb. Call String methods",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "472BFA35BF4748AEB4A41B2BB1CD18BC": {
      "id": "472BFA35BF4748AEB4A41B2BB1CD18BC",
      "asnIdentifier": null,
      "position": 87000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.1.D.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The memory associated with a variable of a\nreference type holds an object reference value\nor, if there is no object, null. This value is the\nmemory address of the referenced object.",
      "comments": [],
      "ancestorIds": [
        "1F619131D001495988A97DAA0F2FE5F2",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1F619131D001495988A97DAA0F2FE5F2"
    },
    "A89F000FE662404DAF540E854284953B": {
      "id": "A89F000FE662404DAF540E854284953B",
      "asnIdentifier": null,
      "position": 86000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.D.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The keyword null is a special value used to\nindicate that a reference is not associated with\nany object. ",
      "comments": [],
      "ancestorIds": [
        "1F619131D001495988A97DAA0F2FE5F2",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1F619131D001495988A97DAA0F2FE5F2"
    },
    "1F619131D001495988A97DAA0F2FE5F2": {
      "id": "1F619131D001495988A97DAA0F2FE5F2",
      "asnIdentifier": null,
      "position": 85000,
      "depth": 3,
      "listId": "d",
      "statementNotation": "VAR.1.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define variables of the\ncorrect types to represent\nreference data.",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "B9ED3E7B2DCD4905A4F9758A43490AFE": {
      "id": "B9ED3E7B2DCD4905A4F9758A43490AFE",
      "asnIdentifier": null,
      "position": 84000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "VAR.1.C.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When a variable is declared final, its value\ncannot be changed once it is initialized. ",
      "comments": [],
      "ancestorIds": [
        "C859375E293C4640BCCA9ED3A03C6504",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "C859375E293C4640BCCA9ED3A03C6504"
    },
    "906011A2E827421BA7CEBD9347DAB7BA": {
      "id": "906011A2E827421BA7CEBD9347DAB7BA",
      "asnIdentifier": null,
      "position": 83000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.1.C.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The memory associated with a variable of a\nprimitive type holds an actual primitive value.",
      "comments": [],
      "ancestorIds": [
        "C859375E293C4640BCCA9ED3A03C6504",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "C859375E293C4640BCCA9ED3A03C6504"
    },
    "8DC4637692D546C7AA57466993080F6C": {
      "id": "8DC4637692D546C7AA57466993080F6C",
      "asnIdentifier": null,
      "position": 82000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.1.C.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Each variable has associated memory that is\nused to hold its value",
      "comments": [],
      "ancestorIds": [
        "C859375E293C4640BCCA9ED3A03C6504",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "C859375E293C4640BCCA9ED3A03C6504"
    },
    "6D12A095C47D4541BB0A4294EC7B7974": {
      "id": "6D12A095C47D4541BB0A4294EC7B7974",
      "asnIdentifier": null,
      "position": 81000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.C.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The three primitive data types used in this\ncourse are int, double, and boolean.",
      "comments": [],
      "ancestorIds": [
        "C859375E293C4640BCCA9ED3A03C6504",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "C859375E293C4640BCCA9ED3A03C6504"
    },
    "C859375E293C4640BCCA9ED3A03C6504": {
      "id": "C859375E293C4640BCCA9ED3A03C6504",
      "asnIdentifier": null,
      "position": 80000,
      "depth": 3,
      "listId": "c",
      "statementNotation": "VAR.1.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Declare variables of the\ncorrect types to represent\nprimitive data.",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "FD1BC07017DB4349A25E16281AC98BA3": {
      "id": "FD1BC07017DB4349A25E16281AC98BA3",
      "asnIdentifier": null,
      "position": 79000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "VAR.1.B.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The primitive data types used in this course\ndefine the set of operations for numbers and\nBoolean values. ",
      "comments": [],
      "ancestorIds": [
        "C200DB5B61E04DC9A3FAB4ACF636B6C2",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "C200DB5B61E04DC9A3FAB4ACF636B6C2"
    },
    "02457FC505DF4131975A50AC1509FBE2": {
      "id": "02457FC505DF4131975A50AC1509FBE2",
      "asnIdentifier": null,
      "position": 78000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "VAR.1.B.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data types can be categorized as either\nprimitive or reference.",
      "comments": [],
      "ancestorIds": [
        "C200DB5B61E04DC9A3FAB4ACF636B6C2",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "C200DB5B61E04DC9A3FAB4ACF636B6C2"
    },
    "3B6A1F7E2ED14474BF3AAF59FB809CC7": {
      "id": "3B6A1F7E2ED14474BF3AAF59FB809CC7",
      "asnIdentifier": null,
      "position": 77000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A type is a set of values (a domain) and a set of\noperations on them. ",
      "comments": [],
      "ancestorIds": [
        "C200DB5B61E04DC9A3FAB4ACF636B6C2",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "C200DB5B61E04DC9A3FAB4ACF636B6C2"
    },
    "C200DB5B61E04DC9A3FAB4ACF636B6C2": {
      "id": "C200DB5B61E04DC9A3FAB4ACF636B6C2",
      "asnIdentifier": null,
      "position": 76000,
      "depth": 3,
      "listId": "b",
      "statementNotation": "VAR.1.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify the most appropriate\ndata type category for a\nparticular specification.",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "B9CC82AF2FED4600B1269FABF29CF59A": {
      "id": "B9CC82AF2FED4600B1269FABF29CF59A",
      "asnIdentifier": null,
      "position": 75000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "VAR.1.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A string literal is enclosed in double quotes",
      "comments": [],
      "ancestorIds": [
        "67CD0CD4379B43EFB77304E6C341C735",
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "67CD0CD4379B43EFB77304E6C341C735"
    },
    "67CD0CD4379B43EFB77304E6C341C735": {
      "id": "67CD0CD4379B43EFB77304E6C341C735",
      "asnIdentifier": null,
      "position": 74000,
      "depth": 3,
      "listId": "a",
      "statementNotation": "VAR.1.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create string literals.",
      "comments": [],
      "ancestorIds": [
        "1090D40BBBE64F85B2E3A8F2A24023BE",
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "1090D40BBBE64F85B2E3A8F2A24023BE"
    },
    "1090D40BBBE64F85B2E3A8F2A24023BE": {
      "id": "1090D40BBBE64F85B2E3A8F2A24023BE",
      "asnIdentifier": null,
      "position": 73000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "VAR.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "To find specific solutions to generalizable problems, programmers include variables\nin their code so that the same algorithm runs using different input values.",
      "comments": [],
      "ancestorIds": [
        "B1CB00B4D64C4B1298E56F3C7DC600E6",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "B1CB00B4D64C4B1298E56F3C7DC600E6"
    },
    "B1CB00B4D64C4B1298E56F3C7DC600E6": {
      "id": "B1CB00B4D64C4B1298E56F3C7DC600E6",
      "asnIdentifier": null,
      "position": 72000,
      "depth": 1,
      "listId": "2",
      "statementNotation": "VAR",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Variables",
      "comments": [],
      "ancestorIds": [
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
    },
    "6C40E40A66FE432BBBC331B9092CF1AE": {
      "id": "6C40E40A66FE432BBBC331B9092CF1AE",
      "asnIdentifier": null,
      "position": 71035,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.3.E.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subclasses of Object often override the\nequals and toString methods with class specific implementations.",
      "comments": [],
      "ancestorIds": [
        "5A31798228234135951FC4503BDDC1AE",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5A31798228234135951FC4503BDDC1AE"
    },
    "076ADED1856742599357E7033359D475": {
      "id": "076ADED1856742599357E7033359D475",
      "asnIdentifier": null,
      "position": 71034,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.3.E.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The following Object class methods and\nconstructors—including what they do and\nwhen they are used—are part of the Java Quick\nReference:",
      "comments": [],
      "ancestorIds": [
        "5A31798228234135951FC4503BDDC1AE",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5A31798228234135951FC4503BDDC1AE"
    },
    "84081BBD4A984953AD460E9E53594810": {
      "id": "84081BBD4A984953AD460E9E53594810",
      "asnIdentifier": null,
      "position": 71033,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.3.E.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The Object class is part of the java.lang\npackage ",
      "comments": [],
      "ancestorIds": [
        "5A31798228234135951FC4503BDDC1AE",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5A31798228234135951FC4503BDDC1AE"
    },
    "6A5322108C1C48BF85E1C94E5E4F8CB8": {
      "id": "6A5322108C1C48BF85E1C94E5E4F8CB8",
      "asnIdentifier": null,
      "position": 71032,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.3.E.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The Object class is the superclass of all\nother classes in Java.",
      "comments": [],
      "ancestorIds": [
        "5A31798228234135951FC4503BDDC1AE",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5A31798228234135951FC4503BDDC1AE"
    },
    "5A31798228234135951FC4503BDDC1AE": {
      "id": "5A31798228234135951FC4503BDDC1AE",
      "asnIdentifier": null,
      "position": 71031,
      "depth": 3,
      "listId": "e",
      "statementNotation": "MOD.3.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Call Object class methods\nthrough inheritance. ",
      "comments": [],
      "ancestorIds": [
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8E0F934B2FC142D0938C9B9604C53D6B"
    },
    "F9AE9DD3639B43B9A7B2F60A2F932F6F": {
      "id": "F9AE9DD3639B43B9A7B2F60A2F932F6F",
      "asnIdentifier": null,
      "position": 71030,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.3.D.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "At run-time, the method in the actual object\ntype is executed for a non-static method call.",
      "comments": [],
      "ancestorIds": [
        "41CCC0DD03E44BF697318E564A5F00E4",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "41CCC0DD03E44BF697318E564A5F00E4"
    },
    "DD4FE05094D4497283A6791CBCA552B2": {
      "id": "DD4FE05094D4497283A6791CBCA552B2",
      "asnIdentifier": null,
      "position": 71029,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.3.D.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "At compile time, methods in or inherited by the\ndeclared type determine the correctness of a\nnon-static method call. ",
      "comments": [],
      "ancestorIds": [
        "41CCC0DD03E44BF697318E564A5F00E4",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "41CCC0DD03E44BF697318E564A5F00E4"
    },
    "21203EF1841F47E6A10165425E8D5479": {
      "id": "21203EF1841F47E6A10165425E8D5479",
      "asnIdentifier": null,
      "position": 71028,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.3.D.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Utilize the Object class through inheritance.",
      "comments": [],
      "ancestorIds": [
        "41CCC0DD03E44BF697318E564A5F00E4",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "41CCC0DD03E44BF697318E564A5F00E4"
    },
    "41CCC0DD03E44BF697318E564A5F00E4": {
      "id": "41CCC0DD03E44BF697318E564A5F00E4",
      "asnIdentifier": null,
      "position": 71027,
      "depth": 3,
      "listId": "d",
      "statementNotation": "MOD.3.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Call methods in an\ninheritance relationship.",
      "comments": [],
      "ancestorIds": [
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8E0F934B2FC142D0938C9B9604C53D6B"
    },
    "92EE30AEF6314D78BBEABBA8B6CD8AB5": {
      "id": "92EE30AEF6314D78BBEABBA8B6CD8AB5",
      "asnIdentifier": null,
      "position": 71026,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.3.C.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Declaring references of type T, when S is\na subclass of T, is useful in the following\ndeclarations:\n§ Formal method parameters\n§ arrays — T[] var ArrayList var ",
      "comments": [],
      "ancestorIds": [
        "73F59829BD454F7B90666F35FF9433D7",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "73F59829BD454F7B90666F35FF9433D7"
    },
    "ECE369FB1FF044DC96ECD85FE322BDF4": {
      "id": "ECE369FB1FF044DC96ECD85FE322BDF4",
      "asnIdentifier": null,
      "position": 71025,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.3.C.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "If S is a subclass of T, then a reference of type\nT can be used to refer to an object of type T\nor S. ",
      "comments": [],
      "ancestorIds": [
        "73F59829BD454F7B90666F35FF9433D7",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "73F59829BD454F7B90666F35FF9433D7"
    },
    "2F266DA3CFF64D2E8C153DEFE78633AC": {
      "id": "2F266DA3CFF64D2E8C153DEFE78633AC",
      "asnIdentifier": null,
      "position": 71024,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.3.C.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "If S is a subclass of T, then assigning an object\nof type S to a reference of type T facilitates\npolymorphism. ",
      "comments": [],
      "ancestorIds": [
        "73F59829BD454F7B90666F35FF9433D7",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "73F59829BD454F7B90666F35FF9433D7"
    },
    "CDD486D8DFB14D0BB02A3CD992F19A1A": {
      "id": "CDD486D8DFB14D0BB02A3CD992F19A1A",
      "asnIdentifier": null,
      "position": 71023,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.3.C.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When a class S “is-a” class T, T is referred to as\na superclass, and S is referred to as a subclass.",
      "comments": [],
      "ancestorIds": [
        "73F59829BD454F7B90666F35FF9433D7",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "73F59829BD454F7B90666F35FF9433D7"
    },
    "73F59829BD454F7B90666F35FF9433D7": {
      "id": "73F59829BD454F7B90666F35FF9433D7",
      "asnIdentifier": null,
      "position": 71022,
      "depth": 3,
      "listId": "c",
      "statementNotation": "MOD.3.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define reference variables of\na superclass to be assigned\nto an object of a subclass in\nthe same hierarchy",
      "comments": [],
      "ancestorIds": [
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8E0F934B2FC142D0938C9B9604C53D6B"
    },
    "C9AA16E459E04D97AB22743C9AD385CA": {
      "id": "C9AA16E459E04D97AB22743C9AD385CA",
      "asnIdentifier": null,
      "position": 71021,
      "depth": 4,
      "listId": "1o",
      "statementNotation": "MOD.3.B.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The superclass method can be called in a\nsubclass by using the keyword super with\nthe method name and passing appropriate\nparameters.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "2F834141BFF74D8FBF076F52A0CBD193": {
      "id": "2F834141BFF74D8FBF076F52A0CBD193",
      "asnIdentifier": null,
      "position": 71020,
      "depth": 4,
      "listId": "1n",
      "statementNotation": "MOD.3.B.14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The keyword super can be used to call a\nsuperclass’s constructors and methods. ",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "21FE0A4820DB4549B202709A9834BD0B": {
      "id": "21FE0A4820DB4549B202709A9834BD0B",
      "asnIdentifier": null,
      "position": 71019,
      "depth": 4,
      "listId": "1m",
      "statementNotation": "MOD.3.B.13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A subclass will inherit all public methods from\nthe superclass; these methods remain public in\nthe subclass.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "271882BBB0F946609D49831BF71E8837": {
      "id": "271882BBB0F946609D49831BF71E8837",
      "asnIdentifier": null,
      "position": 71018,
      "depth": 4,
      "listId": "1l",
      "statementNotation": "MOD.3.B.12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A subclass is usually designed to have\nmodified (overridden) or additional methods or\ninstance variables.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "4BBC2CC8E7D14540AD6705B952464673": {
      "id": "4BBC2CC8E7D14540AD6705B952464673",
      "asnIdentifier": null,
      "position": 71017,
      "depth": 4,
      "listId": "1k",
      "statementNotation": "MOD.3.B.11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Any method that is called must be defined\nwithin its own class or its superclass. ",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "912159E98D5240AE8EDCFE69DE102F69": {
      "id": "912159E98D5240AE8EDCFE69DE102F69",
      "asnIdentifier": null,
      "position": 71016,
      "depth": 4,
      "listId": "1j",
      "statementNotation": "MOD.3.B.10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Method overriding occurs when a public\nmethod in a subclass has the same method\nsignature as a public method in the superclass.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "D407CABAFC324480996D7D67CB1576E3": {
      "id": "D407CABAFC324480996D7D67CB1576E3",
      "asnIdentifier": null,
      "position": 71015,
      "depth": 4,
      "listId": "1i",
      "statementNotation": "MOD.3.B.9",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Regardless of whether the superclass\nconstructor is called implicitly or explicitly, the\nprocess of calling superclass constructors\ncontinues until the Object constructor is\ncalled. At this point, all of the constructors\nwithin the hierarchy execute beginning with the\nObject constructor.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "89C9C937E1DD439C9FDCAF8B531EFE63": {
      "id": "89C9C937E1DD439C9FDCAF8B531EFE63",
      "asnIdentifier": null,
      "position": 71014,
      "depth": 4,
      "listId": "1h",
      "statementNotation": "MOD.3.B.8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When a subclass’s constructor does not\nexplicitly call a superclass’s constructor using\nsuper, Java inserts a call to the superclass’s\nno-argument constructor.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "25A2FD25AA624CBEA9EEFAFE38A37F81": {
      "id": "25A2FD25AA624CBEA9EEFAFE38A37F81",
      "asnIdentifier": null,
      "position": 71013,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "MOD.3.B.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The actual parameters passed in the call to the\nsuperclass constructor provide values that the\nconstructor can use to initialize the object’s\ninstance variables.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "820726A172FF45EDB674CA61971EA835": {
      "id": "820726A172FF45EDB674CA61971EA835",
      "asnIdentifier": null,
      "position": 71012,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "MOD.3.B.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The superclass constructor can be called from\nthe first line of a subclass constructor by using\nthe keyword super and passing appropriate\nparameters.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "3451BC95C6F0473FB9033BA869669BC9": {
      "id": "3451BC95C6F0473FB9033BA869669BC9",
      "asnIdentifier": null,
      "position": 71011,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.3.B.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Constructors are not inherited. ",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "AB5454597DE94A17920A1F37878289F9": {
      "id": "AB5454597DE94A17920A1F37878289F9",
      "asnIdentifier": null,
      "position": 71010,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.3.B.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The keyword extends is used to establish an\ninheritance relationship between a subclass\nand a superclass. A class can extend only\none superclass.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "2D5C1E1DD8984A8681451ADCA6CB4038": {
      "id": "2D5C1E1DD8984A8681451ADCA6CB4038",
      "asnIdentifier": null,
      "position": 71009,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.3.B.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Extending a subclass from a superclass\ncreates an “is-a” relationship from the subclass\nto the superclass. ",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "AF5519FD3CB04B178173FA43AE1535B5": {
      "id": "AF5519FD3CB04B178173FA43AE1535B5",
      "asnIdentifier": null,
      "position": 71008,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.3.B.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Classes that extend a superclass, called\nsubclasses, can draw upon the existing\nattributes and behaviors of the superclass\nwithout repeating these in the code.",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "47DD832625734082954C2EAFF5609FB4": {
      "id": "47DD832625734082954C2EAFF5609FB4",
      "asnIdentifier": null,
      "position": 71007,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.3.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A class hierarchy can be developed by putting\ncommon attributes and behaviors of related\nclasses into a single class called a superclass. ",
      "comments": [],
      "ancestorIds": [
        "9A0328532DA34DE5A338857AD2B98D6B",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "9A0328532DA34DE5A338857AD2B98D6B"
    },
    "9A0328532DA34DE5A338857AD2B98D6B": {
      "id": "9A0328532DA34DE5A338857AD2B98D6B",
      "asnIdentifier": null,
      "position": 71006,
      "depth": 3,
      "listId": "b",
      "statementNotation": "MOD.3.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create an inheritance\nrelationship from a subclass\nto the superclass.",
      "comments": [],
      "ancestorIds": [
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8E0F934B2FC142D0938C9B9604C53D6B"
    },
    "F2C417A74DA7425482773FBE2D7E8211": {
      "id": "F2C417A74DA7425482773FBE2D7E8211",
      "asnIdentifier": null,
      "position": 71005,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.3.A.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The provided accessor and mutator methods\nin a class allow client code to use and\nmodify data. ",
      "comments": [],
      "ancestorIds": [
        "5FB10848E2F849FE9CBB70AB686E7407",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5FB10848E2F849FE9CBB70AB686E7407"
    },
    "6205944DF5AC4EDF81FA3C4EB4B64BB1": {
      "id": "6205944DF5AC4EDF81FA3C4EB4B64BB1",
      "asnIdentifier": null,
      "position": 71004,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.3.A.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Instance variables are encapsulated by using\nthe private access modifier.",
      "comments": [],
      "ancestorIds": [
        "5FB10848E2F849FE9CBB70AB686E7407",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5FB10848E2F849FE9CBB70AB686E7407"
    },
    "A44ACE27B4DB473783D279634A33DA00": {
      "id": "A44ACE27B4DB473783D279634A33DA00",
      "asnIdentifier": null,
      "position": 71003,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.3.A.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When designing a class, programmers make\ndecisions about what data to make accessible\nand modifiable from an external class. Data can\nbe either accessible or modifiable, or it can be\nboth or neither",
      "comments": [],
      "ancestorIds": [
        "5FB10848E2F849FE9CBB70AB686E7407",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5FB10848E2F849FE9CBB70AB686E7407"
    },
    "B1D93FC4AEB840DF9353E0591F35E8CB": {
      "id": "B1D93FC4AEB840DF9353E0591F35E8CB",
      "asnIdentifier": null,
      "position": 71002,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.3.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data encapsulation is a technique in which\nthe implementation details of a class are kept\nhidden from the user. ",
      "comments": [],
      "ancestorIds": [
        "5FB10848E2F849FE9CBB70AB686E7407",
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "5FB10848E2F849FE9CBB70AB686E7407"
    },
    "5FB10848E2F849FE9CBB70AB686E7407": {
      "id": "5FB10848E2F849FE9CBB70AB686E7407",
      "asnIdentifier": null,
      "position": 71001,
      "depth": 3,
      "listId": "a",
      "statementNotation": "MOD.3.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Designate private visibility\nof instance variables to\nencapsulate the attributes of\nan object.",
      "comments": [],
      "ancestorIds": [
        "8E0F934B2FC142D0938C9B9604C53D6B",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "8E0F934B2FC142D0938C9B9604C53D6B"
    },
    "8E0F934B2FC142D0938C9B9604C53D6B": {
      "id": "8E0F934B2FC142D0938C9B9604C53D6B",
      "asnIdentifier": null,
      "position": 71000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "MOD.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When multiple classes contain common attributes and behaviors, programmers\ncreate a new class containing the shared attributes and behaviors forming a\nhierarchy. Modifications made at the highest level of the hierarchy apply to the\nsubclasses.",
      "comments": [],
      "ancestorIds": [
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "25CE91707FB34B9B8A74E0BA08198E2B"
    },
    "8269A758BB9B462E8680C6D8E62574B8": {
      "id": "8269A758BB9B462E8680C6D8E62574B8",
      "asnIdentifier": null,
      "position": 70040,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.2.H.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static variables are used with the class name\nand the dot operator, since they are associated\nwith a class, not objects of a class.",
      "comments": [],
      "ancestorIds": [
        "44CDF6F6F8594A80BEA8849B2981F3AA",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "44CDF6F6F8594A80BEA8849B2981F3AA"
    },
    "18695E28059E421D8DCDCEC3BB14E085": {
      "id": "18695E28059E421D8DCDCEC3BB14E085",
      "asnIdentifier": null,
      "position": 70039,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.H.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static variables can be designated as either\npublic or private and are designated with\nthe static keyword before the variable type.",
      "comments": [],
      "ancestorIds": [
        "44CDF6F6F8594A80BEA8849B2981F3AA",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "44CDF6F6F8594A80BEA8849B2981F3AA"
    },
    "F5B7950689F14147A57C2EB9E2965554": {
      "id": "F5B7950689F14147A57C2EB9E2965554",
      "asnIdentifier": null,
      "position": 70038,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.H.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static variables belong to the class, with\nall objects of a class sharing a single\nstatic variable.",
      "comments": [],
      "ancestorIds": [
        "44CDF6F6F8594A80BEA8849B2981F3AA",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "44CDF6F6F8594A80BEA8849B2981F3AA"
    },
    "44CDF6F6F8594A80BEA8849B2981F3AA": {
      "id": "44CDF6F6F8594A80BEA8849B2981F3AA",
      "asnIdentifier": null,
      "position": 70037,
      "depth": 3,
      "listId": "h",
      "statementNotation": "MOD.2.H",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define the static variables\nthat belong to the class.",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "86F42E7E356D48ABBAF52DE1FED92AB4": {
      "id": "86F42E7E356D48ABBAF52DE1FED92AB4",
      "asnIdentifier": null,
      "position": 70036,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.2.G.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static methods do not have a this reference\nand are unable to use the class’s instance\nvariables or call non-static methods.",
      "comments": [],
      "ancestorIds": [
        "A0AB1215AAC040D1B81CB518B9935191",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A0AB1215AAC040D1B81CB518B9935191"
    },
    "B2B07BDC98944BFFADDE78EF66FB65BE": {
      "id": "B2B07BDC98944BFFADDE78EF66FB65BE",
      "asnIdentifier": null,
      "position": 70035,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.2.G.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static methods can access or change the\nvalues of static variables.",
      "comments": [],
      "ancestorIds": [
        "A0AB1215AAC040D1B81CB518B9935191",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A0AB1215AAC040D1B81CB518B9935191"
    },
    "D4EE4F1333DE4547BE91989B20CA62D7": {
      "id": "D4EE4F1333DE4547BE91989B20CA62D7",
      "asnIdentifier": null,
      "position": 70034,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.2.G.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static methods cannot access or change the\nvalues of instance variables.",
      "comments": [],
      "ancestorIds": [
        "A0AB1215AAC040D1B81CB518B9935191",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A0AB1215AAC040D1B81CB518B9935191"
    },
    "B2846641E6F74C0E9C84461651670D08": {
      "id": "B2846641E6F74C0E9C84461651670D08",
      "asnIdentifier": null,
      "position": 70033,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.G.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static methods include the keyword static\nin the header before the method name.",
      "comments": [],
      "ancestorIds": [
        "A0AB1215AAC040D1B81CB518B9935191",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A0AB1215AAC040D1B81CB518B9935191"
    },
    "84AD167F3DEA45CA8ECD8147139F3371": {
      "id": "84AD167F3DEA45CA8ECD8147139F3371",
      "asnIdentifier": null,
      "position": 70032,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.G.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static methods are associated with the class,\nnot objects of the class.",
      "comments": [],
      "ancestorIds": [
        "A0AB1215AAC040D1B81CB518B9935191",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A0AB1215AAC040D1B81CB518B9935191"
    },
    "A0AB1215AAC040D1B81CB518B9935191": {
      "id": "A0AB1215AAC040D1B81CB518B9935191",
      "asnIdentifier": null,
      "position": 70031,
      "depth": 3,
      "listId": "g",
      "statementNotation": "MOD.2.G",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define behaviors of a class\nthrough static methods.",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "153142329D3047E1BAC4071A1D11D950": {
      "id": "153142329D3047E1BAC4071A1D11D950",
      "asnIdentifier": null,
      "position": 70030,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "MOD.2.F.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Passing a reference parameter results in the\nformal parameter and the actual parameter\nbeing aliases. They both refer to the same\nobject.",
      "comments": [],
      "ancestorIds": [
        "A9CC566042D44CAEA36859498E38D6B9",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9CC566042D44CAEA36859498E38D6B9"
    },
    "D18C5E6EF8424CE1B095A4B2468F255E": {
      "id": "D18C5E6EF8424CE1B095A4B2468F255E",
      "asnIdentifier": null,
      "position": 70029,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.2.F.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When an actual parameter is a reference to an\nobject, the formal parameter is initialized with a\ncopy of that reference, not a copy of the object.\nIf the reference is to a mutable object, the\nmethod or constructor can use this reference\nto alter the state of the object.",
      "comments": [],
      "ancestorIds": [
        "A9CC566042D44CAEA36859498E38D6B9",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9CC566042D44CAEA36859498E38D6B9"
    },
    "BA5700351EEE444B80A57E88910FF869": {
      "id": "BA5700351EEE444B80A57E88910FF869",
      "asnIdentifier": null,
      "position": 70028,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.2.F.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When an actual parameter is a primitive value,\nthe formal parameter is initialized with a copy\nof that value. Changes to the formal parameter\nhave no effect on the corresponding actual\nparameter.",
      "comments": [],
      "ancestorIds": [
        "A9CC566042D44CAEA36859498E38D6B9",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9CC566042D44CAEA36859498E38D6B9"
    },
    "956A3AFBABA748E480CB5383193D883F": {
      "id": "956A3AFBABA748E480CB5383193D883F",
      "asnIdentifier": null,
      "position": 70027,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.2.F.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "It is good programming practice to not modify\nmutable objects that are passed as parameters\nunless required in the specification. ",
      "comments": [],
      "ancestorIds": [
        "A9CC566042D44CAEA36859498E38D6B9",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9CC566042D44CAEA36859498E38D6B9"
    },
    "D2F83B4998A64B5A97C0590DD0B34361": {
      "id": "D2F83B4998A64B5A97C0590DD0B34361",
      "asnIdentifier": null,
      "position": 70026,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.F.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Non-void methods with parameters receive\nvalues through parameters, use those values,\nand return a computed value of the specified\ntype. ",
      "comments": [],
      "ancestorIds": [
        "A9CC566042D44CAEA36859498E38D6B9",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9CC566042D44CAEA36859498E38D6B9"
    },
    "36E08660ECA14FC6956DA8986AD26750": {
      "id": "36E08660ECA14FC6956DA8986AD26750",
      "asnIdentifier": null,
      "position": 70025,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.F.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Methods can only access the private data and\nmethods of a parameter that is a reference to\nan object when the parameter is the same type\nas the method’s enclosing class.",
      "comments": [],
      "ancestorIds": [
        "A9CC566042D44CAEA36859498E38D6B9",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "A9CC566042D44CAEA36859498E38D6B9"
    },
    "A9CC566042D44CAEA36859498E38D6B9": {
      "id": "A9CC566042D44CAEA36859498E38D6B9",
      "asnIdentifier": null,
      "position": 70024,
      "depth": 3,
      "listId": "f",
      "statementNotation": "MOD.2.F",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define behaviors of an object\nthrough non-void methods\nwith parameters written\nin a class. ",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "B45F49A459DA427CAD62A787B0FF48AF": {
      "id": "B45F49A459DA427CAD62A787B0FF48AF",
      "asnIdentifier": null,
      "position": 70023,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.E.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A mutator (modifier) method is often a void\nmethod that changes the values of instance\nvariables or static variables. ",
      "comments": [],
      "ancestorIds": [
        "BF8B811939224FBD89D01741749D9D59",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "BF8B811939224FBD89D01741749D9D59"
    },
    "7E2A1BE520054F4CAFDF8AB1070CB7BE": {
      "id": "7E2A1BE520054F4CAFDF8AB1070CB7BE",
      "asnIdentifier": null,
      "position": 70022,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.E.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A void method does not return a value. Its\nheader contains the keyword void before the\nmethod name.",
      "comments": [],
      "ancestorIds": [
        "BF8B811939224FBD89D01741749D9D59",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "BF8B811939224FBD89D01741749D9D59"
    },
    "BF8B811939224FBD89D01741749D9D59": {
      "id": "BF8B811939224FBD89D01741749D9D59",
      "asnIdentifier": null,
      "position": 70021,
      "depth": 3,
      "listId": "e",
      "statementNotation": "MOD.2.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define behaviors of an object\nthrough void methods with\nor without parameters written\nin a class.",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "2F2522448F49454E9C23D0577024B414": {
      "id": "2F2522448F49454E9C23D0577024B414",
      "asnIdentifier": null,
      "position": 70020,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "MOD.2.D.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "If System.out.print or System.out.\nprintln is passed an object, that object’s\ntoString method is called, and the returned\nstring is printed.",
      "comments": [],
      "ancestorIds": [
        "0DFE6A97D6C64A47BB31E63AFBEB4320",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "0DFE6A97D6C64A47BB31E63AFBEB4320"
    },
    "2DDE8FEF6CA44558B14FAE5200A63373": {
      "id": "2DDE8FEF6CA44558B14FAE5200A63373",
      "asnIdentifier": null,
      "position": 70019,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "MOD.2.D.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The toString method is an overridden\nmethod that is included in classes to provide\na description of a specific object. It generally\nincludes what values are stored in the instance\ndata of the object. ",
      "comments": [],
      "ancestorIds": [
        "0DFE6A97D6C64A47BB31E63AFBEB4320",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "0DFE6A97D6C64A47BB31E63AFBEB4320"
    },
    "0B20D4461B194D0784FEB46005C1F625": {
      "id": "0B20D4461B194D0784FEB46005C1F625",
      "asnIdentifier": null,
      "position": 70018,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.2.D.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The return keyword is used to return the flow\nof control to the point immediately following\nwhere the method or constructor was called.",
      "comments": [],
      "ancestorIds": [
        "0DFE6A97D6C64A47BB31E63AFBEB4320",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "0DFE6A97D6C64A47BB31E63AFBEB4320"
    },
    "3B75FE8A17C244AFBD1BD3E50E1C571A": {
      "id": "3B75FE8A17C244AFBD1BD3E50E1C571A",
      "asnIdentifier": null,
      "position": 70017,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.2.D.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When the return expression is a reference to an\nobject, a copy of that reference is returned, not\na copy of the object.",
      "comments": [],
      "ancestorIds": [
        "0DFE6A97D6C64A47BB31E63AFBEB4320",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "0DFE6A97D6C64A47BB31E63AFBEB4320"
    },
    "C01D0ABFA6024CE4BA5753A8B2B9634A": {
      "id": "C01D0ABFA6024CE4BA5753A8B2B9634A",
      "asnIdentifier": null,
      "position": 70016,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.2.D.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "In non-void methods, a return expression\ncompatible with the return type is evaluated,\nand a copy of that value is returned. This is\nreferred to as “return by value.” ",
      "comments": [],
      "ancestorIds": [
        "0DFE6A97D6C64A47BB31E63AFBEB4320",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "0DFE6A97D6C64A47BB31E63AFBEB4320"
    },
    "DC04744E842C4BB9B61AF2DC654310B6": {
      "id": "DC04744E842C4BB9B61AF2DC654310B6",
      "asnIdentifier": null,
      "position": 70015,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.D.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A non-void method returns a single value. Its\nheader includes the return type in place of the\nkeyword void.",
      "comments": [],
      "ancestorIds": [
        "0DFE6A97D6C64A47BB31E63AFBEB4320",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "0DFE6A97D6C64A47BB31E63AFBEB4320"
    },
    "30AF323166E64898983A71E65E50D849": {
      "id": "30AF323166E64898983A71E65E50D849",
      "asnIdentifier": null,
      "position": 70014,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.D.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An accessor method allows other objects to\nobtain the value of instance variables or static\nvariables. ",
      "comments": [],
      "ancestorIds": [
        "0DFE6A97D6C64A47BB31E63AFBEB4320",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "0DFE6A97D6C64A47BB31E63AFBEB4320"
    },
    "0DFE6A97D6C64A47BB31E63AFBEB4320": {
      "id": "0DFE6A97D6C64A47BB31E63AFBEB4320",
      "asnIdentifier": null,
      "position": 70013,
      "depth": 3,
      "listId": "d",
      "statementNotation": "MOD.2.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define behaviors of an object\nthrough non-void methods\nwithout parameters written in\na class.",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "406A611271A84AB685770158292DEFC7": {
      "id": "406A611271A84AB685770158292DEFC7",
      "asnIdentifier": null,
      "position": 70012,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.2.C.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Programmers write method code to satisfy the\npostconditions when preconditions are met.",
      "comments": [],
      "ancestorIds": [
        "FD58808CC7C246DFA18ED75886667213",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FD58808CC7C246DFA18ED75886667213"
    },
    "5994ACE6CAB74BE3A3BCFD6A94630F5E": {
      "id": "5994ACE6CAB74BE3A3BCFD6A94630F5E",
      "asnIdentifier": null,
      "position": 70011,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.2.C.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A postcondition is a condition that must always\nbe true after the execution of a section of\nprogram code. Postconditions describe the\noutcome of the execution in terms of what is\nbeing returned or the state of an object. ",
      "comments": [],
      "ancestorIds": [
        "FD58808CC7C246DFA18ED75886667213",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FD58808CC7C246DFA18ED75886667213"
    },
    "D9B109D8EE534686BF497ACB7F760C91": {
      "id": "D9B109D8EE534686BF497ACB7F760C91",
      "asnIdentifier": null,
      "position": 70010,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.2.C.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A precondition is a condition that must be\ntrue just prior to the execution of a section\nof program code in order for the method to\nbehave as expected. There is no expectation\nthat the method will check to ensure\npreconditions are satisfied.",
      "comments": [],
      "ancestorIds": [
        "FD58808CC7C246DFA18ED75886667213",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FD58808CC7C246DFA18ED75886667213"
    },
    "C1D49A920B2F4434BFFE634A660F118B": {
      "id": "C1D49A920B2F4434BFFE634A660F118B",
      "asnIdentifier": null,
      "position": 70009,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.C.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Three types of comments in Java include\n/* */, which generates a block of comments,\n//, which generates a comment on one line,\nand /** */, which are Javadoc comments\nand are used to create API documentation.",
      "comments": [],
      "ancestorIds": [
        "FD58808CC7C246DFA18ED75886667213",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FD58808CC7C246DFA18ED75886667213"
    },
    "7E0315C78E964DD6934371883AF12173": {
      "id": "7E0315C78E964DD6934371883AF12173",
      "asnIdentifier": null,
      "position": 70008,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.C.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Comments are ignored by the compiler and are\nnot executed when the program is run.",
      "comments": [],
      "ancestorIds": [
        "FD58808CC7C246DFA18ED75886667213",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "FD58808CC7C246DFA18ED75886667213"
    },
    "FD58808CC7C246DFA18ED75886667213": {
      "id": "FD58808CC7C246DFA18ED75886667213",
      "asnIdentifier": null,
      "position": 70007,
      "depth": 3,
      "listId": "c",
      "statementNotation": "MOD.2.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe the functionality\nand use of program code\nthrough comments.",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "295BBBCEF488448480BA776B5A3CED10": {
      "id": "295BBBCEF488448480BA776B5A3CED10",
      "asnIdentifier": null,
      "position": 70006,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.2.B.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When no constructor is written, Java provides\na no-argument constructor, and the instance\nvariables are set to default values.",
      "comments": [],
      "ancestorIds": [
        "6BDE39C0F5E5419EA816CD6D5CF63BD3",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6BDE39C0F5E5419EA816CD6D5CF63BD3"
    },
    "D2F4C94205F04E8B88B511AF0630B248": {
      "id": "D2F4C94205F04E8B88B511AF0630B248",
      "asnIdentifier": null,
      "position": 70005,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.2.B.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "When a mutable object is a constructor\nparameter, the instance variable should be\ninitialized with a copy of the referenced object.\nIn this way, the instance variable is not an\nalias of the original object, and methods are\nprevented from modifying the state of the\noriginal object.",
      "comments": [],
      "ancestorIds": [
        "6BDE39C0F5E5419EA816CD6D5CF63BD3",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6BDE39C0F5E5419EA816CD6D5CF63BD3"
    },
    "877709E6C55B4D48A6AB6848B39A3268": {
      "id": "877709E6C55B4D48A6AB6848B39A3268",
      "asnIdentifier": null,
      "position": 70004,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.2.B.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Constructor parameters are local variables to\nthe constructor and provide data to initialize\ninstance variables. ",
      "comments": [],
      "ancestorIds": [
        "6BDE39C0F5E5419EA816CD6D5CF63BD3",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6BDE39C0F5E5419EA816CD6D5CF63BD3"
    },
    "E67AD1B425D3428CA68CCEA91E87960C": {
      "id": "E67AD1B425D3428CA68CCEA91E87960C",
      "asnIdentifier": null,
      "position": 70003,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.B.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Constructors are used to set the initial state of\nan object, which should include initial values for\nall instance variables.",
      "comments": [],
      "ancestorIds": [
        "6BDE39C0F5E5419EA816CD6D5CF63BD3",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6BDE39C0F5E5419EA816CD6D5CF63BD3"
    },
    "018DC529C4DD4A81A375DFEE723E21C0": {
      "id": "018DC529C4DD4A81A375DFEE723E21C0",
      "asnIdentifier": null,
      "position": 70002,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An object’s state refers to its attributes and\ntheir values at a given time and is defined by\ninstance variables belonging to the object.\nThis creates a “has-a” relationship between the\nobject and its instance variables",
      "comments": [],
      "ancestorIds": [
        "6BDE39C0F5E5419EA816CD6D5CF63BD3",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "6BDE39C0F5E5419EA816CD6D5CF63BD3"
    },
    "6BDE39C0F5E5419EA816CD6D5CF63BD3": {
      "id": "6BDE39C0F5E5419EA816CD6D5CF63BD3",
      "asnIdentifier": null,
      "position": 70001,
      "depth": 3,
      "listId": "b",
      "statementNotation": "MOD.2.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define instance variables for\nthe attributes to be initialized\nthrough the constructors of\na class.",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "F917A265696B4C9990426DD8D0C595CE": {
      "id": "F917A265696B4C9990426DD8D0C595CE",
      "asnIdentifier": null,
      "position": 70000,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "MOD.2.A.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Access to behaviors can be internal or external\nto the class. Therefore, methods can be\ndesignated as either public or private.",
      "comments": [],
      "ancestorIds": [
        "18A3BD61822740A49386C00FEF60933F",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "18A3BD61822740A49386C00FEF60933F"
    },
    "F01C7CBC07BE4B5FB2175697188E35B8": {
      "id": "F01C7CBC07BE4B5FB2175697188E35B8",
      "asnIdentifier": null,
      "position": 69000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.2.A.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Constructors are designated public. ",
      "comments": [],
      "ancestorIds": [
        "18A3BD61822740A49386C00FEF60933F",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "18A3BD61822740A49386C00FEF60933F"
    },
    "2BC38A0D242642F69A0EA049409B0D20": {
      "id": "2BC38A0D242642F69A0EA049409B0D20",
      "asnIdentifier": null,
      "position": 68000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.2.A.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Access to attributes should be kept internal\nto the class. Therefore, instance variables are\ndesignated as private.",
      "comments": [],
      "ancestorIds": [
        "18A3BD61822740A49386C00FEF60933F",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "18A3BD61822740A49386C00FEF60933F"
    },
    "FA8D617C40D14CF6842CA66E5E4A89EA": {
      "id": "FA8D617C40D14CF6842CA66E5E4A89EA",
      "asnIdentifier": null,
      "position": 67000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.2.A.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Classes are designated public. ",
      "comments": [],
      "ancestorIds": [
        "18A3BD61822740A49386C00FEF60933F",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "18A3BD61822740A49386C00FEF60933F"
    },
    "0D6469DF50C04248894ED93C20477D97": {
      "id": "0D6469DF50C04248894ED93C20477D97",
      "asnIdentifier": null,
      "position": 66000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.2.A.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The keyword private restricts access to the\ndeclaring class, while the keyword public\nallows access from classes outside the\ndeclaring class. ",
      "comments": [],
      "ancestorIds": [
        "18A3BD61822740A49386C00FEF60933F",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "18A3BD61822740A49386C00FEF60933F"
    },
    "1E8860B965C74168969606709F2E2995": {
      "id": "1E8860B965C74168969606709F2E2995",
      "asnIdentifier": null,
      "position": 65000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.2.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The keywords public and private affect\nthe access of classes, data, constructors, and\nmethods.",
      "comments": [],
      "ancestorIds": [
        "18A3BD61822740A49386C00FEF60933F",
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "18A3BD61822740A49386C00FEF60933F"
    },
    "18A3BD61822740A49386C00FEF60933F": {
      "id": "18A3BD61822740A49386C00FEF60933F",
      "asnIdentifier": null,
      "position": 64000,
      "depth": 3,
      "listId": "a",
      "statementNotation": "MOD.2.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Designate access and\nvisibility constraints to\nclasses, data, constructors,\nand methods.",
      "comments": [],
      "ancestorIds": [
        "246315DFF9FB4A91B8733A30AD803D8C",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "246315DFF9FB4A91B8733A30AD803D8C"
    },
    "246315DFF9FB4A91B8733A30AD803D8C": {
      "id": "246315DFF9FB4A91B8733A30AD803D8C",
      "asnIdentifier": null,
      "position": 63000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "MOD.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Programmers use code to represent a physical object or nonphysical concept, real\nor imagined, by defining a class based on the attributes and/or behaviors of the\nobject or concept.",
      "comments": [],
      "ancestorIds": [
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "25CE91707FB34B9B8A74E0BA08198E2B"
    },
    "76A77F5E45F04FB6B39BFCFB5A897EE4": {
      "id": "76A77F5E45F04FB6B39BFCFB5A897EE4",
      "asnIdentifier": null,
      "position": 62000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.H.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Static methods are called using the dot\noperator along with the class name unless they\nare defined in the enclosing class.",
      "comments": [],
      "ancestorIds": [
        "F2A3A643FEF84E4986A1C86520B01A50",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "F2A3A643FEF84E4986A1C86520B01A50"
    },
    "F2A3A643FEF84E4986A1C86520B01A50": {
      "id": "F2A3A643FEF84E4986A1C86520B01A50",
      "asnIdentifier": null,
      "position": 61000,
      "depth": 3,
      "listId": "h",
      "statementNotation": "MOD.1.H",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Call static methods",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "CBEEE04F95804D07BE8A079508695EF2": {
      "id": "CBEEE04F95804D07BE8A079508695EF2",
      "asnIdentifier": null,
      "position": 60000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.1.G.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Non-void methods return a value that is the\nsame type as the return type in the signature.\nTo use the return value when calling a non-void\nmethod, it must be stored in a variable or used\nas part of an expression.",
      "comments": [],
      "ancestorIds": [
        "166469FEB30848A09D5BF4D040292279",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "166469FEB30848A09D5BF4D040292279"
    },
    "166469FEB30848A09D5BF4D040292279": {
      "id": "166469FEB30848A09D5BF4D040292279",
      "asnIdentifier": null,
      "position": 59000,
      "depth": 3,
      "listId": "g",
      "statementNotation": "MOD.1.G",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Call non-static non-void\nmethods with or without\nparameters.",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "599E4527433144659F5C9E04D6C9A34A": {
      "id": "599E4527433144659F5C9E04D6C9A34A",
      "asnIdentifier": null,
      "position": 58000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.1.F.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Methods are said to be overloaded when there\nare multiple methods with the same name but a\ndifferent signature.",
      "comments": [],
      "ancestorIds": [
        "CD7A4B9128DF4786920EAA0B45AEE7C2",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "CD7A4B9128DF4786920EAA0B45AEE7C2"
    },
    "59F1F30FEDEE440F83129BEF094A30CA": {
      "id": "59F1F30FEDEE440F83129BEF094A30CA",
      "asnIdentifier": null,
      "position": 57000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.1.F.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Values provided in the parameter list need\nto correspond to the order and type in the\nmethod signature. ",
      "comments": [],
      "ancestorIds": [
        "CD7A4B9128DF4786920EAA0B45AEE7C2",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "CD7A4B9128DF4786920EAA0B45AEE7C2"
    },
    "3B33394415C3482FB64C7E446167D581": {
      "id": "3B33394415C3482FB64C7E446167D581",
      "asnIdentifier": null,
      "position": 56000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.1.F.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A method signature for a method with\nparameters consists of the method name and\nthe ordered list of parameter types. ",
      "comments": [],
      "ancestorIds": [
        "CD7A4B9128DF4786920EAA0B45AEE7C2",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "CD7A4B9128DF4786920EAA0B45AEE7C2"
    },
    "CD7A4B9128DF4786920EAA0B45AEE7C2": {
      "id": "CD7A4B9128DF4786920EAA0B45AEE7C2",
      "asnIdentifier": null,
      "position": 55000,
      "depth": 3,
      "listId": "f",
      "statementNotation": "MOD.1.F",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Call non-static void methods\nwith parameters.",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "205BA340CF6D4CEFBB69F35A62A498DC": {
      "id": "205BA340CF6D4CEFBB69F35A62A498DC",
      "asnIdentifier": null,
      "position": 54000,
      "depth": 4,
      "listId": "1h",
      "statementNotation": "MOD.1.E.8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Using a null reference to call a method\nor access an instance variable causes a\nNullPointerException to be thrown.",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "804E27EE3C2144DBB9B3D869EEED285C": {
      "id": "804E27EE3C2144DBB9B3D869EEED285C",
      "asnIdentifier": null,
      "position": 53000,
      "depth": 4,
      "listId": "1g",
      "statementNotation": "MOD.1.E.7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Void methods do not have return values\nand are therefore not called as part of an\nexpression.",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "1FC65A77C76043D9922B338B63E241EF": {
      "id": "1FC65A77C76043D9922B338B63E241EF",
      "asnIdentifier": null,
      "position": 52000,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "MOD.1.E.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The dot operator is used along with the object\nname to call non-static methods.",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "B9574079565C44B58F5D2D6C07D23A1D": {
      "id": "B9574079565C44B58F5D2D6C07D23A1D",
      "asnIdentifier": null,
      "position": 51000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.1.E.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Non-static methods are called through objects\nof the class.",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "EA86F981CDA3450BBBE3A9AB2B846711": {
      "id": "EA86F981CDA3450BBBE3A9AB2B846711",
      "asnIdentifier": null,
      "position": 50000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.1.E.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A method or constructor call interrupts the\nsequential execution of statements, causing\nthe program to first execute the statements in\nthe method or constructor before continuing.\nOnce the last statement in the method or\nconstructor has executed or a return statement\nis executed, flow of control is returned to the\npoint immediately following where the method\nor constructor was called. ",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "C66B6F3A697A4C3FB6056B19F1CC46F3": {
      "id": "C66B6F3A697A4C3FB6056B19F1CC46F3",
      "asnIdentifier": null,
      "position": 49000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.1.E.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A method signature for a method without\nparameters consists of the method name and\nan empty parameter list. ",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "8C1069C6008A4042A31D97D64C3167D5": {
      "id": "8C1069C6008A4042A31D97D64C3167D5",
      "asnIdentifier": null,
      "position": 48000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.1.E.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Procedural abstraction allows a programmer\nto use a method by knowing what the method\ndoes even if they do not know how the method\nwas written.",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "9133F6E004444D3284480FAFE2D842DD": {
      "id": "9133F6E004444D3284480FAFE2D842DD",
      "asnIdentifier": null,
      "position": 47000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.1.E.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An object’s behavior refers to what the object\ncan do (or what can be done to it) and is\ndefined by methods.",
      "comments": [],
      "ancestorIds": [
        "021C4B9B8A9342B68896A4D83CFE55FD",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "021C4B9B8A9342B68896A4D83CFE55FD"
    },
    "021C4B9B8A9342B68896A4D83CFE55FD": {
      "id": "021C4B9B8A9342B68896A4D83CFE55FD",
      "asnIdentifier": null,
      "position": 46000,
      "depth": 3,
      "listId": "e",
      "statementNotation": "MOD.1.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Call non-static void methods\nwithout parameters.",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "329CAAA3B4E641F590853A51E85ECBF4": {
      "id": "329CAAA3B4E641F590853A51E85ECBF4",
      "asnIdentifier": null,
      "position": 45000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.1.D.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Parameters allow values to be passed to\nthe constructor to establish the initial state\nof the object.",
      "comments": [],
      "ancestorIds": [
        "CCEB9C9C8DF640F380692DFB9B9E2109",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "CCEB9C9C8DF640F380692DFB9B9E2109"
    },
    "A3FAEAE49CA54AA58D9E22A5B915BB1E": {
      "id": "A3FAEAE49CA54AA58D9E22A5B915BB1E",
      "asnIdentifier": null,
      "position": 44000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.1.D.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Existing classes and class libraries can be\nutilized as appropriate to create objects. ",
      "comments": [],
      "ancestorIds": [
        "CCEB9C9C8DF640F380692DFB9B9E2109",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "CCEB9C9C8DF640F380692DFB9B9E2109"
    },
    "1425A45ACD5F48A1A6E83257C8E3610E": {
      "id": "1425A45ACD5F48A1A6E83257C8E3610E",
      "asnIdentifier": null,
      "position": 43000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.1.D.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A class contains constructors that are invoked\nto create objects. They have the same name as\nthe class.",
      "comments": [],
      "ancestorIds": [
        "CCEB9C9C8DF640F380692DFB9B9E2109",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "CCEB9C9C8DF640F380692DFB9B9E2109"
    },
    "9EE93B01CF234644818A85C4F54B8C9E": {
      "id": "9EE93B01CF234644818A85C4F54B8C9E",
      "asnIdentifier": null,
      "position": 42000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.1.D.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Every object is created using the keyword\nnew followed by a call to one of the class’s\nconstructors.",
      "comments": [],
      "ancestorIds": [
        "CCEB9C9C8DF640F380692DFB9B9E2109",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "CCEB9C9C8DF640F380692DFB9B9E2109"
    },
    "CCEB9C9C8DF640F380692DFB9B9E2109": {
      "id": "CCEB9C9C8DF640F380692DFB9B9E2109",
      "asnIdentifier": null,
      "position": 41000,
      "depth": 3,
      "listId": "d",
      "statementNotation": "MOD.1.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "For creating objects:\na. Create objects by calling\nconstructors without\nparameters.\nb. Create objects by\ncalling constructors with\nparameters.",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "843954F90E404C04A268FD6CB86D2BF3": {
      "id": "843954F90E404C04A268FD6CB86D2BF3",
      "asnIdentifier": null,
      "position": 40000,
      "depth": 4,
      "listId": "1f",
      "statementNotation": "MOD.1.C.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Parameters are passed using call by value. Call\nby value initializes the formal parameters with\ncopies of the actual parameters. ",
      "comments": [],
      "ancestorIds": [
        "245ED7C293404007AD2F8FFBD7AF3A7C",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "245ED7C293404007AD2F8FFBD7AF3A7C"
    },
    "517876B2F1F44FCBB3C5968287F24B6C": {
      "id": "517876B2F1F44FCBB3C5968287F24B6C",
      "asnIdentifier": null,
      "position": 39000,
      "depth": 4,
      "listId": "1e",
      "statementNotation": "MOD.1.C.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The actual parameters passed to a constructor\nmust be compatible with the types identified in\nthe formal parameter list.",
      "comments": [],
      "ancestorIds": [
        "245ED7C293404007AD2F8FFBD7AF3A7C",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "245ED7C293404007AD2F8FFBD7AF3A7C"
    },
    "1702BBB5873B41DA86E816AAC297C77E": {
      "id": "1702BBB5873B41DA86E816AAC297C77E",
      "asnIdentifier": null,
      "position": 38000,
      "depth": 4,
      "listId": "1d",
      "statementNotation": "MOD.1.C.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Constructors are said to be overloaded when\nthere are multiple constructors with the same\nname but a different signature.",
      "comments": [],
      "ancestorIds": [
        "245ED7C293404007AD2F8FFBD7AF3A7C",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "245ED7C293404007AD2F8FFBD7AF3A7C"
    },
    "E1C80F6250CA44839DB427309049B338": {
      "id": "E1C80F6250CA44839DB427309049B338",
      "asnIdentifier": null,
      "position": 37000,
      "depth": 4,
      "listId": "1c",
      "statementNotation": "MOD.1.C.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A parameter is a value that is passed into a\nconstructor. These are often referred to as\nactual parameters.",
      "comments": [],
      "ancestorIds": [
        "245ED7C293404007AD2F8FFBD7AF3A7C",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "245ED7C293404007AD2F8FFBD7AF3A7C"
    },
    "E7C41D7109C2472094B873471C0172F4": {
      "id": "E7C41D7109C2472094B873471C0172F4",
      "asnIdentifier": null,
      "position": 36000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.1.C.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The parameter list, in the header of a\nconstructor, lists the types of the values that\nare passed and their variable names. These are\noften referred to as formal parameters. ",
      "comments": [],
      "ancestorIds": [
        "245ED7C293404007AD2F8FFBD7AF3A7C",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "245ED7C293404007AD2F8FFBD7AF3A7C"
    },
    "64F4E5EBCA0E4F368E4B7F766C08BAA0": {
      "id": "64F4E5EBCA0E4F368E4B7F766C08BAA0",
      "asnIdentifier": null,
      "position": 35000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.1.C.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A signature consists of the constructor name\nand the parameter list.",
      "comments": [],
      "ancestorIds": [
        "245ED7C293404007AD2F8FFBD7AF3A7C",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "245ED7C293404007AD2F8FFBD7AF3A7C"
    },
    "245ED7C293404007AD2F8FFBD7AF3A7C": {
      "id": "245ED7C293404007AD2F8FFBD7AF3A7C",
      "asnIdentifier": null,
      "position": 34000,
      "depth": 3,
      "listId": "c",
      "statementNotation": "MOD.1.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify, using its signature,\nthe correct constructor\nbeing called.",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "86886B7480AC4092BC3E106816179F78": {
      "id": "86886B7480AC4092BC3E106816179F78",
      "asnIdentifier": null,
      "position": 33000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.1.B.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "A class is the formal implementation, or blueprint,\nof the attributes and behaviors of an object.  ",
      "comments": [],
      "ancestorIds": [
        "D2EB6C916B634695BF0F45C502919389",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "D2EB6C916B634695BF0F45C502919389"
    },
    "90668E6635B949A3A28A14697044FC74": {
      "id": "90668E6635B949A3A28A14697044FC74",
      "asnIdentifier": null,
      "position": 32000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.1.B.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "An object is a specific instance of a class with\ndefined attributes.",
      "comments": [],
      "ancestorIds": [
        "D2EB6C916B634695BF0F45C502919389",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "D2EB6C916B634695BF0F45C502919389"
    },
    "D2EB6C916B634695BF0F45C502919389": {
      "id": "D2EB6C916B634695BF0F45C502919389",
      "asnIdentifier": null,
      "position": 31000,
      "depth": 3,
      "listId": "b",
      "statementNotation": "MOD.1.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain the relationship\nbetween a class and an object.",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "455ECC26E6E4457CA836AB237499AC0E": {
      "id": "455ECC26E6E4457CA836AB237499AC0E",
      "asnIdentifier": null,
      "position": 30000,
      "depth": 4,
      "listId": "1b",
      "statementNotation": "MOD.1.A.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "System.out.println moves the cursor to a\nnew line after the information has been displayed,\nwhile System.out.print does not.",
      "comments": [],
      "ancestorIds": [
        "46071D9DC68448DFA6F00CE3AF28605F",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "46071D9DC68448DFA6F00CE3AF28605F"
    },
    "9D898F1248D64BDEAEA71967E5630837": {
      "id": "9D898F1248D64BDEAEA71967E5630837",
      "asnIdentifier": null,
      "position": 29000,
      "depth": 4,
      "listId": "1a",
      "statementNotation": "MOD.1.A.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "System.out.print and System.out.\nprintln display information on the computer\nmonitor.",
      "comments": [],
      "ancestorIds": [
        "46071D9DC68448DFA6F00CE3AF28605F",
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "46071D9DC68448DFA6F00CE3AF28605F"
    },
    "46071D9DC68448DFA6F00CE3AF28605F": {
      "id": "46071D9DC68448DFA6F00CE3AF28605F",
      "asnIdentifier": null,
      "position": 28000,
      "depth": 3,
      "listId": "a",
      "statementNotation": "MOD.1.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Call System class methods\nto generate output to the\nconsole.",
      "comments": [],
      "ancestorIds": [
        "7771090DF47348A4B9BD8DAB516F8EAA",
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "7771090DF47348A4B9BD8DAB516F8EAA"
    },
    "7771090DF47348A4B9BD8DAB516F8EAA": {
      "id": "7771090DF47348A4B9BD8DAB516F8EAA",
      "asnIdentifier": null,
      "position": 27000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "MOD.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Some objects or concepts are so frequently represented that programmers can\ndraw upon existing code that has already been tested, enabling them to write\nsolutions more quickly and with a greater degree of confidence. ",
      "comments": [],
      "ancestorIds": [
        "25CE91707FB34B9B8A74E0BA08198E2B",
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "25CE91707FB34B9B8A74E0BA08198E2B"
    },
    "25CE91707FB34B9B8A74E0BA08198E2B": {
      "id": "25CE91707FB34B9B8A74E0BA08198E2B",
      "asnIdentifier": null,
      "position": 26000,
      "depth": 1,
      "listId": "1",
      "statementNotation": "MOD",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Modularity",
      "comments": [],
      "ancestorIds": [
        "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
      ],
      "parentId": "3A4B8B0E7DF44A0CA4ABDA4B27808E84"
    },
    "3A4B8B0E7DF44A0CA4ABDA4B27808E84": {
      "id": "3A4B8B0E7DF44A0CA4ABDA4B27808E84",
      "asnIdentifier": null,
      "position": 25000,
      "depth": 0,
      "listId": "II",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Big Ideas",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "5B9789B592354BCE8F15B32FDBA9BB1D": {
      "id": "5B9789B592354BCE8F15B32FDBA9BB1D",
      "asnIdentifier": null,
      "position": 24000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "5.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe the\ninitial conditions that\nmust be met for a\nprogram segment\nto work as intended\nor described.",
      "comments": [],
      "ancestorIds": [
        "2F9C0506ED4843BD8C8CF38E31CC2338",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "2F9C0506ED4843BD8C8CF38E31CC2338"
    },
    "297983CD298C40148BB267C0CFF714EE": {
      "id": "297983CD298C40148BB267C0CFF714EE",
      "asnIdentifier": null,
      "position": 23000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "5.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": " Explain how\nthe result of program\ncode changes, given\na change to the\ninitial code.",
      "comments": [],
      "ancestorIds": [
        "2F9C0506ED4843BD8C8CF38E31CC2338",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "2F9C0506ED4843BD8C8CF38E31CC2338"
    },
    "D1F5EC05CCAB4F7A982F320E665BF414": {
      "id": "D1F5EC05CCAB4F7A982F320E665BF414",
      "asnIdentifier": null,
      "position": 22000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "5.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explain why a\ncode segment will\nnot compile or work\nas intended.",
      "comments": [],
      "ancestorIds": [
        "2F9C0506ED4843BD8C8CF38E31CC2338",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "2F9C0506ED4843BD8C8CF38E31CC2338"
    },
    "4535F42E65D74C4685922B383E9F2F43": {
      "id": "4535F42E65D74C4685922B383E9F2F43",
      "asnIdentifier": null,
      "position": 21000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "5.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe the\nbehavior of a\ngiven segment of\nprogram code.",
      "comments": [],
      "ancestorIds": [
        "2F9C0506ED4843BD8C8CF38E31CC2338",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "2F9C0506ED4843BD8C8CF38E31CC2338"
    },
    "2F9C0506ED4843BD8C8CF38E31CC2338": {
      "id": "2F9C0506ED4843BD8C8CF38E31CC2338",
      "asnIdentifier": null,
      "position": 20000,
      "depth": 1,
      "listId": "5",
      "statementNotation": "5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Code Testing",
      "comments": [],
      "ancestorIds": [
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "418F49B69BA84FE380D17ADAC738C67A"
    },
    "E6BAE0153C324F8EACE165FBB57752A5": {
      "id": "E6BAE0153C324F8EACE165FBB57752A5",
      "asnIdentifier": null,
      "position": 19000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "4.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine if\ntwo or more code\nsegments yield\nequivalent results. ",
      "comments": [],
      "ancestorIds": [
        "56B9231D490B4858A969C7304D36168A",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "56B9231D490B4858A969C7304D36168A"
    },
    "BF7E23221EE84C2883DB15FCD4865287": {
      "id": "BF7E23221EE84C2883DB15FCD4865287",
      "asnIdentifier": null,
      "position": 18000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "4.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": " Identify errors in\nprogram code.",
      "comments": [],
      "ancestorIds": [
        "56B9231D490B4858A969C7304D36168A",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "56B9231D490B4858A969C7304D36168A"
    },
    "025C0A75B24D4D97A87F38A1C013BE36": {
      "id": "025C0A75B24D4D97A87F38A1C013BE36",
      "asnIdentifier": null,
      "position": 17000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "4.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use test-cases\nto find errors or\nvalidate results.",
      "comments": [],
      "ancestorIds": [
        "56B9231D490B4858A969C7304D36168A",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "56B9231D490B4858A969C7304D36168A"
    },
    "56B9231D490B4858A969C7304D36168A": {
      "id": "56B9231D490B4858A969C7304D36168A",
      "asnIdentifier": null,
      "position": 16000,
      "depth": 1,
      "listId": "4",
      "statementNotation": "4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Code Testing",
      "comments": [],
      "ancestorIds": [
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "418F49B69BA84FE380D17ADAC738C67A"
    },
    "882985A8330943358AABB9CB78D73FC7": {
      "id": "882985A8330943358AABB9CB78D73FC7",
      "asnIdentifier": null,
      "position": 15000,
      "depth": 2,
      "listId": "E",
      "statementNotation": "3.E",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Write program\ncode to create,\ntraverse, and\nmanipulate elements\nin 2D array objects",
      "comments": [],
      "ancestorIds": [
        "25EBD819A5E640F6962C82DEAF74EE11",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "25EBD819A5E640F6962C82DEAF74EE11"
    },
    "4133AEC8084D4EAAA988CACA36E4A866": {
      "id": "4133AEC8084D4EAAA988CACA36E4A866",
      "asnIdentifier": null,
      "position": 14000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "3.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Write program\ncode to create,\ntraverse, and\nmanipulate elements\nin 1D array or\nArrayList objects.",
      "comments": [],
      "ancestorIds": [
        "25EBD819A5E640F6962C82DEAF74EE11",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "25EBD819A5E640F6962C82DEAF74EE11"
    },
    "2A35B5492ADB49F68E26994950F483E3": {
      "id": "2A35B5492ADB49F68E26994950F483E3",
      "asnIdentifier": null,
      "position": 13000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "3.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Write program\ncode to create,\ntraverse, and\nmanipulate elements\nin 1D array or\nArrayList objects.",
      "comments": [],
      "ancestorIds": [
        "25EBD819A5E640F6962C82DEAF74EE11",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "25EBD819A5E640F6962C82DEAF74EE11"
    },
    "47F9541B62D14F8CA263206D36ED6050": {
      "id": "47F9541B62D14F8CA263206D36ED6050",
      "asnIdentifier": null,
      "position": 12000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "3.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Write program\ncode to define\na new type by\ncreating a class.",
      "comments": [],
      "ancestorIds": [
        "25EBD819A5E640F6962C82DEAF74EE11",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "25EBD819A5E640F6962C82DEAF74EE11"
    },
    "E48556C7BAE744728887B284670FCE83": {
      "id": "E48556C7BAE744728887B284670FCE83",
      "asnIdentifier": null,
      "position": 11000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "3.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Write program\ncode to create\nobjects of a class and\ncall methods",
      "comments": [],
      "ancestorIds": [
        "25EBD819A5E640F6962C82DEAF74EE11",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "25EBD819A5E640F6962C82DEAF74EE11"
    },
    "25EBD819A5E640F6962C82DEAF74EE11": {
      "id": "25EBD819A5E640F6962C82DEAF74EE11",
      "asnIdentifier": null,
      "position": 10000,
      "depth": 1,
      "listId": "3",
      "statementNotation": "3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Code\nImplementation",
      "comments": [],
      "ancestorIds": [
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "418F49B69BA84FE380D17ADAC738C67A"
    },
    "B2B4A5A96F4041EEA91B6D8F31904A68": {
      "id": "B2B4A5A96F4041EEA91B6D8F31904A68",
      "asnIdentifier": null,
      "position": 9000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "2.D",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the\nnumber of times\na code segment\nwill execute.",
      "comments": [],
      "ancestorIds": [
        "83AAF70373F24BEA8C2DFA5155D4EC7A",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "83AAF70373F24BEA8C2DFA5155D4EC7A"
    },
    "0D18AB0901C9460492512C70D56E6DDC": {
      "id": "0D18AB0901C9460492512C70D56E6DDC",
      "asnIdentifier": null,
      "position": 8000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "2.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": " Determine the\nresult or output\nbased on the\nstatement execution\norder in a code\nsegment containing\nmethod calls. ",
      "comments": [],
      "ancestorIds": [
        "83AAF70373F24BEA8C2DFA5155D4EC7A",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "83AAF70373F24BEA8C2DFA5155D4EC7A"
    },
    "DD57F34224BA48A9BB996383BBC1FE06": {
      "id": "DD57F34224BA48A9BB996383BBC1FE06",
      "asnIdentifier": null,
      "position": 7000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "2.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the\nresult or output\nbased on statement\nexecution order in a\ncode segment without\nmethod calls (other\nthan output)",
      "comments": [],
      "ancestorIds": [
        "83AAF70373F24BEA8C2DFA5155D4EC7A",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "83AAF70373F24BEA8C2DFA5155D4EC7A"
    },
    "8E1207820DFB49A184CD4949B074E779": {
      "id": "8E1207820DFB49A184CD4949B074E779",
      "asnIdentifier": null,
      "position": 6000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "2.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the\nresult or output\nbased on statement\nexecution order in a\ncode segment without\nmethod calls (other\nthan output)",
      "comments": [],
      "ancestorIds": [
        "83AAF70373F24BEA8C2DFA5155D4EC7A",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "83AAF70373F24BEA8C2DFA5155D4EC7A"
    },
    "83AAF70373F24BEA8C2DFA5155D4EC7A": {
      "id": "83AAF70373F24BEA8C2DFA5155D4EC7A",
      "asnIdentifier": null,
      "position": 5000,
      "depth": 1,
      "listId": "2",
      "statementNotation": "2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Code Logic",
      "comments": [],
      "ancestorIds": [
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "418F49B69BA84FE380D17ADAC738C67A"
    },
    "E1CC2F70970A4E09A291E913763A2243": {
      "id": "E1CC2F70970A4E09A291E913763A2243",
      "asnIdentifier": null,
      "position": 4000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "1.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine code\nthat would be used to\ninteract with completed\nprogram code.",
      "comments": [],
      "ancestorIds": [
        "5BF8DF0624504A90B1757565F6D6ABD5",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "5BF8DF0624504A90B1757565F6D6ABD5"
    },
    "993C8CE3F5BD4B32B1E7AC18716244BE": {
      "id": "993C8CE3F5BD4B32B1E7AC18716244BE",
      "asnIdentifier": null,
      "position": 3000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "1.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine code\nthat would be used\nto complete code\nsegments. ",
      "comments": [],
      "ancestorIds": [
        "5BF8DF0624504A90B1757565F6D6ABD5",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "5BF8DF0624504A90B1757565F6D6ABD5"
    },
    "62F783E484A847E3ABAA244DD40FB81F": {
      "id": "62F783E484A847E3ABAA244DD40FB81F",
      "asnIdentifier": null,
      "position": 2000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "1.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine an\nappropriate program\ndesign to solve a\nproblem or accomplish\na task (not assessed).",
      "comments": [],
      "ancestorIds": [
        "5BF8DF0624504A90B1757565F6D6ABD5",
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "5BF8DF0624504A90B1757565F6D6ABD5"
    },
    "5BF8DF0624504A90B1757565F6D6ABD5": {
      "id": "5BF8DF0624504A90B1757565F6D6ABD5",
      "asnIdentifier": null,
      "position": 1000,
      "depth": 1,
      "listId": "1",
      "statementNotation": "1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Program Design\nand Algorithm\nDevelopment",
      "comments": [],
      "ancestorIds": [
        "418F49B69BA84FE380D17ADAC738C67A"
      ],
      "parentId": "418F49B69BA84FE380D17ADAC738C67A"
    },
    "418F49B69BA84FE380D17ADAC738C67A": {
      "id": "418F49B69BA84FE380D17ADAC738C67A",
      "asnIdentifier": null,
      "position": 0,
      "depth": 0,
      "listId": "I",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computational Thinking\nPractices: Skills",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    }
  }
}