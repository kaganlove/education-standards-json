{
  "id": "B886277C55DB4F47ACB5BA6354E6F7B1",
  "title": "Level 1B: Grades 3-5 (Ages 8-11)",
  "subject": "Computer Science",
  "normalizedSubject": null,
  "educationLevels": [
    "03",
    "04",
    "05"
  ],
  "cspStatus": {},
  "license": {
    "title": "CC BY 4.0 US",
    "URL": "http://creativecommons.org/licenses/by/4.0/us/",
    "rightsHolder": "Common Curriculum, Inc."
  },
  "document": {
    "title": "CSTA K-12 Computer Science Standards  (Revised 2017)",
    "sourceURL": "https://drive.google.com/open?id=1-dPTAI1yk2HYPKUWZ6DqaM6aVUDa9iby"
  },
  "jurisdiction": {
    "id": "73E7187D3910423085A2439AE9C9A64F",
    "title": "Unity Concord International School"
  },
  "standards": {
    "3E6262A2ECCC4445884770FF6FB60BF7": {
      "id": "3E6262A2ECCC4445884770FF6FB60BF7",
      "asnIdentifier": null,
      "position": 48000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Ethical complications arise from the opportunities provided by computing. With the ease of sending and receiving copies of media on the Internet, in formats such as video, photos, and music, students consider the opportunities for unauthorized use, such as online piracy and disregard of copyrights. The license of a downloaded image or audio file may restrict modification, require attribution, or prohibit use entirely. \n\nFor example, students could take part in a collaborative discussion regarding reasons why musicians who sell their songs in digital format choose to license their work so that they can earn money for their creative efforts. If others share the songs without paying for them, the musicians do not benefit financially and may struggle to produce music in the future. (CA CCSS for ELA/Literacy SL.3.1, SL.4.1, SL.5.1)\n\nAlternatively, students could review the rights and reproduction guidelines for digital artifacts on a publicly accessible media source. They could then state an opinion with reasons they believe these guidelines are in place. (CA CCSS for ELA/Literacy W.3.1, W.4.1, W.5.1)",
      "comments": [],
      "ancestorIds": [
        "F274FFC82C1B4620834511E2BAA99406",
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "F274FFC82C1B4620834511E2BAA99406"
    },
    "F274FFC82C1B4620834511E2BAA99406": {
      "id": "F274FFC82C1B4620834511E2BAA99406",
      "asnIdentifier": null,
      "position": 47000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.IC.21",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use public domain or creative commons media, and refrain from copying or using material created by others without permission.",
      "comments": [],
      "ancestorIds": [
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "A2F6F822962A4254A92299FA921F6EF7"
    },
    "70CEE6BA66D54E9C9CAAE10AAEBD592E": {
      "id": "70CEE6BA66D54E9C9CAAE10AAEBD592E",
      "asnIdentifier": null,
      "position": 46000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing provides the possibility for collaboration and sharing of ideas and allows the benefit of diverse perspectives. For example, students could seek feedback from other groups in their class or students at another grade level. Or, with guidance from their teacher, they could use video conferencing tools or other online collaborative spaces, such as blogs, wikis, forums, or website comments, to gather feedback from individuals and groups about programming projects.",
      "comments": [],
      "ancestorIds": [
        "16936F53E56644E894921407A1FDF6B7",
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "16936F53E56644E894921407A1FDF6B7"
    },
    "16936F53E56644E894921407A1FDF6B7": {
      "id": "16936F53E56644E894921407A1FDF6B7",
      "asnIdentifier": null,
      "position": 45000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.IC.20",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Seek diverse perspectives for the purpose of improving computational artifacts.",
      "comments": [],
      "ancestorIds": [
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "A2F6F822962A4254A92299FA921F6EF7"
    },
    "713E9EFF44504A96A8881C2F7A134B35": {
      "id": "713E9EFF44504A96A8881C2F7A134B35",
      "asnIdentifier": null,
      "position": 44000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The development and modification of computing technology is driven by peopleâ€™s needs and wants and can affect groups differently. Students anticipate the needs and wants of diverse end users and propose ways to improve access and usability of technology, with consideration of potential perspectives of users with different backgrounds, ability levels, points of view, and disabilities.\n\nFor example, students could research a wide variety of disabilities that would limit the use of traditional computational tools for the creation of multimedia artifacts, including digital images, songs, and videos. Students could then brainstorm and propose new software that would allow students that are limited by the disabilities to create similar artifacts in new ways (e.g., graphical display of music for the deaf, the sonification of images for visually impaired students, voice input for those that are unable to use traditional input like the mouse and the keyboard). (CA CCSS for ELA/Literacy W.3.7, W.4.7, W.5.7) \n\nAlternatively, as they anticipate unique user needs, students may consider using both speech and text to convey information in a game. They may also wish to vary the types of programs they create, knowing that not everyone shares their own tastes. (CA NGSS: 3-5-ETS1-1, 3-5-ETS1-2, 3-5-ETS1-3)",
      "comments": [],
      "ancestorIds": [
        "4FFDA74A969047338B7B1CFA25246539",
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "4FFDA74A969047338B7B1CFA25246539"
    },
    "4FFDA74A969047338B7B1CFA25246539": {
      "id": "4FFDA74A969047338B7B1CFA25246539",
      "asnIdentifier": null,
      "position": 43000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.IC.19",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Brainstorm ways to improve the accessibility and usability of technology products for the diverse needs and wants of users.",
      "comments": [],
      "ancestorIds": [
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "A2F6F822962A4254A92299FA921F6EF7"
    },
    "69983131CB7F47248B4A6521BEA4CFA9": {
      "id": "69983131CB7F47248B4A6521BEA4CFA9",
      "asnIdentifier": null,
      "position": 42000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "New computing technologies are created and existing technologies are modified for many reasons, including to increase their benefits, decrease their risks, and meet societal needs. Students, with guidance from their teacher, discuss topics that relate to the history of computing technologies and changes in the world due to these technologies. Topics could be based on current news content, such as robotics, wireless Internet, mobile computing devices, GPS systems, wearable computing, and how social media has influenced social and political changes.\n\nFor example, students could conduct research in computing technologies that impact daily life such as self-driving cars. They engage in a collaborative discussion describing impacts of these advancements (e.g.,  self-driving cars could reduce crashes and decrease traffic, but there is a cost barrier to purchasing them). (CA CCSS for ELA/Literacy W.3.7, W.4.7, W.5.7, SL.3.1, SL.4.1, SL.5.1) \n\nAlternatively, students could discuss how technological advancements affected the entertainment industry and then compare and contrast the impacts on audiences. For instance, people with access to high-speed Internet may be able to choose to utilize streaming media (which may cost less than traditional media options), but those in rural areas may not have the same access and be able to reap those benefits. (VAPA Theatre Arts 4.3.2, 4.4.2)",
      "comments": [],
      "ancestorIds": [
        "F4E127127DFB4702BBC1DA8B552388AB",
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "F4E127127DFB4702BBC1DA8B552388AB"
    },
    "F4E127127DFB4702BBC1DA8B552388AB": {
      "id": "F4E127127DFB4702BBC1DA8B552388AB",
      "asnIdentifier": null,
      "position": 41000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.IC.18",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Discuss computing technologies that have changed the world, and express how those technologies influence, and are influenced by, cultural practices.",
      "comments": [],
      "ancestorIds": [
        "A2F6F822962A4254A92299FA921F6EF7"
      ],
      "parentId": "A2F6F822962A4254A92299FA921F6EF7"
    },
    "A2F6F822962A4254A92299FA921F6EF7": {
      "id": "A2F6F822962A4254A92299FA921F6EF7",
      "asnIdentifier": null,
      "position": 40000,
      "depth": 0,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Impacts of Computing",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "C5EF6676BC1A43F29FDBAB02572A8AC3": {
      "id": "C5EF6676BC1A43F29FDBAB02572A8AC3",
      "asnIdentifier": null,
      "position": 39000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "People communicate about their code to help others understand and use their programs. Explaining one's design choices gives others a better understanding of one's work. Students may explain their step-by-step process of creating a program in a presentation or demonstration of their personal code journals. They describe how comments within code organize thought and process during the develpment of the program.\n\nFor example, students could describe the decision to have the score in a game flash when it can be rounded to 100 by writing a comment in the code. (CA CCSS for Mathematics 3.NBT.1)\n\nAlternatively, students could present their overall program development experience and justify choices made by using storyboards, annotated images, videos, and/or journal entries. (CA CCSS for ELA/Literacy SL.3.4, SL.4.4, SL.5.4, SL.3.5, SL.4.5, SL.5.5) (CA NGSS: 3-5-ETS1-1, 3.5-ETS1-2, 3.5-ETS1-3) ",
      "comments": [],
      "ancestorIds": [
        "E57FC308DDA4499AA4E5EBD7D0C36709",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "E57FC308DDA4499AA4E5EBD7D0C36709"
    },
    "E57FC308DDA4499AA4E5EBD7D0C36709": {
      "id": "E57FC308DDA4499AA4E5EBD7D0C36709",
      "asnIdentifier": null,
      "position": 38000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.17",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe choices made during program development using code comments, presentations, and demonstrations.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "3E32A640699244ECB2604CDA3EAB6FFF": {
      "id": "3E32A640699244ECB2604CDA3EAB6FFF",
      "asnIdentifier": null,
      "position": 37000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Collaborative computing is the process of creating computational artifacts by working in pairs or on teams. It involves asking for the contributions and feedback of others. Effective collaboration can often lead to better outcomes than working independently. With teacher guidance, students take turns in different roles during program development, such as driver, navigator, notetaker, facilitator, and debugger, as they design and implement their program.\n\nFor example, while taking on different roles during program development, students could create and maintain a journal about their experiences working collaboratively. (CA CCSS for ELA/Literacy W.3.10, W.4.10, W.5.10) (CA NGSS: 3-5-ETS1-2)",
      "comments": [],
      "ancestorIds": [
        "345E5353D26E4D5C91D33DF40C177070",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "345E5353D26E4D5C91D33DF40C177070"
    },
    "345E5353D26E4D5C91D33DF40C177070": {
      "id": "345E5353D26E4D5C91D33DF40C177070",
      "asnIdentifier": null,
      "position": 36000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.16",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Take on varying roles, with teacher guidance, when collaborating with peers during the design, implementation, and review stages of program development.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "3EF040027F0846C593A81721D40FEB51": {
      "id": "3EF040027F0846C593A81721D40FEB51",
      "asnIdentifier": null,
      "position": 35000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Programs do not always run properly. Students need to understand how to test and make necessary corrections to their programs to ensure they run properly. Students successfully identify and fix errors in (debug) their programs and programs created by others. Debugging strategies at this level may include testing to determine the first place the solution is in error and fixing accordingly, leaving \"breadcrumbs\" in a program, and soliciting assistance from peers and online resources.\n\nFor example, when students are developing a program to control the movement of a robot in a confined space, students test various inputs that control movement of the robot to make sure it behaves as intended (e.g., if an input would cause the robot to move past a wall of the confined space, it should not move at all). (CA NGSS: 3-5-ETS1-3)\n\nAdditionally, students could test and debug an algorithm by tracing the inputs and outputs on a whiteboard. When noticing \"bugs\" (errors), students could identify what was supposed to happen and step through the algorithm to locate and then correct the error.",
      "comments": [],
      "ancestorIds": [
        "D963E38827DF407AB04310A95BE6F2F3",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "D963E38827DF407AB04310A95BE6F2F3"
    },
    "D963E38827DF407AB04310A95BE6F2F3": {
      "id": "D963E38827DF407AB04310A95BE6F2F3",
      "asnIdentifier": null,
      "position": 34000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.15",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Test and debug (identify and fix errors) a program or algorithm to ensure it runs as intended.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "2B12B5A2685D41388530043908F0DB27": {
      "id": "2B12B5A2685D41388530043908F0DB27",
      "asnIdentifier": null,
      "position": 33000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Intellectual property rights can vary by country, but copyright laws give the creator of a work a set of rights and prevents others from copying the work and using it in ways that they may not like. Students consider common licenses that place limitations or restrictions on the use of others' work, such as images and music downloaded from the Internet. When incorporating the work of others, students attribute the work. At this level, students could give attribution by including credits or links directly in their programs, code comments, or separate project pages.\n\nFor example, when making a program to model the life cycle of a butterfly, students could modify and reuse an existing program that describes the life cycle of a frog. Based on their research, students could identify and use Creative Commons-licensed or public domain images and sounds of caterpillars and butterflies. Students give attribution by properly citing the source of the original piece as necessary. (CA NGSS: 3-LS-1-1) (CA CCSS for ELA/Literacy W.3.8, W.4.8, W.5.8)\n\nAlternatively, when creating a program explaining the structure of the United States goverment, students find Creative Commons-licensed or public domain images to represent the three branches of government and attribute ownership of the images appropriately. If students find and incorporate an audio file of a group playing part of the national anthem, they appropriately give attribution on the project page. (HSS.3.4.4)",
      "comments": [],
      "ancestorIds": [
        "8537902CB84541479059556C0DEE9143",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "8537902CB84541479059556C0DEE9143"
    },
    "8537902CB84541479059556C0DEE9143": {
      "id": "8537902CB84541479059556C0DEE9143",
      "asnIdentifier": null,
      "position": 32000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Observe intellectual property rights and give appropriate attribution when creating, remixing, or combining programs.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "26E4E8941F0F4603A9D703CB3B40E8D6": {
      "id": "26E4E8941F0F4603A9D703CB3B40E8D6",
      "asnIdentifier": null,
      "position": 31000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Planning is an important part of the iterative process of program development. Students gain a basic understanding of the importance and process of planning before beginning to write code for a program. They plan the development of a program by outlining key features, time and resource constraints, and user expectations. Students should document the plan as, for example, a storyboard, flowchart, pseudocode, or story map.\n\nFor example, students could collaborate with a partner to plan and develop a program that graphs a function. They could iteratively modify the program based on feedback from diverse users, such as students who are color blind and may have trouble differentiating lines on a graph based on the color. (CA CCSS for Mathematics 5.G.1, 5.G.2)\n\nAlternatively, students could plan as a team to develop a program to display experimental data. They could implement the program in stages, generating basic displays first and then soliciting feedback from others on how easy it is to interpret (e.g., are labels clear and readable?, are lines thick enough?, are titles understandable?). Students could iteratively improve their display to make it more readable and to better support the communication of the finding of the experiment. (NGSS.3-5-ETS1-1, 3-5-ETS1-2, 3-5-ETS1-3)",
      "comments": [],
      "ancestorIds": [
        "EDEC8423FBB447B18F8921F1202E9401",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "EDEC8423FBB447B18F8921F1202E9401"
    },
    "EDEC8423FBB447B18F8921F1202E9401": {
      "id": "EDEC8423FBB447B18F8921F1202E9401",
      "asnIdentifier": null,
      "position": 30000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use an iterative process to plan the development of a program by including others'\n\nperspectives and considering user preferences.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "A54FFAF64997484194FC9F5587DEE8FC": {
      "id": "A54FFAF64997484194FC9F5587DEE8FC",
      "asnIdentifier": null,
      "position": 29000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Programs can be broken down into smaller parts, which can be incorporated into new or existing programs. Students incorporate predefined functions into their original designs. At this level, students do not need to understand all of the underlying implementation details of the abstractions that they use.\n\nFor example, students could use code from a ping pong animation to make a ball bounce in a new basketball game. They could also incorporate code from a single-player basketball game to create a two-player game with slightly different rules.\n\nAlternatively, students could remix an animated story and add their own conclusion and/or additional dialogue. (CA CCSS for ELA/Literacy W.3.3.B, W.3.3.D, W.4.3.B, W.4.3.E, W.5.3.B, W.5.3.E)\n\nAdditionally, when creating a game that occurs on the moon or planets, students could incorporate and modify code that simulates gravity on Earth. They could modify the strength of the gravitational force based on the mass of the planet or moon. (CA NGSS: 5-PS2-1)",
      "comments": [],
      "ancestorIds": [
        "55C859B4EAB745CD865BD192FE9DADD0",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "55C859B4EAB745CD865BD192FE9DADD0"
    },
    "55C859B4EAB745CD865BD192FE9DADD0": {
      "id": "55C859B4EAB745CD865BD192FE9DADD0",
      "asnIdentifier": null,
      "position": 28000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Modify, remix, or incorporate portions of an existing program into one's own work, to develop something new or add more advanced features.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "E1C0556CB1184F8AA68D7571491AA486": {
      "id": "E1C0556CB1184F8AA68D7571491AA486",
      "asnIdentifier": null,
      "position": 27000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Decomposition is the act of breaking down tasks into simpler tasks. This manages complexity in the problem solving and program development process.\n\nFor example, students could create an animation to represent a story they have written. Students write a story and then break it down into different scenes. For each scene, they would select a background, place characters, and program actions in that scene. (CA CCSS for ELA/Literacy W.3.3, W.4.3, W.5.3) \n\nAlternatively, students could create a program to allow classmates to present data collected in an experiment. For example, if students collected rain gauge data once per week for 3 months, students could break down the program tasks: 1) ask the user to input 12 weeks worth of data, 2) process the data (e.g., add the first four entries to calculate the rain amount for month 1, convert to metric system measurements), and 3) direct the creation or resizing of objects (e.g., one rectangular chart bar for each month) to represent the total number of rainfall for that month. (CA NGSS: 3-ETS-1-2) (CA CCSS for Mathematics 3.MD.2)",
      "comments": [],
      "ancestorIds": [
        "31414053D36141F9AF5A5102692B716C",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "31414053D36141F9AF5A5102692B716C"
    },
    "31414053D36141F9AF5A5102692B716C": {
      "id": "31414053D36141F9AF5A5102692B716C",
      "asnIdentifier": null,
      "position": 26000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Decompose (break down) problems into smaller, manageable subproblems to facilitate the\n\nprogram development process.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "AA6A8616589548A9AA01C50FB5D69B8A": {
      "id": "AA6A8616589548A9AA01C50FB5D69B8A",
      "asnIdentifier": null,
      "position": 25000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Control structures specify the order (sequence) in which instructions are executed within a program and can be combined to support the creation of more complex programs. Events allow portions of a program to run based on a specific action. Conditionals allow for the execution of a portion of code in a program when a certain condition is true. Loops allow for the repetition of a sequence of code multiple times. \n\nFor example, students could program an interactive map of the United States of America. They could use events to initiate a question when the user clicks on a state and conditionals to check whether the user input is correct. They could use loops to repeat the question until the user answers correctly or to control the length of a \"congratulations\" scenario that plays after a correct answer. (HSS.5.9) \n\nAlternatively, students could write a math fluency game that asks products of two one-digit numbers and then uses a conditional to check whether or not the answer that was entered is correct. They could use a loop to repeatedly ask another question. They could use events to allow the user to click on a green button to play again or a red button to end the game. (CA CCSS for Mathematics 3.OA.7) \n\nAdditionally, students could create a program as a role-playing game based on a literary work. Loops could be used to animate a character's movement. When reaching a decision point in the story, an event could initiate the user to type a response. A conditional could change the setting or have the story play out differently based on the user input. (CA CCSS for ELA/Literacy RL.5.3)",
      "comments": [],
      "ancestorIds": [
        "4042D9CFEACA45269BB662C7606F01E4",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "4042D9CFEACA45269BB662C7606F01E4"
    },
    "4042D9CFEACA45269BB662C7606F01E4": {
      "id": "4042D9CFEACA45269BB662C7606F01E4",
      "asnIdentifier": null,
      "position": 24000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create programs that include sequence, events, loops, and conditionals.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "366FF00042EB456A9D4C271667B20786": {
      "id": "366FF00042EB456A9D4C271667B20786",
      "asnIdentifier": null,
      "position": 23000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Variables are used to store and modify data. Students use variables in programs they create. At this level, students may need guidance in identifying when to create variables (i.e., performing the abstraction).\n\nFor example, students could create a game to represent predators and prey in an ecosystem. They could declare a \"score\" variable, assign it to 0 at the start of the game, and add 1 (increment) the score each time the predator captures its prey. They could also declare a second \"numberOfLives\" variable, assign it to 3 at the start of the game, and subtract 1 (decrement) each time a prey is captured. They could program the game to end when \"numberOfLives\" equals 0. (CA NGSS: 5-LS2-1) (CA CCSS for Mathematics 5.OA.3) \n\nAlternatively, when students create programs to draw regular polygons, they could use variables to store the line size, line color, and/or side length. Students can extend learning by creatively combining a variety of polygons to create digital artwork, comparing and contrasting this to another work of art made by the use of different art tools and media, such as watercolor or tempera paints. (CA CCSS for Mathematics 3.G.1) (VAPA Visual Arts 3.1.4)",
      "comments": [],
      "ancestorIds": [
        "0B2AE72BC1E843AF9F9D3DDFCE274947",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "0B2AE72BC1E843AF9F9D3DDFCE274947"
    },
    "0B2AE72BC1E843AF9F9D3DDFCE274947": {
      "id": "0B2AE72BC1E843AF9F9D3DDFCE274947",
      "asnIdentifier": null,
      "position": 22000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.09",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create programs that use variables to store and modify data.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "44F2076F094D4715B7C35C6AA9F23592": {
      "id": "44F2076F094D4715B7C35C6AA9F23592",
      "asnIdentifier": null,
      "position": 21000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Different algorithms can achieve the same result, though sometimes one algorithm might be more appropriate for a specific solution. Students examine different ways to solve the same task and decide which would be the better solution for the specific scenario. \n\nFor example, students could use a map and create multiple algorithms to model the early land and sea routes to and from European settlements in California. They could then compare and refine their algorithms to reflect faster travel times, shorter distances, or avoid specific characteristics, such as mountains, deserts, ocean currents, and wind patterns. (HSS.4.2.2) \n\nAlternatively, students could identify multiple algorithms for decomposing a fraction into a sum of fractions with the same denominator and record each decomposition with an equation (e.g., 2 1/8 = 1 + 1 + 1/8 = 8/8 + 8/8 + 1/8). Students could then select the most efficient algorithm (e.g., fewest number of steps). (CA CCSS for Mathematics 4.NF.3b)\n\nAdditionally, students could compare algorithms that describe how to get ready for school and modify them for supporting different goals including having time to care for a pet, being able to talk with a friend before classes start, or taking a longer route to school to accompany a younger sibling to their school first. Students could then write an opinion piece, justifying with reasons their selected algorithm is most appropriate. (CA CCSS for ELA/Literacy W.3.1, W.4.1, W.5.1)",
      "comments": [],
      "ancestorIds": [
        "F3BA653D902F482FA4D0C042876A6BAC",
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "F3BA653D902F482FA4D0C042876A6BAC"
    },
    "F3BA653D902F482FA4D0C042876A6BAC": {
      "id": "F3BA653D902F482FA4D0C042876A6BAC",
      "asnIdentifier": null,
      "position": 20000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.AP.08",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare and refine multiple algorithms for the same task and determine which is the most appropriate.",
      "comments": [],
      "ancestorIds": [
        "C5714E6735074DC0A844CA7C8DEDECDE"
      ],
      "parentId": "C5714E6735074DC0A844CA7C8DEDECDE"
    },
    "C5714E6735074DC0A844CA7C8DEDECDE": {
      "id": "C5714E6735074DC0A844CA7C8DEDECDE",
      "asnIdentifier": null,
      "position": 19000,
      "depth": 0,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Algorithms & Programming",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "1DDE699234C448E49E616683292FE2C5": {
      "id": "1DDE699234C448E49E616683292FE2C5",
      "asnIdentifier": null,
      "position": 18000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "The accuracy of data analysis is related to how the data is represented. Inferences or predictions based on data are less likely to be accurate if the data is insufficient, incomplete, or inaccurate or if the data is incorrect in some way. Additionally, people select aspects and subsets of data to be transformed, organized, and categorized. Students should be able to refer to data when communicating an idea, in order to highlight and/or propose relationships, predict outcomes, highlight different views and/or communicate insights and ideas.\n\nFor example, students can be provided a scenario in which they are city managers who have a specific amount of funds to improve a city in California. Students can collect data of a city concerning land use, vegetation, wildlife, climate, population density, services and transportation (HSS.4.1.5) to determine and present what area needs to be focused on to improve a problem. Students can compare their data and planned use of funds with peers, clearly communicating or predict outcomes based on data collected. (CA CCCS for ELA/Literacy SL.3.1, SL.4.1, SL.5.1) \n\nAlternatively, students could record the temperature at noon each day to show that temperatures are higher in certain months of the year. If temperatures are not recorded on non-school days or are recorded incorrectly, the data would be incomplete and ideas being communicated could be inaccurate. Students may also record the day of the week on which the data was collected, but this would have no relevance to whether temperatures are higher or lower. In order to have sufficient and accurate data on which to communicate the idea, students might use data provided by a governmental weather agency. (CA NGSS: 3-ESS2-1)",
      "comments": [],
      "ancestorIds": [
        "B855C59BC039498988535AE9FBFC5EE5",
        "43E06FE022C7452E81A18319C5E259CD"
      ],
      "parentId": "B855C59BC039498988535AE9FBFC5EE5"
    },
    "B855C59BC039498988535AE9FBFC5EE5": {
      "id": "B855C59BC039498988535AE9FBFC5EE5",
      "asnIdentifier": null,
      "position": 17000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.DA.07",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use data to highlight or propose cause-and-effect relationships, predict outcomes, or\n\ncommunicate an idea.",
      "comments": [],
      "ancestorIds": [
        "43E06FE022C7452E81A18319C5E259CD"
      ],
      "parentId": "43E06FE022C7452E81A18319C5E259CD"
    },
    "375205E63DA048AA81839EC51912A1FE": {
      "id": "375205E63DA048AA81839EC51912A1FE",
      "asnIdentifier": null,
      "position": 16000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Raw data has little meaning on its own. Data is often sorted or grouped to provide additional clarity. Organizing data can make interpreting and communicating it to others easier. Data points can be clustered by a number of commonalities. The same data could be manipulated in different ways to emphasize particular aspects or parts of the data set.\n\nFor example, students could create and administer electronic surveys to their classmates. Possible topics could include favorite books, family heritage, and after school activities. Students could then create digital displays of the data they have collected such as column histogram charts showing the percent of respondents in each grade who selected a particular favorite book. Finally, students could make quantitative statements supported by the data such as which books are more appealing to specific ages of students. As an extension, students could write an opinion piece stating a claim and supporting it with evidence from the data they collected. (CA CCSS for Mathematics 3.MD.3, 4.MD.4, 5.MD.2) (CA CCSS for ELA/Literacy W.3.1, W.4.1, W.5.1)\n\nAlternatively, students could represent data in tables and graphical displays to describe weather experienced in the last several years. They could select the type of graphical display based on the specific data represented (e.g., daily high/low temperatures on a scatter plot, average temperatures for a month across years in a column chart). Students could then make a claim about expected weather in future months based on the data. (CA NGSS: 3-ESS2-1)",
      "comments": [],
      "ancestorIds": [
        "D1AB8AA45EA446909E05D8607F0324D4",
        "43E06FE022C7452E81A18319C5E259CD"
      ],
      "parentId": "D1AB8AA45EA446909E05D8607F0324D4"
    },
    "D1AB8AA45EA446909E05D8607F0324D4": {
      "id": "D1AB8AA45EA446909E05D8607F0324D4",
      "asnIdentifier": null,
      "position": 15000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.DA.06",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Organize and present collected data visually to highlight relationships and support a claim.",
      "comments": [],
      "ancestorIds": [
        "43E06FE022C7452E81A18319C5E259CD"
      ],
      "parentId": "43E06FE022C7452E81A18319C5E259CD"
    },
    "43E06FE022C7452E81A18319C5E259CD": {
      "id": "43E06FE022C7452E81A18319C5E259CD",
      "asnIdentifier": null,
      "position": 14000,
      "depth": 0,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data & Analysis",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "52A55968A73147A598B1DE1C09DAACD4": {
      "id": "52A55968A73147A598B1DE1C09DAACD4",
      "asnIdentifier": null,
      "position": 13000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Just as we protect our personal property offline, we also need to protect our devices and the information stored on them. Information can be protected using various security measures. These measures can be physical and/or digital. Students could discuss or use a journaling or blogging activity to explain, orally or in writing, about topics that relate to personal cybersecurity issues. Discussion topics could be based on current events related to cybersecurity or topics that are applicable to students, such as the necessity of backing up data to guard against loss, how to create strong passwords and the importance of not sharing passwords, or why we should install and keep anti-virus software updated to protect data and systems.",
      "comments": [],
      "ancestorIds": [
        "8D6348FD2D8A4E1991E52C1F299CDF40",
        "791A517079314C84A4741F0ACBE8E57E"
      ],
      "parentId": "8D6348FD2D8A4E1991E52C1F299CDF40"
    },
    "8D6348FD2D8A4E1991E52C1F299CDF40": {
      "id": "8D6348FD2D8A4E1991E52C1F299CDF40",
      "asnIdentifier": null,
      "position": 12000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.NI.05",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Discuss real-world cybersecurity problems and how personal information can be protected.",
      "comments": [],
      "ancestorIds": [
        "791A517079314C84A4741F0ACBE8E57E"
      ],
      "parentId": "791A517079314C84A4741F0ACBE8E57E"
    },
    "590DE29B74D046C2ABD0B97B8213FA70": {
      "id": "590DE29B74D046C2ABD0B97B8213FA70",
      "asnIdentifier": null,
      "position": 11000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Information is sent and received over physical or wireless paths. It is broken down into smaller pieces called packets, which are sent independently and reassembled at the destination. Students demonstrate their understanding of this flow of information by, for instance, drawing a model of the way packets are transmitted, programming an animation to show how packets are transmitted, or demonstrating this through an unplugged activity in which they physically act this out.\n\nFor example, students could design a structure using building blocks or other materials with the intention of re-engineering it in another location, just as early Americans did after the intercontinental railroad was constructed in the 1850s (HSS.4.4.1, 4.4.2). Students could deconstruct the designed structure, place materials into specific containers (or plastic bags/brown paper bags/etc.), and develop instructions on how to recreate the structure once each container arrives at its intended destination. (CA NGSS: 3-5-ETS1)\n\nFor example, students could cut up a map of the United States by state lines. Students could then place the states in envelopes and transmit the \"packets\" through a physical network, represented by multiple students spreading out in arms reach of at least two others. At the destination, the student who receives the packets resassembles the individual states back into a map of the United States. (HSS 5.9)\n\nAlternatively, students could perform a similar activity with a diatonic scale, cutting the scale into individual notes. Each note, in order, should be placed into a numbered envelope based on its location on the scale. These envelopes can be transmitted across the network of students and reassembled at the destination. (VAPA Music 4.1.2)",
      "comments": [],
      "ancestorIds": [
        "A5CFC40055F24F3AAE32424F740B5983",
        "791A517079314C84A4741F0ACBE8E57E"
      ],
      "parentId": "A5CFC40055F24F3AAE32424F740B5983"
    },
    "A5CFC40055F24F3AAE32424F740B5983": {
      "id": "A5CFC40055F24F3AAE32424F740B5983",
      "asnIdentifier": null,
      "position": 10000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.NI.04",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Model how information is broken down into smaller pieces, transmitted as packets through multiple devices over networks and the Internet, and reassembled at the destination.",
      "comments": [],
      "ancestorIds": [
        "791A517079314C84A4741F0ACBE8E57E"
      ],
      "parentId": "791A517079314C84A4741F0ACBE8E57E"
    },
    "791A517079314C84A4741F0ACBE8E57E": {
      "id": "791A517079314C84A4741F0ACBE8E57E",
      "asnIdentifier": null,
      "position": 9000,
      "depth": 0,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Networks & the Internet",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "D8339180864F446FA284B41C175F1A85": {
      "id": "D8339180864F446FA284B41C175F1A85",
      "asnIdentifier": null,
      "position": 8000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Although computing systems vary, common troubleshooting strategies can be used across many different systems. Students use troubleshooting strategies to identify problems that could include a device not responding, lacking power, lacking a network connection, an app crashing, not playing sounds, or password entry not working. Students use and develop various solutions to address these problems. Solutions may include rebooting the device, checking for power, checking network availability, opening and closing an app, making sure speakers are turned on or headphones are plugged in, and making sure that the caps lock key is not on.\n\nFor example, students could prepare for and participate in a collaborative discussion in which they identify and list computing system problems and then describe common successful fixes. (CA CCSS for ELA/Literacy SL.3.1, SL.4.1, SL.5.1)\n\nAlternatively, students could write informative/explanatory texts, create a poster, or use another medium of communication to examine common troubleshooting strategies and convey these ideas and information clearly. (CA CCSS for ELA/Literacy W.3.2, W.4.2, W.5.2)",
      "comments": [],
      "ancestorIds": [
        "6B5ADFC73E5B4AE28055661BC88E74AA",
        "5E43A92BBB3E4EE3836C633DDAD007C5"
      ],
      "parentId": "6B5ADFC73E5B4AE28055661BC88E74AA"
    },
    "6B5ADFC73E5B4AE28055661BC88E74AA": {
      "id": "6B5ADFC73E5B4AE28055661BC88E74AA",
      "asnIdentifier": null,
      "position": 7000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.CS.03",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine potential solutions to solve simple hardware and software problems using common troubleshooting strategies.",
      "comments": [],
      "ancestorIds": [
        "5E43A92BBB3E4EE3836C633DDAD007C5"
      ],
      "parentId": "5E43A92BBB3E4EE3836C633DDAD007C5"
    },
    "F45FD907CFF14020AA1B926112BA4BAC": {
      "id": "F45FD907CFF14020AA1B926112BA4BAC",
      "asnIdentifier": null,
      "position": 6000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "In order for a person to accomplish tasks with a computer, both hardware and software are needed. At this stage, a model should only include the basic elements of a computer system, such as input, output, processor, sensors, and storage. Students could draw a model on paper or in a drawing program, program an animation to demonstrate it, or demonstrate it by acting this out in some way.",
      "comments": [],
      "ancestorIds": [
        "F0D1656C6DDD4BB1ABC0E36D63D90E03",
        "5E43A92BBB3E4EE3836C633DDAD007C5"
      ],
      "parentId": "F0D1656C6DDD4BB1ABC0E36D63D90E03"
    },
    "F0D1656C6DDD4BB1ABC0E36D63D90E03": {
      "id": "F0D1656C6DDD4BB1ABC0E36D63D90E03",
      "asnIdentifier": null,
      "position": 5000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.CS.02",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Model how computer hardware and software work together as a system to accomplish tasks.",
      "comments": [],
      "ancestorIds": [
        "5E43A92BBB3E4EE3836C633DDAD007C5"
      ],
      "parentId": "5E43A92BBB3E4EE3836C633DDAD007C5"
    },
    "7635DF5BCADF4121A28E1088A03B2611": {
      "id": "7635DF5BCADF4121A28E1088A03B2611",
      "asnIdentifier": null,
      "position": 4000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing devices often depend on other devices or components. For example, a robot depends on a physically attached light sensor to detect changes in brightness, whereas the light sensor depends on the robot for power. Keyboard input or a mouse click could cause an action to happen or information to be displayed on a screen; this could only happen because the computer has a processor to evaluate what is happening externally and produce corresponding responses. Students should describe how devices and components interact using correct terminology.",
      "comments": [],
      "ancestorIds": [
        "588F9C2536CA41A49D7CBC19F3F8F417",
        "5E43A92BBB3E4EE3836C633DDAD007C5"
      ],
      "parentId": "588F9C2536CA41A49D7CBC19F3F8F417"
    },
    "588F9C2536CA41A49D7CBC19F3F8F417": {
      "id": "588F9C2536CA41A49D7CBC19F3F8F417",
      "asnIdentifier": null,
      "position": 3000,
      "depth": 1,
      "listId": "",
      "statementNotation": "1B.CS.01",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe how internal and external parts of computing devices function to form a system.",
      "comments": [],
      "ancestorIds": [
        "5E43A92BBB3E4EE3836C633DDAD007C5"
      ],
      "parentId": "5E43A92BBB3E4EE3836C633DDAD007C5"
    },
    "5E43A92BBB3E4EE3836C633DDAD007C5": {
      "id": "5E43A92BBB3E4EE3836C633DDAD007C5",
      "asnIdentifier": null,
      "position": 2000,
      "depth": 0,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computing Systems",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "5274CF5974A8450792B934C2A9C3D370": {
      "id": "5274CF5974A8450792B934C2A9C3D370",
      "asnIdentifier": null,
      "position": 1000,
      "depth": 2,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Levels 1A, 1B, 2, and 3A are the computer science standards for ALL students. The Level 3B standards are intended for students who wish to pursue the study of computer science in high school beyond what is required for all students (specialty or elective courses).Â ",
      "comments": [],
      "ancestorIds": [
        "D6998CE3855748F48199DF585CDA1B5D"
      ],
      "parentId": "D6998CE3855748F48199DF585CDA1B5D"
    },
    "D6998CE3855748F48199DF585CDA1B5D": {
      "id": "D6998CE3855748F48199DF585CDA1B5D",
      "asnIdentifier": null,
      "position": 0,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Note: Following are the CSTA Standards (performance expectations) with California modified descriptive statements and identified cross-curricular standards alignments with NGSS, CCSS, etc.Â ",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    }
  }
}