{
  "id": "567821FD09EB4553B0E3777C60E36B9B",
  "title": "Big Idea #2 - Representation & Reasoning: Grades K-2",
  "subject": "AI Guidelines (2020-2022)",
  "normalizedSubject": null,
  "educationLevels": [
    "02",
    "01",
    "K"
  ],
  "cspStatus": {
    "value": "visible",
    "notes": null
  },
  "license": {
    "title": "CC BY 4.0 US",
    "URL": "http://creativecommons.org/licenses/by/4.0/us/",
    "rightsHolder": "Common Curriculum, Inc."
  },
  "document": {
    "title": "Big Idea #2: Representation & Reasoning",
    "sourceURL": "https://airtable.com/appAqCJWFHZMaNUh2/tblGy4kx6tGuscLHj/viwE5G0UuqG8WME5q/recxcTKIhgIFhboVS/fldIxltCXshIi374r/attXwjag0iceIuUIF?blocks=hide"
  },
  "jurisdiction": {
    "id": "75A424F5E3EC45F78DDE9D9F7E32A703",
    "title": "AI4K12"
  },
  "standards": {
    "EE51024366D14ED09F5946B6DEEBE914": {
      "id": "EE51024366D14ED09F5946B6DEEBE914",
      "asnIdentifier": null,
      "position": 1032,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.C.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Unpacked: Students could solve a classification\nproblem using the table of features they developed\nin 2-A-iv, or the decision tree they developed in 3-\nA-v. They could solve a map search problem using\nthe map they developed in 2-A-i.",
      "comments": [],
      "ancestorIds": [
        "C7C85A7035814224854432A723124A1B",
        "D204010BB3554C90ACBE2D33CBAE341F"
      ],
      "parentId": "C7C85A7035814224854432A723124A1B"
    },
    "BF49DCAFD74744DEA072438B74DD464C": {
      "id": "BF49DCAFD74744DEA072438B74DD464C",
      "asnIdentifier": null,
      "position": 1031,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.C.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: Reasoning algorithms are ways to solve\nreasoning problems. ",
      "comments": [],
      "ancestorIds": [
        "C7C85A7035814224854432A723124A1B",
        "D204010BB3554C90ACBE2D33CBAE341F"
      ],
      "parentId": "C7C85A7035814224854432A723124A1B"
    },
    "464FED81069C443BA543AB24EEF986E5": {
      "id": "464FED81069C443BA543AB24EEF986E5",
      "asnIdentifier": null,
      "position": 1030,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.C.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO: Model the use of a classification or search\nalgorithm to solve a problem.",
      "comments": [],
      "ancestorIds": [
        "C7C85A7035814224854432A723124A1B",
        "D204010BB3554C90ACBE2D33CBAE341F"
      ],
      "parentId": "C7C85A7035814224854432A723124A1B"
    },
    "C7C85A7035814224854432A723124A1B": {
      "id": "C7C85A7035814224854432A723124A1B",
      "asnIdentifier": null,
      "position": 1029,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(Reasoning algorithms) ",
      "comments": [],
      "ancestorIds": [
        "D204010BB3554C90ACBE2D33CBAE341F"
      ],
      "parentId": "D204010BB3554C90ACBE2D33CBAE341F"
    },
    "D6E8135D14034087B1D2FE7800C13985": {
      "id": "D6E8135D14034087B1D2FE7800C13985",
      "asnIdentifier": null,
      "position": 1028,
      "depth": 2,
      "listId": "i",
      "statementNotation": "2.C.i",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: In classification problems we decide what kind\nof thing we have based on its features. In search\nproblems we find a path from a start to a goal,\nsuch as finding a route on a map or exploring\npossible moves in a game.",
      "comments": [],
      "ancestorIds": [
        "0AC64064902C4DC898D676FCF84F31D3",
        "D204010BB3554C90ACBE2D33CBAE341F"
      ],
      "parentId": "0AC64064902C4DC898D676FCF84F31D3"
    },
    "16C69228EC2D4C0A8C70FB2A58B0EEDA": {
      "id": "16C69228EC2D4C0A8C70FB2A58B0EEDA",
      "asnIdentifier": null,
      "position": 1027,
      "depth": 2,
      "listId": "i",
      "statementNotation": "2.C.i",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO: Identify problems as either classification\nproblems or search problems.",
      "comments": [],
      "ancestorIds": [
        "0AC64064902C4DC898D676FCF84F31D3",
        "D204010BB3554C90ACBE2D33CBAE341F"
      ],
      "parentId": "0AC64064902C4DC898D676FCF84F31D3"
    },
    "0AC64064902C4DC898D676FCF84F31D3": {
      "id": "0AC64064902C4DC898D676FCF84F31D3",
      "asnIdentifier": null,
      "position": 1026,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(Types of reasoning\nproblems)",
      "comments": [],
      "ancestorIds": [
        "D204010BB3554C90ACBE2D33CBAE341F"
      ],
      "parentId": "D204010BB3554C90ACBE2D33CBAE341F"
    },
    "D204010BB3554C90ACBE2D33CBAE341F": {
      "id": "D204010BB3554C90ACBE2D33CBAE341F",
      "asnIdentifier": null,
      "position": 1025,
      "depth": 0,
      "listId": "C",
      "statementNotation": "2.C",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Reasoning",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "FB7A2043F9C549B2A03EE19BFD6D8DA6": {
      "id": "FB7A2043F9C549B2A03EE19BFD6D8DA6",
      "asnIdentifier": null,
      "position": 1024,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.B.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Unpacked: Students will draw a three-node tree,\nwith the starting game state as the root, and two\nbranches descending from the root showing\nalternative moves. The starting",
      "comments": [],
      "ancestorIds": [
        "F9D98B87C21B43B38D4439B9DA9E6718",
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "F9D98B87C21B43B38D4439B9DA9E6718"
    },
    "699B5A5E427E4C4497A9F8CE3CAFF771": {
      "id": "699B5A5E427E4C4497A9F8CE3CAFF771",
      "asnIdentifier": null,
      "position": 1023,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.B.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: A computer must make choices when playing\ngames, in the same way that humans do.",
      "comments": [],
      "ancestorIds": [
        "F9D98B87C21B43B38D4439B9DA9E6718",
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "F9D98B87C21B43B38D4439B9DA9E6718"
    },
    "C82DD1CFA1D4442FB1474E00DEA77777": {
      "id": "C82DD1CFA1D4442FB1474E00DEA77777",
      "asnIdentifier": null,
      "position": 1022,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.B.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO: Draw a simple search tree to illustrate two\npossible choices of moves by drawing two different\nsuccessor states to a given tic-tac-toe-game board\nstate, forming a tree. ",
      "comments": [],
      "ancestorIds": [
        "F9D98B87C21B43B38D4439B9DA9E6718",
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "F9D98B87C21B43B38D4439B9DA9E6718"
    },
    "F9D98B87C21B43B38D4439B9DA9E6718": {
      "id": "F9D98B87C21B43B38D4439B9DA9E6718",
      "asnIdentifier": null,
      "position": 1021,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(Combinatorial search)",
      "comments": [],
      "ancestorIds": [
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "349C2BED345A4663A9398976AA87C5F4"
    },
    "E3090A60B0E74B34A9A4A4E6D4D5C133": {
      "id": "E3090A60B0E74B34A9A4A4E6D4D5C133",
      "asnIdentifier": null,
      "position": 1020,
      "depth": 2,
      "listId": "i",
      "statementNotation": "2.B.i",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Unpacked: Each state should be drawn as a\nseparate tic-tac-toe board. Answers may vary\ndepending on which move the student chooses to\nmake.",
      "comments": [],
      "ancestorIds": [
        "855BE86973A04CA0B528292CE77FB758",
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "855BE86973A04CA0B528292CE77FB758"
    },
    "FEC9CA74D3134F218FC89DB99158F24F": {
      "id": "FEC9CA74D3134F218FC89DB99158F24F",
      "asnIdentifier": null,
      "position": 1019,
      "depth": 2,
      "listId": "i",
      "statementNotation": "2.B.i",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: A game such as tic-tac-toe can be described\nas a sequence of states, where each move\ntransitions from a state to a successor state.",
      "comments": [],
      "ancestorIds": [
        "855BE86973A04CA0B528292CE77FB758",
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "855BE86973A04CA0B528292CE77FB758"
    },
    "B59F4C6F08BD4F1C912651735D2F33D9": {
      "id": "B59F4C6F08BD4F1C912651735D2F33D9",
      "asnIdentifier": null,
      "position": 1018,
      "depth": 2,
      "listId": "i",
      "statementNotation": "2.B.i",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO: Illustrate a next possible state in the game of\ntic-tac-toe given a starting state. ",
      "comments": [],
      "ancestorIds": [
        "855BE86973A04CA0B528292CE77FB758",
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "855BE86973A04CA0B528292CE77FB758"
    },
    "855BE86973A04CA0B528292CE77FB758": {
      "id": "855BE86973A04CA0B528292CE77FB758",
      "asnIdentifier": null,
      "position": 1017,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(State spaces and\noperators)",
      "comments": [],
      "ancestorIds": [
        "349C2BED345A4663A9398976AA87C5F4"
      ],
      "parentId": "349C2BED345A4663A9398976AA87C5F4"
    },
    "349C2BED345A4663A9398976AA87C5F4": {
      "id": "349C2BED345A4663A9398976AA87C5F4",
      "asnIdentifier": null,
      "position": 1016,
      "depth": 0,
      "listId": "B",
      "statementNotation": "2.B",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Search",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "290FF2E9A715459EBFC0D432D5D5271A": {
      "id": "290FF2E9A715459EBFC0D432D5D5271A",
      "asnIdentifier": null,
      "position": 1015,
      "depth": 2,
      "listId": "iv",
      "statementNotation": "2.A.iv",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Unpacked: This could be as simple as Legos\nbricks of different shapes, sizes, and colors, or\nfeatures that distinguish different types of animals:\ncats, dogs, chickens, goldfish, penguins, etc., e.g.,\ndoes it have fur, does it fly, etc. Another option is\nfeatures that describe face emojis indicating\ndifferent emotional states.",
      "comments": [],
      "ancestorIds": [
        "043FC2F347134D3692C5FEB6ED428E4D",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "043FC2F347134D3692C5FEB6ED428E4D"
    },
    "AD93375E06044F76841D56EA2662C176": {
      "id": "AD93375E06044F76841D56EA2662C176",
      "asnIdentifier": null,
      "position": 1014,
      "depth": 2,
      "listId": "iv",
      "statementNotation": "2.A.iv",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: Objects can be described in terms of the\nfeatures they possess.",
      "comments": [],
      "ancestorIds": [
        "043FC2F347134D3692C5FEB6ED428E4D",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "043FC2F347134D3692C5FEB6ED428E4D"
    },
    "466C9188A0AD4A75A7F402AE954630F6": {
      "id": "466C9188A0AD4A75A7F402AE954630F6",
      "asnIdentifier": null,
      "position": 1013,
      "depth": 2,
      "listId": "iv",
      "statementNotation": "2.A.iv",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO: Identify the features that make each object in\na collection unique. and create a table of features\nto organize the objects.",
      "comments": [],
      "ancestorIds": [
        "043FC2F347134D3692C5FEB6ED428E4D",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "043FC2F347134D3692C5FEB6ED428E4D"
    },
    "043FC2F347134D3692C5FEB6ED428E4D": {
      "id": "043FC2F347134D3692C5FEB6ED428E4D",
      "asnIdentifier": null,
      "position": 1012,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(Feature vectors)",
      "comments": [],
      "ancestorIds": [
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "09E7D574364640A09D31226D0675D815"
    },
    "9DB0DD52F27046C0892BA61C032AC703": {
      "id": "9DB0DD52F27046C0892BA61C032AC703",
      "asnIdentifier": null,
      "position": 1011,
      "depth": 2,
      "listId": "iii",
      "statementNotation": "2.A.iii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Unpacked: Many types of data could be placed on\na branch. For a decision tree, the data would be\nquestions and answers. For an ancestry tree, there\nwould be \"mother of\" branches and \"father of\"\nbranches. For a taxonomic tree there would be\ntaxa of increasing specificity, e.g., animals and\nplants, mammals and reptiles, primates and\nrodents.",
      "comments": [],
      "ancestorIds": [
        "E3DE0FFB386E4C22A7A4CF1FD570D1FA",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "E3DE0FFB386E4C22A7A4CF1FD570D1FA"
    },
    "8E0F926830644FA2824009D132E649B2": {
      "id": "8E0F926830644FA2824009D132E649B2",
      "asnIdentifier": null,
      "position": 1010,
      "depth": 2,
      "listId": "iii",
      "statementNotation": "2.A.iii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: A tree is a way of organizing information. ",
      "comments": [],
      "ancestorIds": [
        "E3DE0FFB386E4C22A7A4CF1FD570D1FA",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "E3DE0FFB386E4C22A7A4CF1FD570D1FA"
    },
    "08D0D9FAD19044E08BE19DC2B3D1AAC9": {
      "id": "08D0D9FAD19044E08BE19DC2B3D1AAC9",
      "asnIdentifier": null,
      "position": 1009,
      "depth": 2,
      "listId": "iii",
      "statementNotation": "2.A.iii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO Draw a tree by repeatedly splitting each branch\ninto sub-branches multiple times, and putting a\npiece of data at each branch. ",
      "comments": [],
      "ancestorIds": [
        "E3DE0FFB386E4C22A7A4CF1FD570D1FA",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "E3DE0FFB386E4C22A7A4CF1FD570D1FA"
    },
    "E3DE0FFB386E4C22A7A4CF1FD570D1FA": {
      "id": "E3DE0FFB386E4C22A7A4CF1FD570D1FA",
      "asnIdentifier": null,
      "position": 1008,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(Data structures) ",
      "comments": [],
      "ancestorIds": [
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "09E7D574364640A09D31226D0675D815"
    },
    "50E4FAA31BB14BB49F1DFC2C53D853E7": {
      "id": "50E4FAA31BB14BB49F1DFC2C53D853E7",
      "asnIdentifier": null,
      "position": 1007,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.A.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Unpacked: Examples of symbols include male and\nfemale signs on restrooms, emojis, the\nclubs/diamonds/hearts/spades suits in a deck of\ncards, the dollar and cents signs for currency, red\noctagons for stop signs, and the \"Mr. Yuk\" poison\nsymbol. AI programs use symbols just as people\ndo. ",
      "comments": [],
      "ancestorIds": [
        "DA94B462417143DCAA6B83DCF85B1FEB",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "DA94B462417143DCAA6B83DCF85B1FEB"
    },
    "9063309377CB421D8E7B13D429CB340D": {
      "id": "9063309377CB421D8E7B13D429CB340D",
      "asnIdentifier": null,
      "position": 1006,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.A.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: Concepts can be represented using symbols\nin place of words.",
      "comments": [],
      "ancestorIds": [
        "DA94B462417143DCAA6B83DCF85B1FEB",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "DA94B462417143DCAA6B83DCF85B1FEB"
    },
    "E485C3EEE58E496B8CB0FF111D96CF15": {
      "id": "E485C3EEE58E496B8CB0FF111D96CF15",
      "asnIdentifier": null,
      "position": 1005,
      "depth": 2,
      "listId": "ii",
      "statementNotation": "2.A.ii",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO: Give examples of symbols you encounter in\ndaily life. ",
      "comments": [],
      "ancestorIds": [
        "DA94B462417143DCAA6B83DCF85B1FEB",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "DA94B462417143DCAA6B83DCF85B1FEB"
    },
    "DA94B462417143DCAA6B83DCF85B1FEB": {
      "id": "DA94B462417143DCAA6B83DCF85B1FEB",
      "asnIdentifier": null,
      "position": 1004,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(Symbolic\nrepresentations) ",
      "comments": [],
      "ancestorIds": [
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "09E7D574364640A09D31226D0675D815"
    },
    "DDEBCB42DB894A3599B3D40D56A0245B": {
      "id": "DDEBCB42DB894A3599B3D40D56A0245B",
      "asnIdentifier": null,
      "position": 1003,
      "depth": 2,
      "listId": "i",
      "statementNotation": "2.A.i",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "EU: The map is not the territory. A map is a\nrepresentation of a territory. ",
      "comments": [],
      "ancestorIds": [
        "C815C68ADF8D47F9B735B44957EEAAD1",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "C815C68ADF8D47F9B735B44957EEAAD1"
    },
    "994D860ABE8E46F0A17A19550E539049": {
      "id": "994D860ABE8E46F0A17A19550E539049",
      "asnIdentifier": null,
      "position": 1002,
      "depth": 2,
      "listId": "i",
      "statementNotation": "2.A.i",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "LO: Construct a map of a home, school, or\nneighborhood.",
      "comments": [],
      "ancestorIds": [
        "C815C68ADF8D47F9B735B44957EEAAD1",
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "C815C68ADF8D47F9B735B44957EEAAD1"
    },
    "C815C68ADF8D47F9B735B44957EEAAD1": {
      "id": "C815C68ADF8D47F9B735B44957EEAAD1",
      "asnIdentifier": null,
      "position": 1001,
      "depth": 1,
      "listId": "",
      "statementNotation": "",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "(Abstraction)",
      "comments": [],
      "ancestorIds": [
        "09E7D574364640A09D31226D0675D815"
      ],
      "parentId": "09E7D574364640A09D31226D0675D815"
    },
    "09E7D574364640A09D31226D0675D815": {
      "id": "09E7D574364640A09D31226D0675D815",
      "asnIdentifier": null,
      "position": 1000,
      "depth": 0,
      "listId": "A",
      "statementNotation": "2.A",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Representation",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    }
  }
}