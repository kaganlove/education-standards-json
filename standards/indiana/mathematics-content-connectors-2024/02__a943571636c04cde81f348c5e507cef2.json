{
  "id": "A943571636C04CDE81F348C5E507CEF2",
  "title": "Grade 2",
  "subject": "Mathematics Content Connectors (2024-)",
  "normalizedSubject": null,
  "educationLevels": [
    "02"
  ],
  "cspStatus": {
    "value": "visible",
    "notes": null
  },
  "license": {
    "title": "CC BY 4.0 US",
    "URL": "http://creativecommons.org/licenses/by/4.0/us/",
    "rightsHolder": "Common Curriculum, Inc."
  },
  "document": {
    "title": "2024 Indiana Content Connectors: Grade 2 Mathematics",
    "sourceURL": "https://www.in.gov/doe/files/Grade2-Math-Content-Connectors.docx.pdf"
  },
  "jurisdiction": {
    "id": "0F7091AB177F40D8B71B326CAFD13C8D",
    "title": "Indiana"
  },
  "standards": {
    "21BE705759B443B991D9B63F1F5641D5": {
      "id": "21BE705759B443B991D9B63F1F5641D5",
      "asnIdentifier": null,
      "position": 1044,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.DA.1a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "With guidance, collect and organize data into simple bar\ngraphs and pictographs with scales of five or ten. Answer simple\nquestions about the total number of data points, how many in each\ncategory, and how many more or how many less. ",
      "comments": [],
      "ancestorIds": [
        "3DA9C5DE631E44F382889CC0E1941921",
        "5DE3905618C34F4690A2AEEC4C714614"
      ],
      "parentId": "3DA9C5DE631E44F382889CC0E1941921"
    },
    "3DA9C5DE631E44F382889CC0E1941921": {
      "id": "3DA9C5DE631E44F382889CC0E1941921",
      "asnIdentifier": null,
      "position": 1043,
      "depth": 1,
      "listId": "1",
      "statementNotation": "2.DA.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Collect, organize, and graph data from observations, surveys,\nand investigations using scaled bar graphs and pictographs (limit scale\nto 2s, 5s, 10s, and 100s); interpret mathematical relationships within\nthe data using grade-level addition, subtraction, and comparison\nstrategies. (E) ",
      "comments": [],
      "ancestorIds": [
        "5DE3905618C34F4690A2AEEC4C714614"
      ],
      "parentId": "5DE3905618C34F4690A2AEEC4C714614"
    },
    "5DE3905618C34F4690A2AEEC4C714614": {
      "id": "5DE3905618C34F4690A2AEEC4C714614",
      "asnIdentifier": null,
      "position": 1042,
      "depth": 0,
      "listId": "",
      "statementNotation": "DA",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data Analysis",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "3F5096E93FEF48109F56894AB3F3E19A": {
      "id": "3F5096E93FEF48109F56894AB3F3E19A",
      "asnIdentifier": null,
      "position": 1041,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.M.6a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify a penny, nickel, dime, quarter, and dollar. Identify the\nvalue of a collection of coins up to one dollar or dollars up to ten\ndollars. (E)",
      "comments": [],
      "ancestorIds": [
        "A8B246A40FDF42F3A9BC746132EF9141",
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "A8B246A40FDF42F3A9BC746132EF9141"
    },
    "A8B246A40FDF42F3A9BC746132EF9141": {
      "id": "A8B246A40FDF42F3A9BC746132EF9141",
      "asnIdentifier": null,
      "position": 1040,
      "depth": 1,
      "listId": "6",
      "statementNotation": "2.M.6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Find the value of a collection of pennies, nickels, dimes,\nquarters, and dollars. (E)",
      "comments": [],
      "ancestorIds": [
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "F5DDA6CE991F40AA96E7ECD8D30DA450"
    },
    "9E6C375F841D4AF8A5B5F4F33345C3C1": {
      "id": "9E6C375F841D4AF8A5B5F4F33345C3C1",
      "asnIdentifier": null,
      "position": 1039,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.M.5a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Demonstrate understanding of the relationships among\nseconds, minutes, hours, days, weeks, months, and years. (E)",
      "comments": [],
      "ancestorIds": [
        "C01395C559AC4E99B49309D81D16A55B",
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "C01395C559AC4E99B49309D81D16A55B"
    },
    "C01395C559AC4E99B49309D81D16A55B": {
      "id": "C01395C559AC4E99B49309D81D16A55B",
      "asnIdentifier": null,
      "position": 1038,
      "depth": 1,
      "listId": "5",
      "statementNotation": "2.M.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe relationships of time, including seconds in a minute;\nminutes in an hour; hours in a day; days in a week; and days, weeks,\nand months in a year. ",
      "comments": [],
      "ancestorIds": [
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "F5DDA6CE991F40AA96E7ECD8D30DA450"
    },
    "41A70388DE4B4319A4717EE30FCD3C5E": {
      "id": "41A70388DE4B4319A4717EE30FCD3C5E",
      "asnIdentifier": null,
      "position": 1037,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.M.4a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Tell time to the nearest half-hour using analog clocks and\na.m. and p.m. Solve real-world problems involving addition and\nsubtraction of time intervals on the hour or half-hour. (E) ",
      "comments": [],
      "ancestorIds": [
        "9FF159F3B4624DDF9ADBA57D01B521C8",
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "9FF159F3B4624DDF9ADBA57D01B521C8"
    },
    "9FF159F3B4624DDF9ADBA57D01B521C8": {
      "id": "9FF159F3B4624DDF9ADBA57D01B521C8",
      "asnIdentifier": null,
      "position": 1036,
      "depth": 1,
      "listId": "4",
      "statementNotation": "2.M.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Tell and write time to the nearest five minutes from analog\nclocks, using a.m. and p.m. Solve real-world problems involving\naddition and subtraction of time intervals on the hour or half hour. (E)",
      "comments": [],
      "ancestorIds": [
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "F5DDA6CE991F40AA96E7ECD8D30DA450"
    },
    "68FADFD9ED5F4B758C722DA28DC3E0E0": {
      "id": "68FADFD9ED5F4B758C722DA28DC3E0E0",
      "asnIdentifier": null,
      "position": 1035,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.M.3a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify the appropriate tool and unit of measurement to\nmeasure volume in cups and pints. Add and subtract to solve\nreal-world problems involving cups and pints.",
      "comments": [],
      "ancestorIds": [
        "21A5AE0410F54F21A28C05FCBD168486",
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "21A5AE0410F54F21A28C05FCBD168486"
    },
    "21A5AE0410F54F21A28C05FCBD168486": {
      "id": "21A5AE0410F54F21A28C05FCBD168486",
      "asnIdentifier": null,
      "position": 1034,
      "depth": 1,
      "listId": "3",
      "statementNotation": "2.M.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Estimate and measure volume (capacity) using cups and pints.\nAdd and subtract to solve real-world problems involving capacities that\nare given in the same units or obtained through investigations. (E)",
      "comments": [],
      "ancestorIds": [
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "F5DDA6CE991F40AA96E7ECD8D30DA450"
    },
    "A0F168AB61F24AE0BEA3AD23F8205CDB": {
      "id": "A0F168AB61F24AE0BEA3AD23F8205CDB",
      "asnIdentifier": null,
      "position": 1033,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.M.2a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify the appropriate tool (ruler, yard stick, or measuring\ntape) and unit of measurement to measure an object to the nearest\ninch or foot. (E)",
      "comments": [],
      "ancestorIds": [
        "28BC2372D90844B59CE87480F30047D2",
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "28BC2372D90844B59CE87480F30047D2"
    },
    "28BC2372D90844B59CE87480F30047D2": {
      "id": "28BC2372D90844B59CE87480F30047D2",
      "asnIdentifier": null,
      "position": 1032,
      "depth": 1,
      "listId": "2",
      "statementNotation": "2.M.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Estimate and measure the length of an object by selecting and\nusing appropriate tools, such as rulers, yardsticks, meter sticks, and\nmeasuring tapes to the nearest inch, foot, yard, centimeter, and meter.\n(E) ",
      "comments": [],
      "ancestorIds": [
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "F5DDA6CE991F40AA96E7ECD8D30DA450"
    },
    "976E721DA2134B5B8780A5E3B44A127D": {
      "id": "976E721DA2134B5B8780A5E3B44A127D",
      "asnIdentifier": null,
      "position": 1031,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.M.1a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe the relationships among an inch, foot, and yard. ",
      "comments": [],
      "ancestorIds": [
        "22852C1A91FB4C5D9C0754D3D8675D4B",
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "22852C1A91FB4C5D9C0754D3D8675D4B"
    },
    "22852C1A91FB4C5D9C0754D3D8675D4B": {
      "id": "22852C1A91FB4C5D9C0754D3D8675D4B",
      "asnIdentifier": null,
      "position": 1030,
      "depth": 1,
      "listId": "1",
      "statementNotation": "2.M.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Describe the relationships among an inch, foot, and yard.\nDescribe the relationship between a centimeter and meter.",
      "comments": [],
      "ancestorIds": [
        "F5DDA6CE991F40AA96E7ECD8D30DA450"
      ],
      "parentId": "F5DDA6CE991F40AA96E7ECD8D30DA450"
    },
    "F5DDA6CE991F40AA96E7ECD8D30DA450": {
      "id": "F5DDA6CE991F40AA96E7ECD8D30DA450",
      "asnIdentifier": null,
      "position": 1029,
      "depth": 0,
      "listId": "",
      "statementNotation": "M",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measurement",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "3A7DECE0B53741E191405CF11E58AD7A": {
      "id": "3A7DECE0B53741E191405CF11E58AD7A",
      "asnIdentifier": null,
      "position": 1028,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.G.4a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Partition circles and rectangles into two, three, and four equal\nparts. Label each part of a partitioned shape using words such as\nhalves, thirds, fourths, half of, third of, etc. (E)",
      "comments": [],
      "ancestorIds": [
        "952DAB5F183A44FB9106ECFE8679D4BE",
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "952DAB5F183A44FB9106ECFE8679D4BE"
    },
    "952DAB5F183A44FB9106ECFE8679D4BE": {
      "id": "952DAB5F183A44FB9106ECFE8679D4BE",
      "asnIdentifier": null,
      "position": 1027,
      "depth": 1,
      "listId": "4",
      "statementNotation": "2.G.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Partition circles and rectangles into two, three, or four equal\nparts; describe the shares using the words halves, thirds, half of, a\nthird of, etc.; and describe the whole as two halves, three thirds, or\nfour fourths. Recognize that equal parts of identical wholes need not\nhave the same shape.",
      "comments": [],
      "ancestorIds": [
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "5CD862629C8540E487E9C66AF5032D01"
    },
    "8D31E60CF26244258E346B357729988D": {
      "id": "8D31E60CF26244258E346B357729988D",
      "asnIdentifier": null,
      "position": 1026,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.G.3a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Given a rectangle partitioned into rows and columns of\nsame-size (unit) squares, count to find the total number of\nsame-size squares. ",
      "comments": [],
      "ancestorIds": [
        "847A6856D35D4D3B8A5F805BA8CEA513",
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "847A6856D35D4D3B8A5F805BA8CEA513"
    },
    "847A6856D35D4D3B8A5F805BA8CEA513": {
      "id": "847A6856D35D4D3B8A5F805BA8CEA513",
      "asnIdentifier": null,
      "position": 1025,
      "depth": 1,
      "listId": "3",
      "statementNotation": "2.G.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Partition a rectangle into rows and columns of same-size (unit)\nsquares and count to find the total number of same-size squares.",
      "comments": [],
      "ancestorIds": [
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "5CD862629C8540E487E9C66AF5032D01"
    },
    "C5EF6092C345476FA96E62B103574654": {
      "id": "C5EF6092C345476FA96E62B103574654",
      "asnIdentifier": null,
      "position": 1024,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.G.2a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compose and decompose two- and three-dimensional\ncomposite shapes.",
      "comments": [],
      "ancestorIds": [
        "294569A8E653420299B7DBDBE2FDB272",
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "294569A8E653420299B7DBDBE2FDB272"
    },
    "294569A8E653420299B7DBDBE2FDB272": {
      "id": "294569A8E653420299B7DBDBE2FDB272",
      "asnIdentifier": null,
      "position": 1023,
      "depth": 1,
      "listId": "2",
      "statementNotation": "2.G.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Investigate and predict the result of composing and\ndecomposing two- and three-dimensional shapes.",
      "comments": [],
      "ancestorIds": [
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "5CD862629C8540E487E9C66AF5032D01"
    },
    "E0AD72AF9BAA41A5B4797A4772449149": {
      "id": "E0AD72AF9BAA41A5B4797A4772449149",
      "asnIdentifier": null,
      "position": 1022,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.G.1a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify and describe two-dimensional shapes (i.e.,\ntriangle, square, and rectangle). Identify and describe\nthree-dimensional shapes (e.g., cube and right rectangular prism).\nIdentify and count faces, sides, and vertices of three-dimensional\nshapes. ",
      "comments": [],
      "ancestorIds": [
        "6FF7EC31F1A34386954E0456C8941EDE",
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "6FF7EC31F1A34386954E0456C8941EDE"
    },
    "6FF7EC31F1A34386954E0456C8941EDE": {
      "id": "6FF7EC31F1A34386954E0456C8941EDE",
      "asnIdentifier": null,
      "position": 1021,
      "depth": 1,
      "listId": "1",
      "statementNotation": "2.G.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify, describe, and classify two- and three-dimensional\nshapes (i.e., triangle, square, rectangle, cube, right rectangular prism)\naccording to the number and shape of faces and the number of sides\nand/or vertices. Draw two-dimensional shapes.",
      "comments": [],
      "ancestorIds": [
        "5CD862629C8540E487E9C66AF5032D01"
      ],
      "parentId": "5CD862629C8540E487E9C66AF5032D01"
    },
    "5CD862629C8540E487E9C66AF5032D01": {
      "id": "5CD862629C8540E487E9C66AF5032D01",
      "asnIdentifier": null,
      "position": 1020,
      "depth": 0,
      "listId": "",
      "statementNotation": "G",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Geometry",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "4C07EC5277574CEAB5EC2397F145AF34": {
      "id": "4C07EC5277574CEAB5EC2397F145AF34",
      "asnIdentifier": null,
      "position": 1019,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.CA.4a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create and extend a number pattern using addition or\nsubtraction within 50 when given a rule.",
      "comments": [],
      "ancestorIds": [
        "9BA6927050044F4CB72992DB13B164A6",
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "9BA6927050044F4CB72992DB13B164A6"
    },
    "9BA6927050044F4CB72992DB13B164A6": {
      "id": "9BA6927050044F4CB72992DB13B164A6",
      "asnIdentifier": null,
      "position": 1018,
      "depth": 1,
      "listId": "4",
      "statementNotation": "2.CA.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Create, extend, and give an appropriate rule for number\npatterns using addition and subtraction within 1,000.",
      "comments": [],
      "ancestorIds": [
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "B1175F5B8EBE4612B9B98F2F87EAA382"
    },
    "55EDF37572734E5E99025DEC4603A328": {
      "id": "55EDF37572734E5E99025DEC4603A328",
      "asnIdentifier": null,
      "position": 1017,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.CA.3a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Show that the order in which two numbers are added\n(commutative property) and how the numbers are grouped in addition\n(associative property) will not change the sum. These properties can\nbe used to show that numbers can be added in any order. ",
      "comments": [],
      "ancestorIds": [
        "F9D215791C8544F8BFFC85110BF6D949",
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "F9D215791C8544F8BFFC85110BF6D949"
    },
    "F9D215791C8544F8BFFC85110BF6D949": {
      "id": "F9D215791C8544F8BFFC85110BF6D949",
      "asnIdentifier": null,
      "position": 1016,
      "depth": 1,
      "listId": "3",
      "statementNotation": "2.CA.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Show that the order in which two numbers are added\n(commutative property) and how the numbers are grouped in addition\n(associative property) will not change the sum. These properties can\nbe used to show that numbers can be added in any order. (E)",
      "comments": [],
      "ancestorIds": [
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "B1175F5B8EBE4612B9B98F2F87EAA382"
    },
    "06D04C87F25F4A77982624DE51B28FDC": {
      "id": "06D04C87F25F4A77982624DE51B28FDC",
      "asnIdentifier": null,
      "position": 1015,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.CA.2a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add and subtract numbers within 50 using models or\ndrawings, strategies based on place value, properties of\noperations, and/or the relationship between addition and\nsubtraction. (E)",
      "comments": [],
      "ancestorIds": [
        "DF54C133062B45F9A8B77ACD5E3BB562",
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "DF54C133062B45F9A8B77ACD5E3BB562"
    },
    "DF54C133062B45F9A8B77ACD5E3BB562": {
      "id": "DF54C133062B45F9A8B77ACD5E3BB562",
      "asnIdentifier": null,
      "position": 1014,
      "depth": 1,
      "listId": "2",
      "statementNotation": "2.CA.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Using number sense and place value strategies, add and\nsubtract within 1,000, including composing and decomposing tens and\nhundreds. Use models, drawings, and strategies based on place\nvalue, properties of operations, and/or the relationship between\naddition and subtraction; describe the strategy and explain the\nreasoning used.",
      "comments": [],
      "ancestorIds": [
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "B1175F5B8EBE4612B9B98F2F87EAA382"
    },
    "9E2DD4AF7A064A7E8F714B54CEC3ED2A": {
      "id": "9E2DD4AF7A064A7E8F714B54CEC3ED2A",
      "asnIdentifier": null,
      "position": 1013,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.CA.1a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Solve real-world addition and subtraction problems within\n50 using objects, drawings, or pictures. Use estimation to decide\nwhether answers are reasonable in addition problems. (E)",
      "comments": [],
      "ancestorIds": [
        "4D2E0716E10241EBA1143691B1447021",
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "4D2E0716E10241EBA1143691B1447021"
    },
    "4D2E0716E10241EBA1143691B1447021": {
      "id": "4D2E0716E10241EBA1143691B1447021",
      "asnIdentifier": null,
      "position": 1012,
      "depth": 1,
      "listId": "1",
      "statementNotation": "2.CA.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Solve real-world problems involving addition and subtraction\nwithin 100 in situations of adding to, taking from, putting together,\ntaking apart, and comparing, with unknowns in all parts of the addition\nor subtraction problem (e.g., by using drawings and equations with a\nsymbol for the unknown number to represent the problem). Use\nestimation to decide whether answers are reasonable in addition\nproblems. (E) ",
      "comments": [],
      "ancestorIds": [
        "B1175F5B8EBE4612B9B98F2F87EAA382"
      ],
      "parentId": "B1175F5B8EBE4612B9B98F2F87EAA382"
    },
    "B1175F5B8EBE4612B9B98F2F87EAA382": {
      "id": "B1175F5B8EBE4612B9B98F2F87EAA382",
      "asnIdentifier": null,
      "position": 1011,
      "depth": 0,
      "listId": "",
      "statementNotation": "CA",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Computation and Algebraic Thinking",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "7C41C83C1E214650A5B35228D5340C1C": {
      "id": "7C41C83C1E214650A5B35228D5340C1C",
      "asnIdentifier": null,
      "position": 1010,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.NS.5a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use place value modeling with objects and numbers to\ncompare two two-digit numbers up to 50 (e.g., identify more tens,\nless tens, more ones, less ones, larger value, smaller value). Record\nthe comparisons using > , = , and < symbols. (E) ",
      "comments": [],
      "ancestorIds": [
        "E3123356BC154F46ACAEB167EF64D7C2",
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "E3123356BC154F46ACAEB167EF64D7C2"
    },
    "E3123356BC154F46ACAEB167EF64D7C2": {
      "id": "E3123356BC154F46ACAEB167EF64D7C2",
      "asnIdentifier": null,
      "position": 1009,
      "depth": 1,
      "listId": "5",
      "statementNotation": "2.NS.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Use place value understanding to compare two three-digit\nnumbers based on meanings of the hundreds, tens, and ones digits,\nusing > , = , and < symbols to record the results of comparisons. (E)",
      "comments": [],
      "ancestorIds": [
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "26532E911C2B46A9854A8482DFA0DA19"
    },
    "F59EF4C87F324E2DB6C718964AE2F300": {
      "id": "F59EF4C87F324E2DB6C718964AE2F300",
      "asnIdentifier": null,
      "position": 1008,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.NS.4a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Build and model representations of numbers up to 50 by\ncreating groups of tens, and ones using objects and drawings. Build\nand model representations of multiples of 10 up to 50 by creating\ngroups of 10 using objects or drawings. Identify the value of the\nnumbers in the tens and ones place within a given number up to 50.\n(E) ",
      "comments": [],
      "ancestorIds": [
        "3B2C44AE641A490F9C2142749045167A",
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "3B2C44AE641A490F9C2142749045167A"
    },
    "3B2C44AE641A490F9C2142749045167A": {
      "id": "3B2C44AE641A490F9C2142749045167A",
      "asnIdentifier": null,
      "position": 1007,
      "depth": 1,
      "listId": "4",
      "statementNotation": "2.NS.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Define and model a \"hundred\" as a group of ten tens. Model\nplace value concepts of three-digit numbers, multiples of 100, and\nequivalent forms of whole numbers using objects and drawings. (E)",
      "comments": [],
      "ancestorIds": [
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "26532E911C2B46A9854A8482DFA0DA19"
    },
    "35E5754C94E340E49CA21FB4D7CE778B": {
      "id": "35E5754C94E340E49CA21FB4D7CE778B",
      "asnIdentifier": null,
      "position": 1006,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.NS.3a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify a group of objects up to 10 as odd or even. ",
      "comments": [],
      "ancestorIds": [
        "00655C486AE6446AB62991C33D0D9050",
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "00655C486AE6446AB62991C33D0D9050"
    },
    "00655C486AE6446AB62991C33D0D9050": {
      "id": "00655C486AE6446AB62991C33D0D9050",
      "asnIdentifier": null,
      "position": 1005,
      "depth": 1,
      "listId": "3",
      "statementNotation": "2.NS.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine whether a group of objects (up to 20) has an odd or\neven number of members (e.g., by placing that number of objects in\ntwo groups of the same size and recognizing that for even numbers no\nobject will be left over and for odd numbers one object will be left over,\nor by pairing objects or counting them by twos). ",
      "comments": [],
      "ancestorIds": [
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "26532E911C2B46A9854A8482DFA0DA19"
    },
    "6B951E0B937A4699A3C16F43AA2B7F6A": {
      "id": "6B951E0B937A4699A3C16F43AA2B7F6A",
      "asnIdentifier": null,
      "position": 1004,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.NS.2a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Read, write, and identify whole numbers up to 50. Use\nwords, models, standard form, or expanded form to represent and\nshow equivalent forms of whole numbers up to 50. (E) ",
      "comments": [],
      "ancestorIds": [
        "074B7DF07ED54BEF9157CD59DA7BA8C6",
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "074B7DF07ED54BEF9157CD59DA7BA8C6"
    },
    "074B7DF07ED54BEF9157CD59DA7BA8C6": {
      "id": "074B7DF07ED54BEF9157CD59DA7BA8C6",
      "asnIdentifier": null,
      "position": 1003,
      "depth": 1,
      "listId": "2",
      "statementNotation": "2.NS.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Read and write whole numbers up to 1,000. Use words,\nmodels, standard form, and expanded form to represent and show\nequivalent forms of whole numbers up to 1,000. (E)",
      "comments": [],
      "ancestorIds": [
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "26532E911C2B46A9854A8482DFA0DA19"
    },
    "C7C196DB6E0B439D8BE9C4112B0EED30": {
      "id": "C7C196DB6E0B439D8BE9C4112B0EED30",
      "asnIdentifier": null,
      "position": 1002,
      "depth": 2,
      "listId": "a",
      "statementNotation": "2.NS.1a",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Count to 50 by ones, twos, fives, and tens. Count on by\nones from any number up to 50. (E)",
      "comments": [],
      "ancestorIds": [
        "A4434129A50A437F851D0ACF5B2CE56E",
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "A4434129A50A437F851D0ACF5B2CE56E"
    },
    "A4434129A50A437F851D0ACF5B2CE56E": {
      "id": "A4434129A50A437F851D0ACF5B2CE56E",
      "asnIdentifier": null,
      "position": 1001,
      "depth": 1,
      "listId": "1",
      "statementNotation": "2.NS.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Count by ones, twos, fives, tens, and hundreds up to at least\n1,000 from any given number. (E)",
      "comments": [],
      "ancestorIds": [
        "26532E911C2B46A9854A8482DFA0DA19"
      ],
      "parentId": "26532E911C2B46A9854A8482DFA0DA19"
    },
    "26532E911C2B46A9854A8482DFA0DA19": {
      "id": "26532E911C2B46A9854A8482DFA0DA19",
      "asnIdentifier": null,
      "position": 1000,
      "depth": 0,
      "listId": "",
      "statementNotation": "NS",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Number Sense",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    }
  }
}