{
  "id": "0E98A26CAAAA4CC482A93480BC0A4A8A",
  "title": "Eureka Squared Math (FL B.E.S.T): Grade 1",
  "subject": "Mathematics",
  "normalizedSubject": null,
  "educationLevels": [
    "01"
  ],
  "cspStatus": {
    "value": "visible",
    "notes": null
  },
  "license": {
    "title": "CC BY 4.0 US",
    "URL": "http://creativecommons.org/licenses/by/4.0/us/",
    "rightsHolder": "Common Curriculum, Inc."
  },
  "document": {
    "title": "Eureka Squared Math (FL B.E.S.T)",
    "sourceURL": "https://digital.greatminds.org/explore/curricula/grade/module?curriculaCode=em2fl&gradeCode=em2fl.g1&moduleCode=em2fl.g1.m1"
  },
  "jurisdiction": {
    "id": "B23DB080EE3C40BDB6A0862365C88BB8",
    "title": "Queen of All Saints Academy"
  },
  "standards": {
    "CF30CD65234E437B9E5375A9CA0E95E5": {
      "id": "CF30CD65234E437B9E5375A9CA0E95E5",
      "asnIdentifier": null,
      "position": 104000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod6.AD6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify two-dimensional and three-dimensional shapes in parts of real-world objects.",
      "comments": [],
      "ancestorIds": [
        "9C201B68B44D4633A75DDFA779E90DC5",
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "9C201B68B44D4633A75DDFA779E90DC5"
    },
    "9C201B68B44D4633A75DDFA779E90DC5": {
      "id": "9C201B68B44D4633A75DDFA779E90DC5",
      "asnIdentifier": null,
      "position": 103000,
      "depth": 1,
      "listId": "4.",
      "statementNotation": "1.GR.1.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Given a real-world object, identify parts that are modeled by two- and three-dimensional figures. Figures are limited to semi-circles, triangles, rectangles, squares and hexagons, spheres, cubes, rectangular prisms, cones and cylinders.",
      "comments": [],
      "ancestorIds": [
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "81B79E8C9D424B359D103E15EA13A517"
    },
    "F86A25FC8E474C98944A0F745E7694BF": {
      "id": "F86A25FC8E474C98944A0F745E7694BF",
      "asnIdentifier": null,
      "position": 102000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod6.AD5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compose and decompose two-dimensional and three-dimensional shapes.",
      "comments": [],
      "ancestorIds": [
        "D2D4BFBE2C434ECFBBD40C92B3B629B4",
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "D2D4BFBE2C434ECFBBD40C92B3B629B4"
    },
    "D2D4BFBE2C434ECFBBD40C92B3B629B4": {
      "id": "D2D4BFBE2C434ECFBBD40C92B3B629B4",
      "asnIdentifier": null,
      "position": 101000,
      "depth": 1,
      "listId": "3.",
      "statementNotation": "1.GR.1.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compose and decompose two- and three-dimensional figures. Figures are limited to semi-circles, triangles, rectangles, squares, trapezoids, hexagons, cubes, rectangular prisms, cones and cylinders.",
      "comments": [],
      "ancestorIds": [
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "81B79E8C9D424B359D103E15EA13A517"
    },
    "745163D15FB0446B8621553305AF1FB5": {
      "id": "745163D15FB0446B8621553305AF1FB5",
      "asnIdentifier": null,
      "position": 100000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod6.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Draw two-dimensional shapes that have certain defining attributes.",
      "comments": [],
      "ancestorIds": [
        "E01A485BE41A4CED81A714889ABE26CD",
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "E01A485BE41A4CED81A714889ABE26CD"
    },
    "E01A485BE41A4CED81A714889ABE26CD": {
      "id": "E01A485BE41A4CED81A714889ABE26CD",
      "asnIdentifier": null,
      "position": 99000,
      "depth": 1,
      "listId": "2.",
      "statementNotation": "1.GR.1.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Sketch two-dimensional figures when given defining attributes. Figures are limited to triangles, rectangles, squares and hexagons.",
      "comments": [],
      "ancestorIds": [
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "81B79E8C9D424B359D103E15EA13A517"
    },
    "C7A79A3B43CA448E81A49E7389486242": {
      "id": "C7A79A3B43CA448E81A49E7389486242",
      "asnIdentifier": null,
      "position": 98000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod6.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify, compare, and sort two-dimensional shapes and three-dimensional shapes by using defining attributes.",
      "comments": [],
      "ancestorIds": [
        "8B2478FC63CE4CE69F3CEA0E6C259540",
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "8B2478FC63CE4CE69F3CEA0E6C259540"
    },
    "8B2478FC63CE4CE69F3CEA0E6C259540": {
      "id": "8B2478FC63CE4CE69F3CEA0E6C259540",
      "asnIdentifier": null,
      "position": 97000,
      "depth": 1,
      "listId": "1.",
      "statementNotation": "1.GR.1.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify, compare and sort two- and three-dimensional figures based on their defining attributes. Figures are limited to circles, semi-circles, triangles, rectangles, squares, trapezoids, hexagons, spheres, cubes, rectangular prisms, cones and cylinders.",
      "comments": [],
      "ancestorIds": [
        "81B79E8C9D424B359D103E15EA13A517"
      ],
      "parentId": "81B79E8C9D424B359D103E15EA13A517"
    },
    "81B79E8C9D424B359D103E15EA13A517": {
      "id": "81B79E8C9D424B359D103E15EA13A517",
      "asnIdentifier": null,
      "position": 96000,
      "depth": 0,
      "listId": "VI.",
      "statementNotation": "GR.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Geometric Reasoning",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "893BFD51B97A4F879AB56BAB2A1ABBFC": {
      "id": "893BFD51B97A4F879AB56BAB2A1ABBFC",
      "asnIdentifier": null,
      "position": 95000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod6.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Partition circles and rectangles into 2 or 4 equal shares and describe the shares by using the words halves or fourths.",
      "comments": [],
      "ancestorIds": [
        "A7AC2668826F40C7B93078FB53A42F24",
        "74647AF4D2F648FFACF6A73E7F920F95"
      ],
      "parentId": "A7AC2668826F40C7B93078FB53A42F24"
    },
    "A7AC2668826F40C7B93078FB53A42F24": {
      "id": "A7AC2668826F40C7B93078FB53A42F24",
      "asnIdentifier": null,
      "position": 94000,
      "depth": 1,
      "listId": "1.",
      "statementNotation": "1.FR.1.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Partition circles and rectangles into two and four equal-sized parts. Name the parts of the whole using appropriate language including halves or fourths.",
      "comments": [],
      "ancestorIds": [
        "74647AF4D2F648FFACF6A73E7F920F95"
      ],
      "parentId": "74647AF4D2F648FFACF6A73E7F920F95"
    },
    "74647AF4D2F648FFACF6A73E7F920F95": {
      "id": "74647AF4D2F648FFACF6A73E7F920F95",
      "asnIdentifier": null,
      "position": 93000,
      "depth": 0,
      "listId": "V.",
      "statementNotation": "FR.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Fractions",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "30CED6B22C674949A0B2D7985BE5AF1C": {
      "id": "30CED6B22C674949A0B2D7985BE5AF1C",
      "asnIdentifier": null,
      "position": 92000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod6.AD16",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the value of a set of bills up to $100 and show the amount by using the $ symbol.",
      "comments": [],
      "ancestorIds": [
        "CC8019E29BF545BCB0A58C1C2E1C31FA",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "CC8019E29BF545BCB0A58C1C2E1C31FA"
    },
    "EE6611861BEF40608834967C257602A3": {
      "id": "EE6611861BEF40608834967C257602A3",
      "asnIdentifier": null,
      "position": 91000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod6.AD15",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the value of a set of coins up to 1 dollar and show the amount by using the ¢ symbol.",
      "comments": [],
      "ancestorIds": [
        "CC8019E29BF545BCB0A58C1C2E1C31FA",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "CC8019E29BF545BCB0A58C1C2E1C31FA"
    },
    "CC8019E29BF545BCB0A58C1C2E1C31FA": {
      "id": "CC8019E29BF545BCB0A58C1C2E1C31FA",
      "asnIdentifier": null,
      "position": 90000,
      "depth": 1,
      "listId": "5.",
      "statementNotation": "1.M.2.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Find the value of combinations of pennies, nickels and dimes up to one dollar, and the value of combinations of one, five and ten dollar bills up to $100. Use the ¢ and $ symbols appropriately.",
      "comments": [],
      "ancestorIds": [
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
    },
    "83C7753F2C59401D91719E11F352C429": {
      "id": "83C7753F2C59401D91719E11F352C429",
      "asnIdentifier": null,
      "position": 89000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod6.AD14",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify coins, their values by using the ¢ symbol, and how many of each coin equal 1 dollar.",
      "comments": [],
      "ancestorIds": [
        "F6F8BFAE63654C5BBF5A2B99ECB06D4C",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "F6F8BFAE63654C5BBF5A2B99ECB06D4C"
    },
    "F6F8BFAE63654C5BBF5A2B99ECB06D4C": {
      "id": "F6F8BFAE63654C5BBF5A2B99ECB06D4C",
      "asnIdentifier": null,
      "position": 88000,
      "depth": 1,
      "listId": "4.",
      "statementNotation": "1.M.2.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify pennies, nickels, dimes and quarters, and express their values using the ¢ symbol. State how many of each coin equal a dollar.",
      "comments": [],
      "ancestorIds": [
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
    },
    "5E26FA4EAF8C4049B7ED3F5AE596CECB": {
      "id": "5E26FA4EAF8C4049B7ED3F5AE596CECB",
      "asnIdentifier": null,
      "position": 87000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod6.AD2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Tell time to the half hour, including using the term half past.",
      "comments": [],
      "ancestorIds": [
        "B6F5562E88BF4FFA8B978A865099EDF7",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "B6F5562E88BF4FFA8B978A865099EDF7"
    },
    "9D6A49079F1F4957B6E52222FAD3573A": {
      "id": "9D6A49079F1F4957B6E52222FAD3573A",
      "asnIdentifier": null,
      "position": 86000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod5.AD9",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Tell time to the hour and half hour on analog and digital clocks.",
      "comments": [],
      "ancestorIds": [
        "B6F5562E88BF4FFA8B978A865099EDF7",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "B6F5562E88BF4FFA8B978A865099EDF7"
    },
    "B6F5562E88BF4FFA8B978A865099EDF7": {
      "id": "B6F5562E88BF4FFA8B978A865099EDF7",
      "asnIdentifier": null,
      "position": 85000,
      "depth": 1,
      "listId": "3.",
      "statementNotation": "1.M.2.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Using analog and digital clocks, tell and write time in hours and half-hours.",
      "comments": [],
      "ancestorIds": [
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
    },
    "3C53069DD2BA4BC285AA02246827189F": {
      "id": "3C53069DD2BA4BC285AA02246827189F",
      "asnIdentifier": null,
      "position": 84000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod4.AD8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare the lengths of two objects indirectly by using a third object.",
      "comments": [],
      "ancestorIds": [
        "72CF66967A6D4CEAA36FE73D1BFFC1AE",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "72CF66967A6D4CEAA36FE73D1BFFC1AE"
    },
    "49ECFED6E2F2422590FE7C1EDC7894EB": {
      "id": "49ECFED6E2F2422590FE7C1EDC7894EB",
      "asnIdentifier": null,
      "position": 83000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod4.AD7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Order three objects by length by using direct comparison.",
      "comments": [],
      "ancestorIds": [
        "72CF66967A6D4CEAA36FE73D1BFFC1AE",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "72CF66967A6D4CEAA36FE73D1BFFC1AE"
    },
    "16455234A95441F88451BE841955100F": {
      "id": "16455234A95441F88451BE841955100F",
      "asnIdentifier": null,
      "position": 82000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod4.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measure and order the lengths of three or more objects.",
      "comments": [],
      "ancestorIds": [
        "72CF66967A6D4CEAA36FE73D1BFFC1AE",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "72CF66967A6D4CEAA36FE73D1BFFC1AE"
    },
    "72CF66967A6D4CEAA36FE73D1BFFC1AE": {
      "id": "72CF66967A6D4CEAA36FE73D1BFFC1AE",
      "asnIdentifier": null,
      "position": 81000,
      "depth": 1,
      "listId": "2.",
      "statementNotation": "MA.1.M.1.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare and order the length of up to three objects using direct and indirect comparison.",
      "comments": [],
      "ancestorIds": [
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
    },
    "D92C993DADF745E19A54692C53AB0D7E": {
      "id": "D92C993DADF745E19A54692C53AB0D7E",
      "asnIdentifier": null,
      "position": 80000,
      "depth": 2,
      "listId": "E",
      "statementNotation": "FL.1.Mod6.AD13",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measure lengths of objects to the nearest inch.",
      "comments": [],
      "ancestorIds": [
        "7124E080928D466FBB4FDD971D16697B",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "7124E080928D466FBB4FDD971D16697B"
    },
    "B9C062BB159D412BADF4BAA3598777F2": {
      "id": "B9C062BB159D412BADF4BAA3598777F2",
      "asnIdentifier": null,
      "position": 79000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "FL.1.Mod6.AD12",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Estimate lengths of objects by using inches.",
      "comments": [],
      "ancestorIds": [
        "7124E080928D466FBB4FDD971D16697B",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "7124E080928D466FBB4FDD971D16697B"
    },
    "7F455C0D806F4F68A9370DC5DA834AAB": {
      "id": "7F455C0D806F4F68A9370DC5DA834AAB",
      "asnIdentifier": null,
      "position": 78000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod4.AD6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measure the length of an object and write the length as a whole number of centimeters.",
      "comments": [],
      "ancestorIds": [
        "7124E080928D466FBB4FDD971D16697B",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "7124E080928D466FBB4FDD971D16697B"
    },
    "F41277AABC5D4F78A74A4099972719F5": {
      "id": "F41277AABC5D4F78A74A4099972719F5",
      "asnIdentifier": null,
      "position": 77000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod4.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measure and compare the lengths of two objects.",
      "comments": [],
      "ancestorIds": [
        "7124E080928D466FBB4FDD971D16697B",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "7124E080928D466FBB4FDD971D16697B"
    },
    "59A7C182724C451BB343B1FF3A0CB38E": {
      "id": "59A7C182724C451BB343B1FF3A0CB38E",
      "asnIdentifier": null,
      "position": 76000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod4.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measure and order the lengths of three or more objects.",
      "comments": [],
      "ancestorIds": [
        "7124E080928D466FBB4FDD971D16697B",
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "7124E080928D466FBB4FDD971D16697B"
    },
    "7124E080928D466FBB4FDD971D16697B": {
      "id": "7124E080928D466FBB4FDD971D16697B",
      "asnIdentifier": null,
      "position": 75000,
      "depth": 1,
      "listId": "1.",
      "statementNotation": "MA.1.M.1.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Estimate the length of an object to the nearest inch. Measure the length of an object to the nearest inch or centimeter.",
      "comments": [],
      "ancestorIds": [
        "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
      ],
      "parentId": "F0B0C336F50D4DEDA5AEC4357BBFA6C7"
    },
    "F0B0C336F50D4DEDA5AEC4357BBFA6C7": {
      "id": "F0B0C336F50D4DEDA5AEC4357BBFA6C7",
      "asnIdentifier": null,
      "position": 74000,
      "depth": 0,
      "listId": "IV.",
      "statementNotation": "M.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measurement",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "0544C90CE6C94310856CA4CC029A26BE": {
      "id": "0544C90CE6C94310856CA4CC029A26BE",
      "asnIdentifier": null,
      "position": 73000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod2.AD8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Interpret data and answer questions about tally marks and picture graphs.",
      "comments": [],
      "ancestorIds": [
        "FBD2070074284882810A342B948E0E7B",
        "3F1CE8AAEAE94671B432CAE80490B8C5"
      ],
      "parentId": "FBD2070074284882810A342B948E0E7B"
    },
    "A51DA1E64F6345648AE1E187CE99D19F": {
      "id": "A51DA1E64F6345648AE1E187CE99D19F",
      "asnIdentifier": null,
      "position": 72000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare category totals in graphs by using the symbols >, =, and <.",
      "comments": [],
      "ancestorIds": [
        "FBD2070074284882810A342B948E0E7B",
        "3F1CE8AAEAE94671B432CAE80490B8C5"
      ],
      "parentId": "FBD2070074284882810A342B948E0E7B"
    },
    "FBD2070074284882810A342B948E0E7B": {
      "id": "FBD2070074284882810A342B948E0E7B",
      "asnIdentifier": null,
      "position": 71000,
      "depth": 1,
      "listId": "2.",
      "statementNotation": "1.DP.1.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Interpret data represented with tally marks or pictographs by calculating the total number of data points and comparing the totals of different categories.",
      "comments": [],
      "ancestorIds": [
        "3F1CE8AAEAE94671B432CAE80490B8C5"
      ],
      "parentId": "3F1CE8AAEAE94671B432CAE80490B8C5"
    },
    "C39CBB03B59743FEB73D2E687D20EE10": {
      "id": "C39CBB03B59743FEB73D2E687D20EE10",
      "asnIdentifier": null,
      "position": 70000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD9",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Collect and represent data with up to three categories and write how many are in each category.",
      "comments": [],
      "ancestorIds": [
        "799B49C2D1374406A6633A9285C4D583",
        "3F1CE8AAEAE94671B432CAE80490B8C5"
      ],
      "parentId": "799B49C2D1374406A6633A9285C4D583"
    },
    "799B49C2D1374406A6633A9285C4D583": {
      "id": "799B49C2D1374406A6633A9285C4D583",
      "asnIdentifier": null,
      "position": 69000,
      "depth": 1,
      "listId": "1.",
      "statementNotation": "1.DP.1.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Collect data into categories and represent the results using tally marks or pictographs.  A class collects data on the number of students whose birthday is in each month of the year and represents it using tally marks.",
      "comments": [],
      "ancestorIds": [
        "3F1CE8AAEAE94671B432CAE80490B8C5"
      ],
      "parentId": "3F1CE8AAEAE94671B432CAE80490B8C5"
    },
    "3F1CE8AAEAE94671B432CAE80490B8C5": {
      "id": "3F1CE8AAEAE94671B432CAE80490B8C5",
      "asnIdentifier": null,
      "position": 68000,
      "depth": 0,
      "listId": "III.",
      "statementNotation": "DP.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Data Analysis and Probability",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "5797C6CBFE3342318850BC802300306A": {
      "id": "5797C6CBFE3342318850BC802300306A",
      "asnIdentifier": null,
      "position": 67000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod2.AD7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Find the unknown in an addition or subtraction equation.",
      "comments": [],
      "ancestorIds": [
        "C150FE0F0C61460E96CF242F5C3C231B",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "C150FE0F0C61460E96CF242F5C3C231B"
    },
    "C150FE0F0C61460E96CF242F5C3C231B": {
      "id": "C150FE0F0C61460E96CF242F5C3C231B",
      "asnIdentifier": null,
      "position": 66000,
      "depth": 1,
      "listId": "5.",
      "statementNotation": "1.AR.2.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the unknown whole number in an addition or subtraction equation, relating three whole numbers, with the unknown in any position.",
      "comments": [],
      "ancestorIds": [
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "59BD4F690DB74F1B927B3FCBEAFF64F3"
    },
    "B220FEC5DBD04EFE925F4FD5386B94FF": {
      "id": "B220FEC5DBD04EFE925F4FD5386B94FF",
      "asnIdentifier": null,
      "position": 65000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod2.AD6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add or subtract to make groups equal and write a true number sentence to match.",
      "comments": [],
      "ancestorIds": [
        "76FF4598C35A446E91E011BF263C641C",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "76FF4598C35A446E91E011BF263C641C"
    },
    "62C0AEE0A4D34FADA9CCF9A94C1711BB": {
      "id": "62C0AEE0A4D34FADA9CCF9A94C1711BB",
      "asnIdentifier": null,
      "position": 64000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine and explain whether addition and/or subtraction number sentences are true or false.",
      "comments": [],
      "ancestorIds": [
        "76FF4598C35A446E91E011BF263C641C",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "76FF4598C35A446E91E011BF263C641C"
    },
    "76FF4598C35A446E91E011BF263C641C": {
      "id": "76FF4598C35A446E91E011BF263C641C",
      "asnIdentifier": null,
      "position": 63000,
      "depth": 1,
      "listId": "4.",
      "statementNotation": "1.AR.2.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine and explain if equations involving addition or subtraction are true or false.\nGiven the following equations, 8 = 8, 9 − 1 = 7, 5 + 2 = 2 + 5 and 1 = 9 − 8, 9 − 1 = 7 can be determined to be false.",
      "comments": [],
      "ancestorIds": [
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "59BD4F690DB74F1B927B3FCBEAFF64F3"
    },
    "4BF92A8724D34C08AEC567BD8D031544": {
      "id": "4BF92A8724D34C08AEC567BD8D031544",
      "asnIdentifier": null,
      "position": 62000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod2.AD5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract by using think addition strategies.",
      "comments": [],
      "ancestorIds": [
        "0441A4FE9AB44F0A833667C30396D1EA",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "0441A4FE9AB44F0A833667C30396D1EA"
    },
    "0441A4FE9AB44F0A833667C30396D1EA": {
      "id": "0441A4FE9AB44F0A833667C30396D1EA",
      "asnIdentifier": null,
      "position": 61000,
      "depth": 1,
      "listId": "3.",
      "statementNotation": "1.AR.2.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Restate a subtraction problem as a missing addend problem using the relationship between addition and subtraction.",
      "comments": [],
      "ancestorIds": [
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "59BD4F690DB74F1B927B3FCBEAFF64F3"
    },
    "6835D7D4BE634528BF3010DD574E87BE": {
      "id": "6835D7D4BE634528BF3010DD574E87BE",
      "asnIdentifier": null,
      "position": 60000,
      "depth": 2,
      "listId": "F",
      "statementNotation": "FL.1.Mod6.AD11",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent and solve word problems within 20 involving all addition and subtraction problem types by using drawings and an equation with a symbol for the unknown",
      "comments": [],
      "ancestorIds": [
        "BC0E7CD1FF2A41988EC972BAD04A86B5",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BC0E7CD1FF2A41988EC972BAD04A86B5"
    },
    "BD975DA90B93465AB3FBE6373CC08F94": {
      "id": "BD975DA90B93465AB3FBE6373CC08F94",
      "asnIdentifier": null,
      "position": 59000,
      "depth": 2,
      "listId": "E",
      "statementNotation": "FL.1.Mod4.AD5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent and solve word problems within 20 with grade 1 addition and subtraction comparison problem\ntypes involving represented lengths.",
      "comments": [],
      "ancestorIds": [
        "BC0E7CD1FF2A41988EC972BAD04A86B5",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BC0E7CD1FF2A41988EC972BAD04A86B5"
    },
    "F8FC70C7274C483BBC22AAC091AA2306": {
      "id": "F8FC70C7274C483BBC22AAC091AA2306",
      "asnIdentifier": null,
      "position": 58000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "FL.1.Mod2.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent and solve word problems within 20 involving grades K and 1 addition and subtraction problem types.",
      "comments": [],
      "ancestorIds": [
        "BC0E7CD1FF2A41988EC972BAD04A86B5",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BC0E7CD1FF2A41988EC972BAD04A86B5"
    },
    "1C34ED645B4C4B0EB78AE43FDB4A46EF": {
      "id": "1C34ED645B4C4B0EB78AE43FDB4A46EF",
      "asnIdentifier": null,
      "position": 57000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod3.AD8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent word problems by using drawings and a number sentence and solve word problems within 20 involving three addends.",
      "comments": [],
      "ancestorIds": [
        "BC0E7CD1FF2A41988EC972BAD04A86B5",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BC0E7CD1FF2A41988EC972BAD04A86B5"
    },
    "6A60C8C623E54A2387F150BFA804442D": {
      "id": "6A60C8C623E54A2387F150BFA804442D",
      "asnIdentifier": null,
      "position": 56000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod2.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent by using drawings and a number sentence and solve how many more word problems within 20.",
      "comments": [],
      "ancestorIds": [
        "BC0E7CD1FF2A41988EC972BAD04A86B5",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BC0E7CD1FF2A41988EC972BAD04A86B5"
    },
    "FE098E495E41451E9FA381166C09374C": {
      "id": "FE098E495E41451E9FA381166C09374C",
      "asnIdentifier": null,
      "position": 55000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod2.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent and solve word problems within 20 involving grades K and 1 addition and subtraction\nproblem types.",
      "comments": [],
      "ancestorIds": [
        "BC0E7CD1FF2A41988EC972BAD04A86B5",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BC0E7CD1FF2A41988EC972BAD04A86B5"
    },
    "BC0E7CD1FF2A41988EC972BAD04A86B5": {
      "id": "BC0E7CD1FF2A41988EC972BAD04A86B5",
      "asnIdentifier": null,
      "position": 54000,
      "depth": 1,
      "listId": "2.",
      "statementNotation": "1.AR.1.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Solve addition and subtraction real-world problems using objects, drawings or equations to represent the problem.",
      "comments": [],
      "ancestorIds": [
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "59BD4F690DB74F1B927B3FCBEAFF64F3"
    },
    "491F57D448ED495495952854158A856A": {
      "id": "491F57D448ED495495952854158A856A",
      "asnIdentifier": null,
      "position": 53000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "FL.1.Mod3.AD8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent word problems by using drawings and a number sentence and solve word problems within 20 involving three addends.",
      "comments": [],
      "ancestorIds": [
        "BAAA475628024FE0B8AFE3BD42CE38C0",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BAAA475628024FE0B8AFE3BD42CE38C0"
    },
    "B5132469A5514B53BEF720F618F09D63": {
      "id": "B5132469A5514B53BEF720F618F09D63",
      "asnIdentifier": null,
      "position": 52000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod3.AD7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add within 20 with equations that have more than two addends.",
      "comments": [],
      "ancestorIds": [
        "BAAA475628024FE0B8AFE3BD42CE38C0",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BAAA475628024FE0B8AFE3BD42CE38C0"
    },
    "8BA47820609A44398C9AB5C5A6D8E885": {
      "id": "8BA47820609A44398C9AB5C5A6D8E885",
      "asnIdentifier": null,
      "position": 51000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod3.AD6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add within 20 by using strategies such as applying the commutative and associative properties to make 10 or by counting on to 10.",
      "comments": [],
      "ancestorIds": [
        "BAAA475628024FE0B8AFE3BD42CE38C0",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BAAA475628024FE0B8AFE3BD42CE38C0"
    },
    "42C7ED25179740A3B4AF851D33F3A39E": {
      "id": "42C7ED25179740A3B4AF851D33F3A39E",
      "asnIdentifier": null,
      "position": 50000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply the commutative property of addition as a strategy to add.",
      "comments": [],
      "ancestorIds": [
        "BAAA475628024FE0B8AFE3BD42CE38C0",
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "BAAA475628024FE0B8AFE3BD42CE38C0"
    },
    "BAAA475628024FE0B8AFE3BD42CE38C0": {
      "id": "BAAA475628024FE0B8AFE3BD42CE38C0",
      "asnIdentifier": null,
      "position": 49000,
      "depth": 1,
      "listId": "1.",
      "statementNotation": "1.AR.1.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply properties of addition to find a sum of three or more whole numbers.\n8 + 7 + 2 is equivalent to 7 + 8 + 2 which is equivalent to 7 + 10 which equals 17.",
      "comments": [],
      "ancestorIds": [
        "59BD4F690DB74F1B927B3FCBEAFF64F3"
      ],
      "parentId": "59BD4F690DB74F1B927B3FCBEAFF64F3"
    },
    "59BD4F690DB74F1B927B3FCBEAFF64F3": {
      "id": "59BD4F690DB74F1B927B3FCBEAFF64F3",
      "asnIdentifier": null,
      "position": 48000,
      "depth": 0,
      "listId": "II.",
      "statementNotation": "AR.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Algebraic Reasoning",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    },
    "671AA860210147B2B0E39DD574589A6C": {
      "id": "671AA860210147B2B0E39DD574589A6C",
      "asnIdentifier": null,
      "position": 47000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod5.AD8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract a one-digit number from a two-digit number by using manipulatives, number lines, drawings, or equations.",
      "comments": [],
      "ancestorIds": [
        "16DCB321126C46AC84629A7E7770DEF2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "16DCB321126C46AC84629A7E7770DEF2"
    },
    "2BB5EEA2D58C44069076236995624CEA": {
      "id": "2BB5EEA2D58C44069076236995624CEA",
      "asnIdentifier": null,
      "position": 46000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod3.AD5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract within 20 by using tens and ones to take from the ones.",
      "comments": [],
      "ancestorIds": [
        "16DCB321126C46AC84629A7E7770DEF2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "16DCB321126C46AC84629A7E7770DEF2"
    },
    "16DCB321126C46AC84629A7E7770DEF2": {
      "id": "16DCB321126C46AC84629A7E7770DEF2",
      "asnIdentifier": null,
      "position": 45000,
      "depth": 1,
      "listId": "10.",
      "statementNotation": "1.NSO.2.5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explore subtraction of a one-digit number from a two-digit number.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "67E43559309F478F888FC883C02B5755": {
      "id": "67E43559309F478F888FC883C02B5755",
      "asnIdentifier": null,
      "position": 44000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod5.AD7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add a two-digit number and a one-digit number that have a sum within 100 by using manipulatives, number lines, drawings, or models.",
      "comments": [],
      "ancestorIds": [
        "482940DAE3EF4E95AB1C94106B562BBD",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "482940DAE3EF4E95AB1C94106B562BBD"
    },
    "1932D0C702354371A221B6A63D62A3D1": {
      "id": "1932D0C702354371A221B6A63D62A3D1",
      "asnIdentifier": null,
      "position": 43000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod3.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add within 20 by decomposing a teen addend to add the ones first.",
      "comments": [],
      "ancestorIds": [
        "482940DAE3EF4E95AB1C94106B562BBD",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "482940DAE3EF4E95AB1C94106B562BBD"
    },
    "482940DAE3EF4E95AB1C94106B562BBD": {
      "id": "482940DAE3EF4E95AB1C94106B562BBD",
      "asnIdentifier": null,
      "position": 42000,
      "depth": 1,
      "listId": "9.",
      "statementNotation": "1.NSO.2.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Explore the addition of a two-digit number and a one-digit number with sums to 100.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "E4B72B438BFA40E3A2BEAD64EC13F19F": {
      "id": "E4B72B438BFA40E3A2BEAD64EC13F19F",
      "asnIdentifier": null,
      "position": 41000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod6.AD10",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Find 1 more and 1 less than a two-digit number.",
      "comments": [],
      "ancestorIds": [
        "2E62BB77018B4BC6A518B90999896685",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "2E62BB77018B4BC6A518B90999896685"
    },
    "4A40E8760FE5406E845B493A2A4116A6": {
      "id": "4A40E8760FE5406E845B493A2A4116A6",
      "asnIdentifier": null,
      "position": 40000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod5.AD6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Find 10 more and 10 less than a two-digit number.",
      "comments": [],
      "ancestorIds": [
        "2E62BB77018B4BC6A518B90999896685",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "2E62BB77018B4BC6A518B90999896685"
    },
    "2E62BB77018B4BC6A518B90999896685": {
      "id": "2E62BB77018B4BC6A518B90999896685",
      "asnIdentifier": null,
      "position": 39000,
      "depth": 1,
      "listId": "8.",
      "statementNotation": "1.NSO.2.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify the number that is one more, one less, ten more and ten less than a given two-digit number.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "F006090C40C645EFA7ADBB403DDD9FB7": {
      "id": "F006090C40C645EFA7ADBB403DDD9FB7",
      "asnIdentifier": null,
      "position": 38000,
      "depth": 2,
      "listId": "G",
      "statementNotation": "FL.1.Mod3.AD6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add within 20 by using strategies such as applying the commutative and associative properties to make 10 or by counting on to 10.",
      "comments": [],
      "ancestorIds": [
        "B851FFA6FB204FACA506C2FCBD754A13",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "B851FFA6FB204FACA506C2FCBD754A13"
    },
    "513880784D7643DDBDEFB973296A598C": {
      "id": "513880784D7643DDBDEFB973296A598C",
      "asnIdentifier": null,
      "position": 37000,
      "depth": 2,
      "listId": "F",
      "statementNotation": "FL.1.Mod3.AD5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract within 20 by using tens and ones to take from the ones.",
      "comments": [],
      "ancestorIds": [
        "B851FFA6FB204FACA506C2FCBD754A13",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "B851FFA6FB204FACA506C2FCBD754A13"
    },
    "833E2CA828F24823930A1A87E444F521": {
      "id": "833E2CA828F24823930A1A87E444F521",
      "asnIdentifier": null,
      "position": 36000,
      "depth": 2,
      "listId": "E",
      "statementNotation": "FL.1.Mod3.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add within 20 by decomposing a teen addend to add the ones first.",
      "comments": [],
      "ancestorIds": [
        "B851FFA6FB204FACA506C2FCBD754A13",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "B851FFA6FB204FACA506C2FCBD754A13"
    },
    "530775DAA96740E3BC431254D7C6E586": {
      "id": "530775DAA96740E3BC431254D7C6E586",
      "asnIdentifier": null,
      "position": 35000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "FL.1.Mod3.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract within 20 by using strategies such as counting on to 10, counting back to 10, or taking from 10.",
      "comments": [],
      "ancestorIds": [
        "B851FFA6FB204FACA506C2FCBD754A13",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "B851FFA6FB204FACA506C2FCBD754A13"
    },
    "019640DBAB074E6080650BA1AB141146": {
      "id": "019640DBAB074E6080650BA1AB141146",
      "asnIdentifier": null,
      "position": 34000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod2.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract within 20 by using strategies such as counting on or back.",
      "comments": [],
      "ancestorIds": [
        "B851FFA6FB204FACA506C2FCBD754A13",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "B851FFA6FB204FACA506C2FCBD754A13"
    },
    "608F1D9F9BF442B1832CB77B0898C5B1": {
      "id": "608F1D9F9BF442B1832CB77B0898C5B1",
      "asnIdentifier": null,
      "position": 33000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod1.AD7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Apply the commutative property of addition as a strategy to add.",
      "comments": [],
      "ancestorIds": [
        "B851FFA6FB204FACA506C2FCBD754A13",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "B851FFA6FB204FACA506C2FCBD754A13"
    },
    "79C2D6E026C442F79218F8093B3C3A8E": {
      "id": "79C2D6E026C442F79218F8093B3C3A8E",
      "asnIdentifier": null,
      "position": 32000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD6",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add within 20 by using strategies such as counting on or by creating an equivalent but easier problem.",
      "comments": [],
      "ancestorIds": [
        "B851FFA6FB204FACA506C2FCBD754A13",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "B851FFA6FB204FACA506C2FCBD754A13"
    },
    "B851FFA6FB204FACA506C2FCBD754A13": {
      "id": "B851FFA6FB204FACA506C2FCBD754A13",
      "asnIdentifier": null,
      "position": 31000,
      "depth": 1,
      "listId": "7.",
      "statementNotation": "1.NSO.2.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add two whole numbers with sums from 0 to 20, and subtract using related facts with procedural reliability.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "517E316C797C4AFA816C1E0B69C24000": {
      "id": "517E316C797C4AFA816C1E0B69C24000",
      "asnIdentifier": null,
      "position": 30000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod2.AD2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract with automaticity within 10.",
      "comments": [],
      "ancestorIds": [
        "ED8311F1C5844A168234417C7D1405EE",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "ED8311F1C5844A168234417C7D1405EE"
    },
    "AF0EFAD9AB15465393FC2C8ABDFBCDD1": {
      "id": "AF0EFAD9AB15465393FC2C8ABDFBCDD1",
      "asnIdentifier": null,
      "position": 29000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Add with automaticity within 10.",
      "comments": [],
      "ancestorIds": [
        "ED8311F1C5844A168234417C7D1405EE",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "ED8311F1C5844A168234417C7D1405EE"
    },
    "ED8311F1C5844A168234417C7D1405EE": {
      "id": "ED8311F1C5844A168234417C7D1405EE",
      "asnIdentifier": null,
      "position": 28000,
      "depth": 1,
      "listId": "6.",
      "statementNotation": "1.NSO.2.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Recall addition facts with sums to 10 and related subtraction facts with automaticity.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "A322A3D26DA54ACB94C5E40C6EE0ACED": {
      "id": "A322A3D26DA54ACB94C5E40C6EE0ACED",
      "asnIdentifier": null,
      "position": 27000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod5.AD5",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare two-digit numbers by using the symbols >, =, and <.",
      "comments": [],
      "ancestorIds": [
        "8D8D709DE9E24D169489060AB7264AE7",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "8D8D709DE9E24D169489060AB7264AE7"
    },
    "69FEC42DA3654D51B1AB479E28393D15": {
      "id": "69FEC42DA3654D51B1AB479E28393D15",
      "asnIdentifier": null,
      "position": 26000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod4.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measure and order the lengths of three or more objects.",
      "comments": [],
      "ancestorIds": [
        "8D8D709DE9E24D169489060AB7264AE7",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "8D8D709DE9E24D169489060AB7264AE7"
    },
    "FD551AA202D1465B81F44E7FA2F0638E": {
      "id": "FD551AA202D1465B81F44E7FA2F0638E",
      "asnIdentifier": null,
      "position": 25000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare category totals in graphs by using the symbols >, =, and <.",
      "comments": [],
      "ancestorIds": [
        "8D8D709DE9E24D169489060AB7264AE7",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "8D8D709DE9E24D169489060AB7264AE7"
    },
    "8D8D709DE9E24D169489060AB7264AE7": {
      "id": "8D8D709DE9E24D169489060AB7264AE7",
      "asnIdentifier": null,
      "position": 24000,
      "depth": 1,
      "listId": "5.",
      "statementNotation": "1.NSO.1.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Plot, order and compare whole numbers up to 100.\nThe numbers 72, 35 and 58 can be arranged in ascending order as 35, 58 and 72.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "54EFEE388B2544C68BB12CB27EF5D69A": {
      "id": "54EFEE388B2544C68BB12CB27EF5D69A",
      "asnIdentifier": null,
      "position": 23000,
      "depth": 2,
      "listId": "G",
      "statementNotation": "FL.1.Mod5.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Determine the values represented by the digits of a two-digit number.",
      "comments": [],
      "ancestorIds": [
        "BAAAD98D159C4545A1AE8C7CC022BC5A",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "BAAAD98D159C4545A1AE8C7CC022BC5A"
    },
    "E6D4267FA17446CEB24DC45D180FFFFD": {
      "id": "E6D4267FA17446CEB24DC45D180FFFFD",
      "asnIdentifier": null,
      "position": 22000,
      "depth": 2,
      "listId": "F",
      "statementNotation": "FL.1.Mod5.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent two-digit numbers within 99 in multiple ways as tens and ones.",
      "comments": [],
      "ancestorIds": [
        "BAAAD98D159C4545A1AE8C7CC022BC5A",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "BAAAD98D159C4545A1AE8C7CC022BC5A"
    },
    "BA4DC46C6BB74346A6E69C3D6980A4C5": {
      "id": "BA4DC46C6BB74346A6E69C3D6980A4C5",
      "asnIdentifier": null,
      "position": 21000,
      "depth": 2,
      "listId": "E",
      "statementNotation": "FL.1.Mod5.AD2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent a set of up to 99 objects with a two-digit number by composing tens.",
      "comments": [],
      "ancestorIds": [
        "BAAAD98D159C4545A1AE8C7CC022BC5A",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "BAAAD98D159C4545A1AE8C7CC022BC5A"
    },
    "15200B32307B46AABEAA0CBE5AB1F544": {
      "id": "15200B32307B46AABEAA0CBE5AB1F544",
      "asnIdentifier": null,
      "position": 20000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "FL.1.Mod4.AD2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Draw or write to represent a length greater than 10 centimeters as tens and ones in more than one way\nby using a linear drawing, number bond, or number sentence.",
      "comments": [],
      "ancestorIds": [
        "BAAAD98D159C4545A1AE8C7CC022BC5A",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "BAAAD98D159C4545A1AE8C7CC022BC5A"
    },
    "47C41E36AF8C43D3BC15A7F52DADF0A8": {
      "id": "47C41E36AF8C43D3BC15A7F52DADF0A8",
      "asnIdentifier": null,
      "position": 19000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod3.AD2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent two-digit numbers within 50 as tens and ones.",
      "comments": [],
      "ancestorIds": [
        "BAAAD98D159C4545A1AE8C7CC022BC5A",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "BAAAD98D159C4545A1AE8C7CC022BC5A"
    },
    "158C38C929F349DEA712F282138D0C7A": {
      "id": "158C38C929F349DEA712F282138D0C7A",
      "asnIdentifier": null,
      "position": 18000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod3.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent a set of up to 50 objects with a two-digit number by composing tens.",
      "comments": [],
      "ancestorIds": [
        "BAAAD98D159C4545A1AE8C7CC022BC5A",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "BAAAD98D159C4545A1AE8C7CC022BC5A"
    },
    "8971BFE134934BA4A84824616F88C6F2": {
      "id": "8971BFE134934BA4A84824616F88C6F2",
      "asnIdentifier": null,
      "position": 17000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Fluently decompose totals within 10 in more than one way.",
      "comments": [],
      "ancestorIds": [
        "BAAAD98D159C4545A1AE8C7CC022BC5A",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "BAAAD98D159C4545A1AE8C7CC022BC5A"
    },
    "BAAAD98D159C4545A1AE8C7CC022BC5A": {
      "id": "BAAAD98D159C4545A1AE8C7CC022BC5A",
      "asnIdentifier": null,
      "position": 16000,
      "depth": 1,
      "listId": "4.",
      "statementNotation": "1.NSO.1.3",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compose and decompose two-digit numbers in multiple ways using tens and ones. Demonstrate each composition or decomposition with objects, drawings and expressions or equations.\nThe number 37 can be expressed as 3 tens + 7 ones, 2 tens + 17 ones or as 37 ones.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "79FE1AF7AA6D49A5A7A9A871607CF8B8": {
      "id": "79FE1AF7AA6D49A5A7A9A871607CF8B8",
      "asnIdentifier": null,
      "position": 15000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod6.AD9",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Plot numbers up to 100 on a number path or ruler.",
      "comments": [],
      "ancestorIds": [
        "EBFFDA09DC664076BB18AEC7E047985C",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "EBFFDA09DC664076BB18AEC7E047985C"
    },
    "8D0CE8418161408989B30575ABCBADC8": {
      "id": "8D0CE8418161408989B30575ABCBADC8",
      "asnIdentifier": null,
      "position": 14000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod4.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Measure and compare the lengths of two objects.",
      "comments": [],
      "ancestorIds": [
        "EBFFDA09DC664076BB18AEC7E047985C",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "EBFFDA09DC664076BB18AEC7E047985C"
    },
    "80030DB065784EC39BEFC8723AE93E87": {
      "id": "80030DB065784EC39BEFC8723AE93E87",
      "asnIdentifier": null,
      "position": 13000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Compare category totals in graphs by using the symbols >, =, and <.",
      "comments": [],
      "ancestorIds": [
        "EBFFDA09DC664076BB18AEC7E047985C",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "EBFFDA09DC664076BB18AEC7E047985C"
    },
    "EBFFDA09DC664076BB18AEC7E047985C": {
      "id": "EBFFDA09DC664076BB18AEC7E047985C",
      "asnIdentifier": null,
      "position": 12000,
      "depth": 1,
      "listId": "3.",
      "statementNotation": "1.NSO.1.4",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Plot, order and compare whole numbers up to 100.\nThe numbers 72, 35 and 58 can be arranged in ascending order as 35, 58 and 72.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "02712FA9B64145DC969A95B48E8275E3": {
      "id": "02712FA9B64145DC969A95B48E8275E3",
      "asnIdentifier": null,
      "position": 11000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod5.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "\"Read and write numbers to 100 as numerals and as expressions or equations by using tens and ones. Read\nnumbers to 100 in words.\"",
      "comments": [],
      "ancestorIds": [
        "1420B0F193A740D892AD26F23F41DB46",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "1420B0F193A740D892AD26F23F41DB46"
    },
    "1420B0F193A740D892AD26F23F41DB46": {
      "id": "1420B0F193A740D892AD26F23F41DB46",
      "asnIdentifier": null,
      "position": 10000,
      "depth": 1,
      "listId": "2.",
      "statementNotation": "1.NSO.1.2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Read numbers from 0 to 100 written in standard form, expanded form and word form. Write numbers from 0 to 100 using standard form and expanded form.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "5A81B148663D4A46A37AF19B01D34E53": {
      "id": "5A81B148663D4A46A37AF19B01D34E53",
      "asnIdentifier": null,
      "position": 9000,
      "depth": 2,
      "listId": "G",
      "statementNotation": "FL.1.Mod6.AD8",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Skip count by fives within 100.",
      "comments": [],
      "ancestorIds": [
        "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2"
    },
    "C4D47E989DD243208DDD8C2108EE7C3E": {
      "id": "C4D47E989DD243208DDD8C2108EE7C3E",
      "asnIdentifier": null,
      "position": 8000,
      "depth": 2,
      "listId": "F",
      "statementNotation": "FL.1.Mod6.AD7",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Identify numbers counted forward and backward by ones within 120.",
      "comments": [],
      "ancestorIds": [
        "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2"
    },
    "9ED9E29240D14680850824EDF618D198": {
      "id": "9ED9E29240D14680850824EDF618D198",
      "asnIdentifier": null,
      "position": 7000,
      "depth": 2,
      "listId": "E",
      "statementNotation": "FL.1.Mod4.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Skip count by twos within 20.",
      "comments": [],
      "ancestorIds": [
        "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2"
    },
    "79E90C4858894AAFAC05BEF6784A13B3": {
      "id": "79E90C4858894AAFAC05BEF6784A13B3",
      "asnIdentifier": null,
      "position": 6000,
      "depth": 2,
      "listId": "D",
      "statementNotation": "FL.1.Mod3.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Represent a set of up to 50 objects with a two-digit number by composing tens.",
      "comments": [],
      "ancestorIds": [
        "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2"
    },
    "CF7B12E098F5480BAC81DCD41968D48B": {
      "id": "CF7B12E098F5480BAC81DCD41968D48B",
      "asnIdentifier": null,
      "position": 5000,
      "depth": 2,
      "listId": "C",
      "statementNotation": "FL.1.Mod2.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Subtract within 20 by using strategies such as counting on or back.",
      "comments": [],
      "ancestorIds": [
        "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2"
    },
    "3CFB7BBE324B439FB791366D476B21B6": {
      "id": "3CFB7BBE324B439FB791366D476B21B6",
      "asnIdentifier": null,
      "position": 4000,
      "depth": 2,
      "listId": "B",
      "statementNotation": "FL.1.Mod1.AD2",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Count on from 10 to find totals between 11 and 19.",
      "comments": [],
      "ancestorIds": [
        "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2"
    },
    "A0C77FBFD8DA4338B6609ED285113EE3": {
      "id": "A0C77FBFD8DA4338B6609ED285113EE3",
      "asnIdentifier": null,
      "position": 3000,
      "depth": 2,
      "listId": "A",
      "statementNotation": "FL.1.Mod1.AD1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Count on to find the total number of objects in a set and represent the total with an addition number sentence.",
      "comments": [],
      "ancestorIds": [
        "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2"
    },
    "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2": {
      "id": "5CC0EA4AD3604DBE8B66C8CEA9A5ACE2",
      "asnIdentifier": null,
      "position": 2000,
      "depth": 1,
      "listId": "1.",
      "statementNotation": "1.NSO.1.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Starting at a given number, count forward and backwards within 120 by ones. Skip count by 2s to 20 and by 5s to 100.",
      "comments": [],
      "ancestorIds": [
        "58F1D5C05E4F471099919C3F78CF69DB"
      ],
      "parentId": "58F1D5C05E4F471099919C3F78CF69DB"
    },
    "58F1D5C05E4F471099919C3F78CF69DB": {
      "id": "58F1D5C05E4F471099919C3F78CF69DB",
      "asnIdentifier": null,
      "position": 1000,
      "depth": 0,
      "listId": "I.",
      "statementNotation": "NSO.1",
      "altStatementNotation": null,
      "statementLabel": null,
      "description": "Number Sense and Operations",
      "comments": [],
      "ancestorIds": [],
      "parentId": null
    }
  }
}